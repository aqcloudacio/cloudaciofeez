{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\InvestmentDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\InvestmentDetail.vue","mtime":1602563636859},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["InvestmentDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InvestmentDetail.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n\r\n  <v-form @submit.prevent=\"onSubmit\">\r\n    <v-container>\r\n      <v-row>\r\n        <v-col>\r\n          <v-card class=\"pa-4\">\r\n            <v-row>\r\n              <v-col v-if=\"template===true\">\r\n                <v-autocomplete\r\n                  v-model=\"inv.name\"\r\n                  :items=\"investmentNames\"\r\n                  :return-object=\"true\"\r\n                  item-text=\"name\"\r\n                  dense\r\n                  label=\"Investment Name\"/>\r\n              </v-col>\r\n              <!-- <v-col v-if=\"template==false\">\r\n                <v-text-field\r\n                  :value=\"customOrFull\"\r\n                  @input=\"inv.custom_name = $event\"\r\n                  dense\r\n                  label=\"Investment Name\"/>\r\n              </v-col> -->\r\n            </v-row>\r\n            <v-row>\r\n              <!-- <v-col>\r\n                <v-text-field\r\n                  v-if=\"template==false\"\r\n                  label=\"Amount\"\r\n                  dense\r\n                  type=\"number\"\r\n                  v-model=\"inv.amount\" />\r\n              </v-col> -->\r\n              <v-col>\r\n                <v-checkbox v-model=\"inv.cash\" label=\"Cash Account\"></v-checkbox>\r\n              </v-col>\r\n              <v-col>\r\n                <v-checkbox v-model=\"inv.TD\" label=\"Term Deposit\"></v-checkbox>\r\n              </v-col>\r\n            </v-row>\r\n            <v-row>\r\n              <v-col>\r\n                <v-autocomplete\r\n                    hide-details\r\n                    clearable\r\n                    :value=\"inv.investment_class\"\r\n                    @input=\"(inv.investment_class = $event) && (inv.investment_class_id = $event)\"\r\n                    :items=\"investmentClassList\"\r\n                    item-text=\"name\"\r\n                    item-value=\"id\"\r\n                    label=\"Select an investment class\"/>\r\n                </v-col>\r\n              </v-row>\r\n              <v-row>\r\n                <v-col>\r\n                  <v-text-field\r\n                    hide-details=\"auto\"\r\n                    label=\"Investment fee\"\r\n                    type=\"number\"\r\n                    suffix=\"%\"\r\n                    :value=\"getPercentage(inv, 'investment_fee')\"\r\n                    @change=\"setPercentage($event, inv, '_investment_fee')\"\r\n                  />\r\n                </v-col>\r\n                <v-col>\r\n                  <v-text-field\r\n                  hide-details=\"auto\"\r\n\r\n                  label=\"Buy spread\"\r\n                  type=\"number\"\r\n                  suffix=\"%\"\r\n                  :value=\"getPercentage(inv, 'buy_spread')\"\r\n                  @change=\"setPercentage($event, inv, 'buy_spread')\"\r\n                 />\r\n                </v-col>\r\n                <v-col>\r\n                  <v-text-field\r\n                  hide-details=\"auto\"\r\n\r\n                  label=\"Sell spread\"\r\n                  type=\"number\"\r\n                  suffix=\"%\"\r\n                  :value=\"getPercentage(inv, 'sell_spread')\"\r\n                  @change=\"setPercentage($event, inv, 'sell_spread')\" />\r\n                </v-col>\r\n              </v-row>\r\n              <v-row v-if=\"template==true\">\r\n                <v-col>\r\n                  <v-text-field\r\n                  label=\"APIR Code\"\r\n                  dense\r\n                  v-model=\"inv.APIR_code\" />\r\n                </v-col>\r\n                <v-col>\r\n                  <v-text-field\r\n                  label=\"ASX Code\"\r\n                  dense\r\n                  v-model=\"inv.ASX_code\" />\r\n                </v-col>\r\n                <v-col>\r\n                  <v-text-field\r\n                  label=\"Other Code\"\r\n                  dense\r\n                  v-model=\"inv.other_code\" />\r\n                </v-col>\r\n              </v-row>\r\n              <v-row v-if=\"template==true\">\r\n                <v-col>\r\n                  <v-autocomplete\r\n                    label=\"Platform Limitation\"\r\n                    dense\r\n                    v-model=\"inv.platform_limitation\"\r\n                    :items=\"platforms\"\r\n                    item-text=\"name\"\r\n                    item-value=\"id\"\r\n                  />\r\n                </v-col>\r\n              </v-row>\r\n\r\n            <v-btn type=\"submit\" color=\"primary\">Save</v-btn>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col v-if=\"!template\">\r\n          <InvestmentAAChartSummary\r\n            :RPAANames=\"customRPAANames\"\r\n            :aaSummary=\"aaSummary\"\r\n          />\r\n          <v-card>\r\n              <v-row\r\n                class=\"mx-2\"\r\n                v-for=\"aa in uniqueAA\"\r\n                :key=\"aa.id\"\r\n                dense>\r\n                <v-col :cols=\"9\">\r\n                    {{ aa.custom_name }}\r\n                </v-col>\r\n                <v-col>\r\n                  <v-text-field\r\n                  :cols=\"3\"\r\n                  dense\r\n                  suffix=\"%\"\r\n                  :value = \"getAAPercentage(aa)\"\r\n                  @change = \"setAAPercentage($event, aa)\"\r\n                  hide-details />\r\n                </v-col>\r\n              </v-row>\r\n            </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n    </v-form>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\n\r\nimport {\r\n  PLATFORM_AA_FETCH\r\n} from \"@/store/actions.type\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nimport InvestmentAAChartSummary from \"@/components/InvestmentAAChartSummary.vue\";\r\n\r\nexport default {\r\n  name: \"InvestmentDetail\",\r\n  props: {\r\n    investment: {\r\n      type: Object,\r\n      required: false,\r\n      default: function() {\r\n        return {\r\n          id: null,\r\n          custom_name: null,\r\n          investment_class: null,\r\n          amount: null,\r\n          investment_fee: null,\r\n          _investment_fee: null,\r\n          buy_spread: null,\r\n          sell_spread: null,\r\n          cash: false,\r\n          TD: false,\r\n        }\r\n      },\r\n    },\r\n    template: {\r\n      type: Boolean,\r\n      required: false\r\n    },\r\n    investmentClassList: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n  },\r\n  components: {\r\n    InvestmentAAChartSummary,\r\n  },\r\n  data() {\r\n    return {\r\n      error: null,\r\n      dialog: false,\r\n      platforms: null,\r\n      aaSummary: null,\r\n      aa: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activeScenario\", \"activePlatform\",\"investmentNames\"]),\r\n    inv: {\r\n      get() {\r\n        return this.investment\r\n      },\r\n      set(newInvestment) {\r\n        return newInvestment\r\n      }\r\n    },\r\n    customRPAANames() {\r\n      if (!this._.isEmpty(this.aaSummary)) {\r\n\r\n        let custom_names = this.aaSummary.map(a => a.custom_name);\r\n        let aanames = [...new Set(custom_names)];\r\n        return aanames\r\n        // return this.aaSummary.map(e => e.custom_name);\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    clearAA() {\r\n      if (!this._.isEmpty(this.aa) && !this._.isEmpty(this.aaSummary) ) {\r\n        // If an investment has any asset allocation names which do not match\r\n        // the default RP AA Names (AASummary.name), this computed prop will\r\n        // trigger a signal on save to clear all existing asset allocations\r\n        // and replace them with default RP AA Names.\r\n        let defaultRPAANames = this.aaSummary.map(e => e.name);\r\n        let cleanAANames = this.aa.filter(e => e.name != null)\r\n        let AANames = cleanAANames.map(e => e.name.name);\r\n        return (AANames.some(e => !defaultRPAANames.includes(e)))\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    rebuiltAA() {\r\n      if (this.clearAA) {\r\n        let rebuiltAA = new Array;\r\n        for (let aa of this.aaSummary) {\r\n          let item = new Object;\r\n          item['name_id'] = null;\r\n          item['rp_name_id'] = aa.id\r\n          item['investment'] = this.inv.id;\r\n          if (aa.aa_total_perc) {\r\n            item['percentage'] = (aa.aa_total_perc).toFixed(6);\r\n          } else {\r\n            item['percentage'] = 0\r\n          }\r\n          item['name'] = new Object();\r\n          item.name['name'] = aa.name;\r\n          if (item['percentage'] > 0) {\r\n            rebuiltAA.push(item)\r\n          }\r\n        }\r\n        return rebuiltAA\r\n      } else {\r\n        return null\r\n      }\r\n    },\r\n    uniqueAA() {\r\n      if (!this._.isEmpty(this.aaSummary)) {\r\n        let unique = [];\r\n        for (const aa of this.aaSummary) {\r\n          if (!this._.isEmpty(unique)) {\r\n            // Checks for existence of the current iterated item's custom_name in the unique list\r\n            let found = unique.some(x => x.custom_name === aa.custom_name);\r\n            if (!found) {\r\n              //If no match, add it\r\n              unique.push(aa);\r\n            }\r\n          } else {\r\n            // If the unique list does not yet exist, add the first item in the aa array\r\n            unique.push(aa);\r\n          }\r\n        }\r\n        return unique\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    customOrFull() {\r\n      if (this.inv.custom_name != null) {\r\n        return this.inv.custom_name\r\n      } else {\r\n        return this.inv.name.name\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    inv: function () {\r\n      this.getAAData();\r\n      if (this.template == true) {\r\n        this.inv.template = true;\r\n        this.getPlatformList();\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    setAAPercentage(event, uniqueSummaryItem) {\r\n      let aaSummaryItem = this.aaSummary.find(x => x.id === uniqueSummaryItem.id)\r\n      // Checks for merged items that are not shown on the unique aa list\r\n      // That is, merged items that are essentailly \"hidden\".\r\n      // There will always be one merged item that is not hidden\r\n      let mergedAASummaryItems = this.aaSummary.filter(\r\n        x => (x.id != uniqueSummaryItem.id) && (x.custom_name === uniqueSummaryItem.custom_name) )\r\n      // If there are merged items, clear their values\r\n      if (!this._.isEmpty(mergedAASummaryItems)) {\r\n        for (let item of mergedAASummaryItems) {\r\n          item.aa_total_perc = 0\r\n          const idx = this.aa.findIndex(x => x.rp_name_id === item.id);\r\n          if (idx >= 0) {\r\n            this.aa[idx].percentage = 0;\r\n          }\r\n        }\r\n      }\r\n      if (this.clearAA) {\r\n        // If AA is being cleared, edit the aaSummary array directly.\r\n        // This will also update the rebuiltAA computed property for API call\r\n        aaSummaryItem.aa_total_perc = event/100;\r\n      } else {\r\n        // Add to aaSummary so it updates chart etc\r\n        aaSummaryItem.aa_total_perc = event/100;\r\n\r\n        let aa_item = this.aa.find(x => x.name.name === aaSummaryItem.name);\r\n        // Looks for the aa item in the aa array that matches the RPAA name\r\n        if (aa_item != null) {\r\n          // If it finds it, sets the value\r\n          aa_item.percentage = event/100;\r\n        } else {\r\n          // If it can't find it in the array, creates a new entry\r\n          let new_aa_item = new Object()\r\n          new_aa_item['name_id'] = null;\r\n          new_aa_item['rp_name_id'] = aaSummaryItem.id\r\n          new_aa_item['investment'] = this.inv.id;\r\n          new_aa_item['percentage'] = event/100;\r\n          new_aa_item['name'] = new Object();\r\n          new_aa_item.name['name'] = aaSummaryItem.name;\r\n          if (event > 0) {\r\n            this.aa.push(new_aa_item)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    getAAPercentage(aa) {\r\n      const filterArr = this.aaSummary.filter(\r\n        x => x.custom_name === aa.custom_name)\r\n      // creates an array with the found items\r\n      const percentageArr = filterArr.map(a => a.aa_total_perc);\r\n      if (!this._.isEmpty(percentageArr)) {\r\n        // If the found item array has value, sums the items\r\n        const percentageTotal = percentageArr.reduce((acc, curVal) =>\r\n          Number(acc) + Number(curVal))\r\n        return (percentageTotal*100).toFixed(2);\r\n      } else {\r\n        // If no data is found, adds 0 to the array to maintain data order.\r\n        return 0\r\n      }\r\n      // return (result*100).toFixed(2);\r\n    },\r\n    setPercentage(event, inv, field) {\r\n      this.inv[field] = (event/100).toFixed(6);\r\n    },\r\n    getPercentage(inv, field) {\r\n      return +(this.inv[field]*100).toFixed(2);\r\n    },\r\n    getAASummaryData() {\r\n      if (this.template === false) {\r\n        let endpoint = `/api/scenarios/${this.activeScenario.id}/platforms/${this.activePlatform.id}/investments/${this.inv.id}/aasummary/`;\r\n        apiService(endpoint).then(data => {\r\n            this.aaSummary = data.results;\r\n            this.getAAData();\r\n        })\r\n      }\r\n    },\r\n    getAAData() {\r\n      if (this.template === false) {\r\n        let endpoint = `/api/scenarios/${this.activeScenario.id}/platforms/${this.activePlatform.id}/investments/${this.inv.id}/aa/`;\r\n        apiService(endpoint).then(data => {\r\n            this.aa = data.results;\r\n        });\r\n      }\r\n    },\r\n    onSubmit() {\r\n      if (this.template == false) {\r\n        let invObj = this.inv\r\n        if (this.clearAA) {\r\n          // Adds a new aa array to the investment if the old one is to be\r\n          // cleared\r\n          invObj['clear_aa'] = this.clearAA;\r\n          invObj['asset_allocations'] = this.rebuiltAA;\r\n        } else {\r\n          // Otherwise adds the existing aa array\r\n          invObj['asset_allocations'] = this.aa;\r\n        }\r\n        for (let aa of invObj.asset_allocations) {\r\n            aa.name = aa.name.id\r\n        }\r\n        let endpoint = `/api/scenarios/${this.activeScenario.id}/platforms/${this.activePlatform.id}/investments/${this.inv.id}/`;\r\n        apiService(endpoint, \"PATCH\", invObj).then(data => {\r\n          this.inv = data;\r\n          this.getAASummaryData();\r\n          this.getActivePlatformAA();\r\n        });\r\n      } else {\r\n        let endpoint = `/api/investmenttemplate/${this.inv.id}/`;\r\n        apiService(endpoint, \"PATCH\", this.inv)\r\n      }\r\n    },\r\n    getActivePlatformAA() {\r\n      // Refreshes the platform aa chart when an investment is saved\r\n      this.$store.dispatch(PLATFORM_AA_FETCH, {\r\n        'scenarioId': this.activeScenario.id,\r\n        'platformId': this.activePlatform.id,\r\n      })\r\n    },\r\n    getPlatformList() {\r\n      if (this.template === true) {\r\n        let endpoint = `/api/platformnames/`;\r\n        apiService(endpoint, \"GET\").then(data => {\r\n          this.platforms = data.results;\r\n        });\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getAASummaryData();\r\n    this.getPlatformList();\r\n  }\r\n};\r\n</script>\r\n"]}]}