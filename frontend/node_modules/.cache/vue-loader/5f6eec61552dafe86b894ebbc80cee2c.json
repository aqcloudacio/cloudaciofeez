{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\InvestmentSummary.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\InvestmentSummary.vue","mtime":1610418323868},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudi1leHBhbnNpb24tcGFuZWwtY29udGVudF9fd3JhcCB7CiAgcGFkZGluZzogMCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["InvestmentSummary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqSA;AACA;AACA","file":"InvestmentSummary.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n  <v-form\r\n    @submit.prevent=\"onSubmit\"\r\n    ref=\"form\">\r\n    <v-expansion-panels\r\n      focusable\r\n      multiple>\r\n      <AddInvestment\r\n        class=\"transparent\"\r\n        @add-investment=\"getInvestmentData\"\r\n        v-on=\"$listeners\" />\r\n      <v-expansion-panel v-for=\"investment in investments\"\r\n        class=\"transparent expansion-grey3-button py-0\"\r\n        :key=\"investment.id\"\r\n        dense>\r\n        <v-expansion-panel-header class=\"px-3 py-2\" @keyup.space.prevent >\r\n          <v-row class=\"ma-0\">\r\n            <v-col\r\n              @click.stop\r\n              :cols=\"8\"\r\n              class=\"py-0 pl-0\">\r\n              <v-text-field\r\n                class=\"rounded-card small-text\"\r\n                @click.stop\r\n                @space.stop\r\n                :value=\"investmentName(investment)\"\r\n                @input=\"addToChanged(investment, $event)\"\r\n                hide-details=\"auto\"\r\n                dense solo\r\n                :rules=\"[v => !!(v) || 'You must enter an investment name']\">\r\n              </v-text-field>\r\n            </v-col>\r\n            <v-col\r\n              @click.stop\r\n              :cols=\"4\"\r\n              class=\"py-0 pl-0\">\r\n              <v-currency-field\r\n                class=\"rounded-card small-text\"\r\n                @click.stop\r\n                @input=\"addToChanged(investment)\"\r\n                v-model=\"investment.amount\"\r\n                hide-details=\"auto\"\r\n                prefix=\"$\"\r\n                :decimal-length=\"0\"\r\n                dense solo\r\n                :rules=\"$rule8Digits\">\r\n                <template v-slot:append-outer>\r\n                  <template  v-if=\"changeListID.includes(investment.id)\">\r\n                    <v-icon\r\n                      color=\"teal\"\r\n                      @click.stop\r\n                      @click=\"updateInvestment(investment)\"\r\n                    >mdi-check-circle-outline</v-icon>\r\n                  </template>\r\n                  <v-slide-x-reverse-transition\r\n                     mode=\"out-in\"\r\n                     >\r\n                     <DeleteObj\r\n                       :objectType=\"'investment'\"\r\n                       :objectToDelete=\"investment\"\r\n                       :portfolioId=\"investment.portfolio\"\r\n                       @delete-object=\"deleteObj\"\r\n                       v-on=\"$listeners\"\r\n                     />\r\n                  </v-slide-x-reverse-transition>\r\n                </template>\r\n              </v-currency-field>\r\n            </v-col>\r\n          </v-row>\r\n        </v-expansion-panel-header>\r\n        <v-expansion-panel-content>\r\n          <InvestmentDetail\r\n             @add-investment=\"getInvestmentData\"\r\n             v-on=\"$listeners\"\r\n             :investment=\"investment\"\r\n             :investmentClassList=\"investmentClassList\"\r\n          />\r\n        </v-expansion-panel-content>\r\n    </v-expansion-panel>\r\n    </v-expansion-panels>\r\n    <v-row v-if=\"!(_.isEmpty(changeList))\">\r\n      <v-col class=\"text-right\">\r\n        <v-btn\r\n          @click=\"onSubmit\"\r\n          color=\"primary\"\r\n          small\r\n          rounded\r\n          ><span class=\"font-weight-light\">Update All Investments</span>\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-form>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\nimport AddInvestment from \"@/components/AddInvestment.vue\";\r\nimport InvestmentDetail from \"@/components/InvestmentDetail.vue\";\r\nimport DeleteObj from \"@/components/DeleteObj.vue\";\r\nimport { rule8Digits } from \"@/components/mixins/Rules.js\";\r\n\r\nimport {\r\n  PLATFORM_AA_FETCH,\r\n  PLATFORM_FETCH\r\n} from \"@/store/actions.type\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"InvestmentSummary\",\r\n  mixins: [rule8Digits],\r\n  inject: [\"platformId\", \"scenarioId\"],\r\n  props: {\r\n    // Only passed as a prop so it can be watched and new investments called\r\n    // when values changes (due to portfolio addition)\r\n    platformTotal: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  components: {\r\n    AddInvestment,\r\n    DeleteObj,\r\n    InvestmentDetail\r\n  },\r\n  data() {\r\n    return {\r\n      error: null,\r\n      investments: [],\r\n      changeList: [],\r\n      investmentClassList: [],\r\n      editName: [],\r\n      editAmount: [],\r\n      duplicate: [],\r\n    };\r\n  },\r\n  watch: {\r\n    platformTotal() {\r\n      this.getInvestmentData();\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activeScenario\", \"activePlatform\"]),\r\n    changeListID() {\r\n      return this.changeList.map(e => e.id);\r\n    }\r\n  },\r\n  methods: {\r\n    // stringToColour(str) {\r\n    //   let hash = 0;\r\n    //   for (let i = 0; i < str.length; i++) {\r\n    //     hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    //   }\r\n    //   let colour = '#';\r\n    //   for (let i = 0; i < 3; i++) {\r\n    //     let value = (hash >> (i * 8)) & 0xFF;\r\n    //     colour += ('00' + value.toString(16)).substr(-2);\r\n    //   }\r\n    //   return colour;\r\n    // },\r\n    investmentName(inv) {\r\n      if (inv.custom_name) {\r\n        return inv.custom_name\r\n      } else {\r\n        return inv.name.name\r\n      }\r\n    },\r\n    removeFromEdited(investment) {\r\n      // Remove from changeList\r\n      const i = this.changeList.findIndex(item => item.id === investment.id);\r\n      this.changeList.splice(i,1)\r\n    },\r\n    addInvestment(investment) {\r\n      this.investments.unshift(investment);\r\n      this.duplicate.unshift(...{investment});\r\n    },\r\n    deleteObj(objectToDelete) {\r\n      // Deletes the given item and removes it from the \"changed\" list\r\n      this.removeFromChanged(objectToDelete)\r\n      this.$delete(this.investments, this.investments.indexOf(objectToDelete));\r\n    },\r\n    addToChanged(investment, event) {\r\n      if (event) {\r\n        investment.custom_name = event;\r\n      }\r\n      // Add given investment to a list of investments that have changed.\r\n      // This list is used to \"save all\" as well as show save ticks next to\r\n      // investment summaries\r\n\r\n      //  If it's unchanged from the original, remove it from the changed list\r\n      if (!this.invIsChanged(investment)) {\r\n        this.removeFromChanged(investment);\r\n      } else if (!this.changeList.includes(investment)) {\r\n        // else if it isn't already in the changeList, add it.\r\n          this.changeList.push(investment);\r\n      } else {\r\n        // If it is changed, and is in the changeList, do nothing.\r\n        //pass\r\n      }\r\n    },\r\n    removeFromChanged(investment){\r\n      // Removes given investment from the changelist\r\n      const i = this.changeList.findIndex(item => item.id === investment.id);\r\n      this.changeList.splice(i, 1);\r\n    },\r\n    invIsChanged(investment){\r\n      // Checks the given investment against the original list of investments\r\n      // to see if the amount or custom_name has changed.\r\n      let original = this.duplicate.find(x => x.id === investment.id);\r\n      if (((investment.custom_name || investment.name.name) === (original.custom_name || original.name.name))\r\n        && (investment.amount == Number(original.amount)))\r\n      {\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    validateInvestment(investment) {\r\n      // Manual validation to block updating investments. Vuetify doesn't\r\n      // support nested validation atm.\r\n      return (investment.amount >= 0 && investment.amount < 10000000 && investment.custom_name)\r\n    },\r\n    updateInvestment(investment) {\r\n      if (this.validateInvestment(investment)){\r\n        let endpoint = `/api/scenarios/${this.scenarioId}/platforms/${this.platformId}/investments/${investment.id}/`;\r\n        apiService(endpoint, \"PATCH\", {\r\n          custom_name: investment.custom_name,\r\n          amount: investment.amount,\r\n        }).then(() => {\r\n          this.removeFromEdited(investment);\r\n          this.getActivePlatformAA();\r\n          this.getActivePlatform();\r\n        });\r\n      }\r\n    },\r\n    async onSubmit() {\r\n      if (this.$refs.form.validate()) {\r\n        if (this.changeList) {\r\n          for (let i=0; i < this.changeList.length; i++) {\r\n            let endpoint = `/api/scenarios/${this.scenarioId}/platforms/${this.platformId}/investments/${this.changeList[i].id}/`;\r\n            await apiService(endpoint, \"PATCH\", this.changeList[i])\r\n          };\r\n          this.getInvestmentData();\r\n          this.getActivePlatformAA();\r\n          this.getActivePlatform();\r\n        };\r\n      }\r\n    },\r\n    getActivePlatformAA() {\r\n      // refreshes the platform aa chart when an investment is saved\r\n      this.$store.dispatch(PLATFORM_AA_FETCH, {\r\n        'scenarioId': this.activeScenario.id,\r\n        'platformId': this.activePlatform.id,\r\n      })\r\n    },\r\n    getActivePlatform() {\r\n      // refreshes the platform aa chart when an investment is saved\r\n      this.$store.dispatch(PLATFORM_FETCH, {\r\n        'scenarioId': this.activeScenario.id,\r\n        'platformId': this.activePlatform.id,\r\n      })\r\n    },\r\n    getInvestmentData() {\r\n      let endpoint = `/api/scenarios/${this.scenarioId}/platforms/${this.platformId}/investments/`;\r\n      apiService(endpoint).then(data => {\r\n        this.duplicate = JSON.parse(JSON.stringify(data.results));\r\n        this.investments = data.results;\r\n        this.changeList = [];\r\n      });\r\n    },\r\n    getInvestmentClassList() {\r\n      let endpoint = `/api/investmentclass/`;\r\n      apiService(endpoint, \"GET\").then(data => {\r\n        this.investmentClassList = data.results;\r\n      });\r\n    },\r\n    // setCustomNames(){\r\n    //   if (!this._.isEmpty(this.investments)) {\r\n    //     for (let item of this.investments) {\r\n    //       if (item.custom_name === \"\") {\r\n    //         item.custom_name = item.name.name\r\n    //       }\r\n    //     }\r\n    //     this.duplicate = JSON.parse(JSON.stringify(this.investments));\r\n    //   }\r\n    // }\r\n  },\r\n  mounted() {\r\n    this.getInvestmentData();\r\n    this.getInvestmentClassList();\r\n  }\r\n};\r\n</script>\r\n<style>\r\n  .v-expansion-panel-content__wrap {\r\n    padding: 0 !important;\r\n  }\r\n</style>\r\n"]}]}