{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\InvestmentAAChartSummary.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\InvestmentAAChartSummary.vue","mtime":1588134613404},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQUFCYXJDaGFydCBmcm9tICJAL2NvbXBvbmVudHMvQUFCYXJDaGFydC52dWUiOw0KLy8gaW1wb3J0IHsgYXBpU2VydmljZSB9IGZyb20gIkAvY29tbW9uL2FwaS5zZXJ2aWNlLmpzIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiSW52ZXN0bWVudEFBQ2hhcnRTdW1tYXJ5IiwNCiAgLy8gaW5qZWN0OiBbInNjZW5hcmlvSWQiXSwNCiAgcHJvcHM6IHsNCiAgICBSUEFBTmFtZXM6IHsNCiAgICAgIHR5cGU6IEFycmF5LA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlDQogICAgfSwNCiAgICBBQVN1bW1hcnk6IHsNCiAgICAgIHR5cGU6IEFycmF5LA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlDQogICAgfSwNCiAgICBhbW91bnQ6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIHJlcXVpcmVkOiB0cnVlDQogICAgfSwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgQUFLZXk6MCwNCiAgICAgIGNoYXJ0T3B0aW9uczogew0KICAgICAgICBzY2FsZXM6IHsNCiAgICAgICAgICAgIHlBeGVzOiBbew0KICAgICAgICAgICAgICAgIHRpY2tzOiB7DQogICAgICAgICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICBtYXhUaWNrc0xpbWl0OiA2LA0KICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gKHZhbHVlKSB7DQogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnRvTG9jYWxlU3RyaW5nKCdlbi1VUycsIHtzdHlsZToncGVyY2VudCd9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH1dLA0KICAgICAgICAgICAgeEF4ZXM6IFt7DQogICAgICAgICAgICAgICAgdGlja3M6IHsNCiAgICAgICAgICAgICAgICAgIG1heFJvdGF0aW9uOiAwIC8vIGFuZ2xlIGluIGRlZ3JlZXMNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9XSwNCiAgICAgICAgfSwNCiAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICBkaXNwbGF5OiB0cnVlLA0KICAgICAgICAgIHRleHQ6ICJBc3NldCBBbGxvY2F0aW9uIiwNCiAgICAgICAgfSwNCiAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgZGlzcGxheTogZmFsc2UsDQogICAgICAgIH0sDQogICAgICB9DQogICAgfTsNCiAgfSwNCiAgY29tcG9uZW50czogew0KICAgIEFBQmFyQ2hhcnQNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBuYW1lU2V0OiBmdW5jdGlvbiAoKXsNCiAgICAgIGxldCBBQU5hbWVMaXN0ID0ge307DQogICAgICBsZXQgY2hlY2tMaXN0ID0gW107DQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuUlBBQU5hbWVzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIGxldCBmb3VuZCA9IGZhbHNlOw0KICAgICAgICBsZXQgYWFOYW1lID0gdGhpcy5SUEFBTmFtZXNbaV07DQogICAgICAgICAgaWYgKGNoZWNrTGlzdC5pbmNsdWRlcyhhYU5hbWUuY3VzdG9tX25hbWUpKSB7DQogICAgICAgICAgICBmb3VuZCA9IHRydWU7DQogICAgICAgICAgfQ0KICAgICAgICAgIGlmICghZm91bmQpIHsNCiAgICAgICAgICAgIC8vIFRIRSBTUEFDRSBBRERFRCBCRUxPVyBBTExPV1MgVEhFIE9CSkVDVCBUTyBSRVRBSU4NCiAgICAgICAgICAgIC8vIE9SREVSSU5HIE9GIElUUyBJTlRFR0VSIFBST1BFUlRJRVMuIFRIRSBWVUUgQ09OU09MRSBSRU1PVkVTIFRISVMNCiAgICAgICAgICAgIC8vIFNQQUNFIEJVVCBCUk9XU0VSIFJFQURTIElUIENPUlJFQ1RMWS4NCiAgICAgICAgICAgIEFBTmFtZUxpc3RbJyAnK2FhTmFtZS5pZF0gPSBhYU5hbWUuY3VzdG9tX25hbWU7DQogICAgICAgICAgICBmb3VuZCA9IGZhbHNlOw0KICAgICAgICAgICAgY2hlY2tMaXN0LnB1c2goYWFOYW1lLmN1c3RvbV9uYW1lKTsNCiAgICAgICAgICB9DQogICAgICB9DQogICAgICByZXR1cm4gKEFBTmFtZUxpc3QpDQogICAgfSwNCiAgICBwcm9wQUFTdW1tYXJ5KCl7DQogICAgICByZXR1cm4gdGhpcy5BQVN1bW1hcnkNCiAgICB9LA0KICAgIEFBQXJyYXkoKSB7DQogICAgICBpZiAodGhpcy5BQVN1bW1hcnkgIT0gbnVsbCkgew0KICAgICAgICBsZXQgcmVzdWx0ID0gW107DQogICAgICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMubmFtZVNldCkgew0KICAgICAgICAgICAgbGV0IGZvdW5kID0gZmFsc2U7DQogICAgICAgICAgICBjb25zdCBrZXlUcmltbWVkID0gTnVtYmVyKGtleS50cmltKCkpDQogICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLkFBU3VtbWFyeSk7DQoNCg0KICAgICAgICAgICAgZm9yIChsZXQgaT0wOyBpIDwgdGhpcy5BQVN1bW1hcnkubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKHRoaXMuQUFTdW1tYXJ5W2ldLm5hbWUpLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICBsZXQgcnAxID0gdGhpcy5BQVN1bW1hcnlbaV0ubmFtZS5ycF9hYW5hbWVfbGluazsNCiAgICAgICAgICAgICAgICBpZiAocnAxLmluY2x1ZGVzKGtleVRyaW1tZWQpKSB7DQogICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChOdW1iZXIodGhpcy5BQVN1bW1hcnlbaV0ucGVyY2VudGFnZSkpOw0KICAgICAgICAgICAgICAgICAgZm91bmQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5BQVN1bW1hcnlbaV0ucnBfbmFtZV9pZCAhPSBudWxsKSB7DQogICAgICAgICAgICAgICAgbGV0IHJwMiA9IHRoaXMuQUFTdW1tYXJ5W2ldLnJwX25hbWVfaWQ7DQogICAgICAgICAgICAgICAgaWYgKHJwMiA9PSBrZXlUcmltbWVkKSB7DQogICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChOdW1iZXIodGhpcy5BQVN1bW1hcnlbaV0ucGVyY2VudGFnZSkpOw0KICAgICAgICAgICAgICAgICAgZm91bmQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmICghZm91bmQpIHsNCiAgICAgICAgICAgICAgcmVzdWx0LnB1c2goMCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICByZXR1cm4gcmVzdWx0Ow0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgfQ0KICAgIH0sDQogICAgY2hhcnREYXRhKCl7DQogICAgICByZXR1cm4gew0KICAgICAgICBsYWJlbHM6IE9iamVjdC52YWx1ZXModGhpcy5uYW1lU2V0KSwNCiAgICAgICAgZGF0YXNldHM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBkYXRhOiB0aGlzLkFBQXJyYXksDQogICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI1NSwgOTksIDEzMiwgMC4yKScsDQogICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMjU1LCA5OSwgMTMyLCAxKScsDQogICAgICAgICAgICBib3JkZXJXaWR0aDogMSwNCiAgICAgICAgICAgIGxhYmVsOiAiQXNzZXQgQWxsb2NhdGlvbiINCiAgICAgICAgICB9LA0KICAgICAgICBdDQogICAgICB9DQogICAgfSwNCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICBBQVN1bW1hcnkgKCkgew0KICAgICAgdGhpcy5mb3JjZVJlcmVuZGVyKCk7DQogICAgfSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGZvcmNlUmVyZW5kZXIoKXsNCiAgICAgIHRoaXMuQUFLZXkgKz0gMTsNCiAgICB9LA0KICAgIC8vIGdldEFBU3VtbWFyeSgpIHsNCiAgICAvLyAgIGZvciAobGV0IGk9MDsgaSA8IHRoaXMuY3VycmVudFBsYXRmb3Jtcy5sZW5ndGg7IGkrKykgew0KICAgIC8vICAgICBsZXQgZW5kcG9pbnQgPSBgL2FwaS9zY2VuYXJpb3MvJHt0aGlzLnNjZW5hcmlvSWR9L3BsYXRmb3Jtcy8ke3RoaXMuY3VycmVudFBsYXRmb3Jtc1tpXS5pZH0vYWFzdW1tYXJ5L2A7DQogICAgLy8gICAgIGFwaVNlcnZpY2UoZW5kcG9pbnQpLnRoZW4oZGF0YSA9PiB7DQogICAgLy8gICAgICAgdGhpcy5jdXJyZW50QUFTdW1tYXJ5ID0gZGF0YS5yZXN1bHRzOw0KICAgIC8vICAgICB9KTsNCiAgICAvLyAgIH0NCiAgICAvLyB9LA0KICAgIC8vIGdldFJQQUFOYW1lRGF0YSgpIHsNCiAgICAvLyAgIGxldCBlbmRwb2ludCA9IGAvYXBpL2FjdGl2ZXJpc2twcm9maWxlbmFtZXMvYDsNCiAgICAvLyAgIGFwaVNlcnZpY2UoZW5kcG9pbnQpLnRoZW4oZGF0YSA9PiB7DQogICAgLy8gICAgIHRoaXMuUlBBQU5hbWVzID0gZGF0YS5yZXN1bHRzOw0KICAgIC8vICAgfSk7DQogICAgLy8gfSwNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICAvLyB0aGlzLmdldFJQQUFOYW1lRGF0YSgpOw0KICAgIC8vIHRoaXMuZ2V0QUFTdW1tYXJ5KCk7DQogIH0NCn07DQo="},{"version":3,"sources":["InvestmentAAChartSummary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAefile":"InvestmentAAChartSummary.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n  <v-card v-if=\"chartData != null\" >\r\n      <AABarChart\r\n        :chartData=\"chartData\"\r\n        :options=\"chartOptions\"\r\n        :height=\"200\"\r\n        ref=\"AABarChart\"\r\n        :key=\"AAKey\"\r\n      >\r\n    </AABarChart>\r\n\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport AABarChart from \"@/components/AABarChart.vue\";\r\n// import { apiService } from \"@/common/api.service.js\";\r\n\r\nexport default {\r\n  name: \"InvestmentAAChartSummary\",\r\n  // inject: [\"scenarioId\"],\r\n  props: {\r\n    RPAANames: {\r\n      type: Array,\r\n      required: false\r\n    },\r\n    AASummary: {\r\n      type: Array,\r\n      required: false\r\n    },\r\n    amount: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      AAKey:0,\r\n      chartOptions: {\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 6,\r\n                    callback: function (value) {\r\n                      return value.toLocaleString('en-US', {style:'percent'});\r\n                    }\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                  maxRotation: 0 // angle in degrees\r\n                }\r\n            }],\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Asset Allocation\",\r\n        },\r\n        legend: {\r\n          display: false,\r\n        },\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    AABarChart\r\n  },\r\n  computed: {\r\n    nameSet: function (){\r\n      let AANameList = {};\r\n      let checkList = [];\r\n      for (let i = 0; i < this.RPAANames.length; i++) {\r\n        let found = false;\r\n        let aaName = this.RPAANames[i];\r\n          if (checkList.includes(aaName.custom_name)) {\r\n            found = true;\r\n          }\r\n          if (!found) {\r\n            // THE SPACE ADDED BELOW ALLOWS THE OBJECT TO RETAIN\r\n            // ORDERING OF ITS INTEGER PROPERTIES. THE VUE CONSOLE REMOVES THIS\r\n            // SPACE BUT BROWSER READS IT CORRECTLY.\r\n            AANameList[' '+aaName.id] = aaName.custom_name;\r\n            found = false;\r\n            checkList.push(aaName.custom_name);\r\n          }\r\n      }\r\n      return (AANameList)\r\n    },\r\n    propAASummary(){\r\n      return this.AASummary\r\n    },\r\n    AAArray() {\r\n      if (this.AASummary != null) {\r\n        let result = [];\r\n          for (let key in this.nameSet) {\r\n            let found = false;\r\n            const keyTrimmed = Number(key.trim())\r\n            // console.log(this.AASummary);\r\n\r\n\r\n            for (let i=0; i < this.AASummary.length; i++) {\r\n              if (Object.keys(this.AASummary[i].name).length > 0) {\r\n                let rp1 = this.AASummary[i].name.rp_aaname_link;\r\n                if (rp1.includes(keyTrimmed)) {\r\n                  result.push(Number(this.AASummary[i].percentage));\r\n                  found = true;\r\n                  break\r\n                }\r\n              } else if (this.AASummary[i].rp_name_id != null) {\r\n                let rp2 = this.AASummary[i].rp_name_id;\r\n                if (rp2 == keyTrimmed) {\r\n                  result.push(Number(this.AASummary[i].percentage));\r\n                  found = true;\r\n                  break\r\n                }\r\n              }\r\n            }\r\n            if (!found) {\r\n              result.push(0);\r\n            }\r\n          }\r\n        return result;\r\n      } else {\r\n        return [];\r\n      }\r\n    },\r\n    chartData(){\r\n      return {\r\n        labels: Object.values(this.nameSet),\r\n        datasets: [\r\n          {\r\n            data: this.AAArray,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 1,\r\n            label: \"Asset Allocation\"\r\n          },\r\n        ]\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    AASummary () {\r\n      this.forceRerender();\r\n    },\r\n  },\r\n  methods: {\r\n    forceRerender(){\r\n      this.AAKey += 1;\r\n    },\r\n    // getAASummary() {\r\n    //   for (let i=0; i < this.currentPlatforms.length; i++) {\r\n    //     let endpoint = `/api/scenarios/${this.scenarioId}/platforms/${this.currentPlatforms[i].id}/aasummary/`;\r\n    //     apiService(endpoint).then(data => {\r\n    //       this.currentAASummary = data.results;\r\n    //     });\r\n    //   }\r\n    // },\r\n    // getRPAANameData() {\r\n    //   let endpoint = `/api/activeriskprofilenames/`;\r\n    //   apiService(endpoint).then(data => {\r\n    //     this.RPAANames = data.results;\r\n    //   });\r\n    // },\r\n  },\r\n  mounted() {\r\n    // this.getRPAANameData();\r\n    // this.getAASummary();\r\n  }\r\n};\r\n</script>\r\n"]}]}