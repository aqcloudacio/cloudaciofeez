{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\Navbar.vue?vue&type=style&index=0&media=screen&lang=css&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\Navbar.vue","mtime":1610340231074},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubm9UcmFuc2l0aW9uOjphZnRlciB7CnRyYW5zaXRpb246IG5vbmUgIWltcG9ydGFudDsKYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKfQouc2NlbmFyaW9MaW5rIHsKY3Vyc29yOiBwb2ludGVyOwp9Cg=="},{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Navbar.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n  <div>\r\n    <v-toolbar color=\"secondary\" dark dense prominent  class=\"shrink\">\r\n      <v-container style=\"width: 1012px; height:100%\">\r\n        <v-row >\r\n          <v-col align-self=\"center\" :cols=\"4\" >\r\n            <v-toolbar-title large class=\"pb-0\">\r\n              <v-img src=\"../assets/PRLogo.png\">\r\n              </v-img>\r\n              </v-toolbar-title>\r\n          </v-col>\r\n          <v-col :cols=\"4\" align=\"right\" align-self=\"center\">\r\n            <v-autocomplete\r\n            dense\r\n              background-color=\"secondary lighten-2\"\r\n              rounded solo\r\n              :items=\"scenarios\"\r\n              v-model=\"selectedScenario\"\r\n              no-data-text=\"Client not found\"\r\n              item-text=\"client\"\r\n              return-object\r\n              hide-details\r\n              ref=\"autocomplete\"\r\n              prepend-inner-icon=\"mdi-magnify\"\r\n              style=\"width: 300px\"\r\n              @change=\"goNewScenario\"/>\r\n          </v-col>\r\n          <v-spacer />\r\n            <v-card-actions>\r\n              <v-btn icon dark @click=\"goProfile\">\r\n                <v-icon>mdi-account-outline</v-icon>\r\n\r\n              </v-btn>\r\n              <span dark  @click=\"goProfile\" class=\"scenarioLink\">\r\n                {{activeUser.name}}\r\n              </span>\r\n              <Notifications/>\r\n\r\n              <v-divider inset vertical  class=\"mx-4\" style=\"height:30px\"/>\r\n              <v-btn icon  small>\r\n                <v-icon color=\"PRgrey\">mdi-help-circle-outline</v-icon>\r\n              </v-btn>\r\n              <v-btn icon small @click=\"logout\"  >\r\n                <v-icon color=\"PRgrey\">mdi-power</v-icon>\r\n              </v-btn>\r\n          </v-card-actions>\r\n\r\n        </v-row>\r\n      </v-container>\r\n    </v-toolbar>\r\n    <v-toolbar color=\"primary\" short class=\"shrink\">\r\n      <v-container style=\"width: 1012px\">\r\n        <v-row>\r\n          <v-col align-self=\"center\">\r\n            <v-toolbar-title>\r\n              <v-btn icon @click=\"goHome\" dark large>\r\n                <v-icon>mdi-home-circle-outline</v-icon>\r\n              </v-btn>\r\n              <template v-if=\"activeScenario.id\">\r\n                <v-icon dark>mdi-chevron-right</v-icon>\r\n                <span class=\"scenarioLink\" @click=\"goScenario\" style=\"color:white\">  {{activeScenario.client}}</span>\r\n              </template>\r\n              <template v-if=\"activePlatform.id != null\">\r\n                <v-icon dark>mdi-chevron-right</v-icon>\r\n                <span style=\"color:white\">  {{customName}}</span>\r\n              </template>\r\n            </v-toolbar-title>\r\n          </v-col>\r\n          <v-col align=\"right\"  v-if=\"activeScenario.id\">\r\n            <v-card-actions>\r\n              <v-spacer></v-spacer>\r\n              <v-btn icon @click=\"goDocs\" dark>\r\n                <v-icon>mdi-file-document-outline</v-icon>\r\n              </v-btn>\r\n              <ShareScenario\r\n                :scenario=\"activeScenario\"\r\n                :color=\"'white'\"\r\n              />\r\n            </v-card-actions>\r\n        </v-col>\r\n      </v-row>\r\n      </v-container>\r\n    </v-toolbar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service\";\r\nimport Notifications from \"@/components/Notifications.vue\";\r\nimport { mapGetters } from \"vuex\";\r\nimport { SET_ACTIVE_SCENARIO } from \"@/store/mutations.type\";\r\nimport {\r\n  ADVERTS_ALL,\r\n  USER_LOGOUT,\r\n} from \"@/store/actions.type\";\r\nimport ShareScenario from '@/components/ShareScenario.vue';\r\n\r\nexport default {\r\n  components: {\r\n    Notifications,\r\n    ShareScenario,\r\n  },\r\n  data() {\r\n    return {\r\n      scenarios: [],\r\n      selectedScenario: null,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activeScenario\", \"activeUser\", \"activePlatform\", \"adverts\"]),\r\n    customName() {\r\n      if (this.activePlatform.name == null) {\r\n        return this.activePlatform.custom_name;\r\n      } else if (this.activePlatform.custom_name != null) {\r\n        return this.activePlatform.custom_name;\r\n      } else if (this.activePlatform.name) {\r\n        return this.activePlatform.name.name;\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    getAdverts() {\r\n      if (this._.isEmpty(this.adverts)) {\r\n        this.$store.dispatch(ADVERTS_ALL)\r\n      }\r\n    },\r\n    getScenarios() {\r\n      let endpoint = \"/api/scenarios/\";\r\n      apiService(endpoint).then(data => {\r\n        this.scenarios = data.results;\r\n      });\r\n    },\r\n    goHome() {\r\n      const path = `/`\r\n      if (this.$route.path !== path)  {\r\n        this.$router.push({ name: 'home' });\r\n      }\r\n    },\r\n    goNewScenario() {\r\n      if (!this._.isEmpty(this.selectedScenario)) {\r\n        this.$refs.autocomplete.blur();\r\n        this.$nextTick(() => {\r\n          this.$store.commit(SET_ACTIVE_SCENARIO, this.selectedScenario);\r\n          // Empty API patch to update the last_edited field of the scenario\r\n          let endpoint = `/api/scenarios/${this.selectedScenario.id}/`;\r\n          apiService(endpoint, \"PATCH\", this.selectedScenario);\r\n          // Nav to the scenario and reset the searchbar\r\n          this.$router.push({ name: 'scenario', params: { id: this.selectedScenario.id } });\r\n          this.selectedScenario = null;\r\n        });\r\n      }\r\n    },\r\n    goScenario() {\r\n      const pathName = 'scenario'\r\n      if (this.$route.name !== pathName) {\r\n        this.$router.push({ name: 'scenario', params: { id: this.activeScenario.id } });\r\n      }\r\n    },\r\n    goProfile() {\r\n      const path = `/profile`\r\n      if (this.$route.path !== path)  {\r\n        this.$router.push({ name: 'profile' });\r\n      }\r\n    },\r\n    goDocs() {\r\n      const pathName = `reports`\r\n      if (this.$route.name !== pathName)  {\r\n        if (this.activeScenario.id != null) {\r\n          this.$router.push({ name: 'reports', params: { scenarioId: this.activeScenario.id } });\r\n        }\r\n      }\r\n    },\r\n    logout() {\r\n      this.$store.dispatch(USER_LOGOUT);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getScenarios();\r\n    this.getAdverts();\r\n  }\r\n}\r\n</script>\r\n<style media=\"screen\">\r\n  .noTransition::after {\r\n  transition: none !important;\r\n  background-color: transparent !important;\r\n  }\r\n  .scenarioLink {\r\n  cursor: pointer;\r\n  }\r\n</style>\r\n"]}]}