{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\Notifications.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\Notifications.vue","mtime":1590545560879},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBhcGlTZXJ2aWNlIH0gZnJvbSAiQC9jb21tb24vYXBpLnNlcnZpY2UuanMiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgdXNlcjogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgIH0sDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIG5vdGlmaWNhdGlvbnM6IG51bGwsDQogICAgICBhY3RpdmVfcHJhY3RpY2U6IHRydWUsDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIHZpc2libGVOb3RpZmljYXRpb25zKCkgew0KICAgICAgaWYgKHRoaXMubm90aWZpY2F0aW9ucykgew0KICAgICAgICByZXR1cm4gdGhpcy5ub3RpZmljYXRpb25zLmZpbHRlcihpID0+IGkudmlzaWJsZSA9PSB0cnVlKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIFtdDQogICAgICB9DQogICAgfSwNCiAgICBsYXN0VGhyZWVOb3RpZmljYXRpb25zKCkgew0KICAgICAgcmV0dXJuIHRoaXMudmlzaWJsZU5vdGlmaWNhdGlvbnMuc2xpY2UoMCwzKQ0KICAgIH0sDQogICAgdW5yZWFkTm90aWZpY2F0aW9ucygpIHsNCiAgICAgIHJldHVybiB0aGlzLnZpc2libGVOb3RpZmljYXRpb25zLmZpbHRlcihpID0+IGkucmVhZCA9PSBmYWxzZSkNCiAgICB9LA0KICAgIG51bU5vdGlmaWNhdGlvbnMoKSB7DQogICAgICBpZiAodGhpcy51bnJlYWROb3RpZmljYXRpb25zLmxlbmd0aCA+IDApIHsNCiAgICAgICAgcmV0dXJuIHRoaXMudW5yZWFkTm90aWZpY2F0aW9ucy5sZW5ndGgNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiBudWxsDQogICAgICB9DQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgZ2V0Tm90aWZpY2F0aW9ucygpIHsNCiAgICAgIGxldCBlbmRwb2ludCA9ICIvYXBpL25vdGlmaWNhdGlvbnMvIjsNCiAgICAgIGFwaVNlcnZpY2UoZW5kcG9pbnQpLnRoZW4oZGF0YSA9PiB7DQogICAgICAgIHRoaXMubm90aWZpY2F0aW9ucyA9IGRhdGEucmVzdWx0czsNCiAgICAgIH0pOw0KICAgIH0sDQogICAgZGVueU5vdGlmaWNhdGlvbihub3RpZmljYXRpb24pew0KICAgICAgdGhpcy5zZXRJbnZpc2libGUobm90aWZpY2F0aW9uKQ0KICAgIH0sDQogICAgc2V0QWN0aXZlUHJhY3RpY2Uobm90aWZpY2F0aW9uKSB7DQogICAgICBpZiAobm90aWZpY2F0aW9uLmFjdGl2ZV9wcmFjdGljZSA9PSB0cnVlKSB7DQogICAgICAgIHJldHVybiBub3RpZmljYXRpb24ucHJhY3RpY2U7DQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gdGhpcy51c2VyLmFjdGl2ZV9wcmFjdGljZTsNCiAgICAgIH0NCiAgICB9LA0KICAgIHJlbW92ZUZyb21QZW5kaW5nKG5vdGlmaWNhdGlvbikgew0KICAgICAgbGV0IHJlc3VsdCA9IHRoaXMudXNlci5wZW5kaW5nX3ByYWN0aWNlcy5maWx0ZXIoaSA9PiBpICE9IG5vdGlmaWNhdGlvbi5wcmFjdGljZSkNCiAgICAgIGlmIChyZXN1bHQpIHsNCiAgICAgICAgcmV0dXJuIHJlc3VsdA0KICAgICAgfQ0KICAgIH0sDQogICAgYWRkVG9QcmFjdGljZXMobm90aWZpY2F0aW9uKSB7DQogICAgICB0aGlzLnVzZXIucHJhY3RpY2VzLnB1c2gobm90aWZpY2F0aW9uLnByYWN0aWNlKTsNCiAgICAgIHJldHVybiB0aGlzLnVzZXIucHJhY3RpY2VzDQogICAgfSwNCiAgICBhY2NlcHROb3RpZmljYXRpb24obm90aWZpY2F0aW9uKSB7DQogICAgICB0aGlzLnNldEludmlzaWJsZShub3RpZmljYXRpb24pOw0KICAgICAgaWYgKG5vdGlmaWNhdGlvbi50eXBlID09ICdwcmFjdGljZV9pbnZpdGUnKXsNCiAgICAgICAgdGhpcy5hY2NlcHRQcmFjdGljZUludml0ZShub3RpZmljYXRpb24pOw0KICAgICAgfQ0KICAgIH0sDQogICAgYWNjZXB0UHJhY3RpY2VJbnZpdGUobm90aWZpY2F0aW9uKSB7DQogICAgICBsZXQgZW5kcG9pbnQgPSBgL2FwaS91c2VyLyR7dGhpcy51c2VyLmlkfS9gOw0KICAgICAgYXBpU2VydmljZShlbmRwb2ludCwgIlBBVENIIiAsIHsNCiAgICAgICAgYWN0aXZlX3ByYWN0aWNlOiB0aGlzLnNldEFjdGl2ZVByYWN0aWNlKG5vdGlmaWNhdGlvbiksDQogICAgICAgIHByYWN0aWNlczogdGhpcy5hZGRUb1ByYWN0aWNlcyhub3RpZmljYXRpb24pLA0KICAgICAgICBwZW5kaW5nX3ByYWN0aWNlczogdGhpcy5yZW1vdmVGcm9tUGVuZGluZyhub3RpZmljYXRpb24pLA0KICAgICAgfSk7DQogICAgfSwNCiAgICBzZXRBc1JlYWQoKSB7DQogICAgICBsZXQgaWRzID0gW10NCiAgICAgIGZvciAobGV0IGl0ZW0gb2YgdGhpcy51bnJlYWROb3RpZmljYXRpb25zKSB7DQogICAgICAgIGlkcy5wdXNoKGl0ZW0uaWQpOw0KICAgICAgfQ0KICAgICAgZm9yIChsZXQgaWQgb2YgaWRzKSB7DQogICAgICAgIGxldCByZXN1bHQgPSB0aGlzLm5vdGlmaWNhdGlvbnMuZmluZChpID0+IGkuaWQgPT09IGlkKQ0KICAgICAgICByZXN1bHQucmVhZCA9IHRydWU7DQogICAgICAgIGxldCBlbmRwb2ludCA9IGAvYXBpL25vdGlmaWNhdGlvbnMvJHtpZH0vYDsNCiAgICAgICAgYXBpU2VydmljZShlbmRwb2ludCwgIlBBVENIIiwgew0KICAgICAgICAgIHJlYWQ6IHRydWUsDQogICAgICAgIH0pOw0KICAgICAgfQ0KICAgIH0sDQogICAgc2V0SW52aXNpYmxlKG5vdGlmaWNhdGlvbikgew0KICAgICAgbGV0IGVuZHBvaW50ID0gYC9hcGkvbm90aWZpY2F0aW9ucy8ke25vdGlmaWNhdGlvbi5pZH0vYDsNCiAgICAgIGFwaVNlcnZpY2UoZW5kcG9pbnQsICJQQVRDSCIsIHsNCiAgICAgICAgdmlzaWJsZTogZmFsc2UsDQogICAgICB9KS50aGVuKGRhdGEgPT4gew0KICAgICAgICB0aGlzLiRzZXQobm90aWZpY2F0aW9uLCd2aXNpYmxlJywgZGF0YS52aXNpYmxlKTsNCiAgICAgIH0pOw0KICAgIH0NCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmdldE5vdGlmaWNhdGlvbnMoKTsNCiAgfQ0KfQ0K"},{"version":3,"sources":["Notifications.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Notifications.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n  <v-menu\r\n    :close-on-content-click=\"false\"\r\n    offset-y\r\n    max-width=\"400px\"\r\n    >\r\n    <template v-slot:activator=\"{ on }\">\r\n      <v-btn icon v-on=\"on\" @click=\"setAsRead\">\r\n        <v-badge\r\n          :value=\"numNotifications != null\"\r\n          :content=\"numNotifications\"\r\n          overlap >\r\n          <v-icon >mdi-bell-outline</v-icon>\r\n        </v-badge>\r\n      </v-btn>\r\n    </template>\r\n    <v-card>\r\n      <template\r\n        v-for=\"(notification,index) in lastThreeNotifications\">\r\n        <v-container :key=\"notification.id\" class=\"pa-0\">\r\n          <v-list three-line class=\"pb-0\">\r\n            <v-list-item>\r\n              <v-list-item-content >\r\n                <v-list-item-title>{{notification.title}}</v-list-item-title>\r\n                <v-list-item-subtitle>{{notification.content}}</v-list-item-subtitle>\r\n              </v-list-item-content>\r\n            </v-list-item>\r\n          </v-list>\r\n          <v-list  class=\"pa-0\">\r\n            <v-list-item  >\r\n              <v-list-item-action>\r\n                <v-switch v-model=\"notification.active_practice\" color=\"teal\"></v-switch>\r\n              </v-list-item-action>\r\n              <v-list-item-title>Set as active practice</v-list-item-title>\r\n            </v-list-item>\r\n          </v-list>\r\n          <v-card-actions>\r\n            <v-btn color=\"primary\" text @click=\"acceptNotification(notification)\">Accept</v-btn>\r\n            <v-btn text @click=\"denyNotification(notification)\">Deny</v-btn>\r\n          </v-card-actions>\r\n          <v-divider v-if=\"index < (notifications.length-1)\" />\r\n        </v-container>\r\n      </template>\r\n    </v-card>\r\n  </v-menu>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\n\r\nexport default {\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      required: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      notifications: null,\r\n      active_practice: true,\r\n    }\r\n  },\r\n  computed: {\r\n    visibleNotifications() {\r\n      if (this.notifications) {\r\n        return this.notifications.filter(i => i.visible == true)\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    lastThreeNotifications() {\r\n      return this.visibleNotifications.slice(0,3)\r\n    },\r\n    unreadNotifications() {\r\n      return this.visibleNotifications.filter(i => i.read == false)\r\n    },\r\n    numNotifications() {\r\n      if (this.unreadNotifications.length > 0) {\r\n        return this.unreadNotifications.length\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getNotifications() {\r\n      let endpoint = \"/api/notifications/\";\r\n      apiService(endpoint).then(data => {\r\n        this.notifications = data.results;\r\n      });\r\n    },\r\n    denyNotification(notification){\r\n      this.setInvisible(notification)\r\n    },\r\n    setActivePractice(notification) {\r\n      if (notification.active_practice == true) {\r\n        return notification.practice;\r\n      } else {\r\n        return this.user.active_practice;\r\n      }\r\n    },\r\n    removeFromPending(notification) {\r\n      let result = this.user.pending_practices.filter(i => i != notification.practice)\r\n      if (result) {\r\n        return result\r\n      }\r\n    },\r\n    addToPractices(notification) {\r\n      this.user.practices.push(notification.practice);\r\n      return this.user.practices\r\n    },\r\n    acceptNotification(notification) {\r\n      this.setInvisible(notification);\r\n      if (notification.type == 'practice_invite'){\r\n        this.acceptPracticeInvite(notification);\r\n      }\r\n    },\r\n    acceptPracticeInvite(notification) {\r\n      let endpoint = `/api/user/${this.user.id}/`;\r\n      apiService(endpoint, \"PATCH\" , {\r\n        active_practice: this.setActivePractice(notification),\r\n        practices: this.addToPractices(notification),\r\n        pending_practices: this.removeFromPending(notification),\r\n      });\r\n    },\r\n    setAsRead() {\r\n      let ids = []\r\n      for (let item of this.unreadNotifications) {\r\n        ids.push(item.id);\r\n      }\r\n      for (let id of ids) {\r\n        let result = this.notifications.find(i => i.id === id)\r\n        result.read = true;\r\n        let endpoint = `/api/notifications/${id}/`;\r\n        apiService(endpoint, \"PATCH\", {\r\n          read: true,\r\n        });\r\n      }\r\n    },\r\n    setInvisible(notification) {\r\n      let endpoint = `/api/notifications/${notification.id}/`;\r\n      apiService(endpoint, \"PATCH\", {\r\n        visible: false,\r\n      }).then(data => {\r\n        this.$set(notification,'visible', data.visible);\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getNotifications();\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n</style>\r\n"]}]}