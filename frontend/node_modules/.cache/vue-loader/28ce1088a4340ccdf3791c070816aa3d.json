{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\RiskProfileTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\RiskProfileTable.vue","mtime":1585623161856},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RiskProfileTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RiskProfileTable.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n  <v-form  @submit.prevent=\"onSubmit\">\r\n    <v-container>\r\n      <v-row dense>\r\n        <v-col\r\n          :cols=\"2\">\r\n          <v-card>\r\n            <v-card-title>\r\n            </v-card-title>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\">\r\n          <v-card>\r\n            <v-card-title>\r\n              {{ Object.values(AAName)[0] }}\r\n            </v-card-title>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col\r\n          :cols=\"1\">\r\n        </v-col>\r\n      </v-row>\r\n      <v-row\r\n        v-for=\"profile in riskProfiles\"\r\n        :key=\"profile.id\"\r\n        dense>\r\n        <v-col\r\n          :cols=\"2\">\r\n            <v-text-field\r\n              @change=\"addToChanged(profile)\"\r\n              v-model=\"profile.name\"\r\n              outlined dense solo />\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\">\r\n            <v-text-field\r\n              @change=\"addToChanged(profile)\"\r\n              :value = \"getAAPercentage(AAName,profile)\"\r\n              @input = \"setAAPercentage($event, AAName, profile)\"\r\n              outlined dense solo/>\r\n        </v-col>\r\n        <v-col\r\n          :cols=\"1\">\r\n          <DeleteObj\r\n            :objectType=\"'riskprofile'\"\r\n            :objectToDelete=\"profile\"\r\n            :RPGroupID=\"RPGroupID\"\r\n            @delete-object=\"getRiskProfiles\"\r\n            v-on=\"$listeners\"\r\n          />\r\n        </v-col>\r\n      </v-row>\r\n      <v-row\r\n        dense>\r\n        <v-col\r\n          :cols=\"2\">\r\n            <v-text-field\r\n              v-model=\"newRP.name\"\r\n              outlined dense solo />\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\">\r\n            <v-text-field\r\n              v-model=\"newRP.allocations[Object.keys(AAName)[0]]\"\r\n              outlined dense solo/>\r\n        </v-col>\r\n        <v-col\r\n          :cols=\"1\">\r\n          <v-btn type=\"button\" color=\"green\" dark dense\r\n            @click=\"addRP\">\r\n            <v-icon>\r\n              mdi-plus\r\n            </v-icon>\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n      <v-row v-if=\"riskProfiles.length\">\r\n        <v-col>\r\n          <v-btn type=\"submit\" color=\"primary\" dark dense>Update</v-btn>\r\n        </v-col>\r\n      </v-row>\r\n      <br>\r\n      <AANameConfig\r\n        :RPAANames=\"RPAANames\"/>\r\n    </v-container>\r\n  </v-form>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\nimport AANameConfig from \"@/components/AANameConfig.vue\";\r\nimport DeleteObj from \"@/components/DeleteObj.vue\";\r\n\r\nexport default {\r\n  name: \"RiskProfileTable\",\r\n  props: {\r\n    RPGroupID: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      riskProfiles: [],\r\n      RPAANames: [],\r\n      error: null,\r\n      changeList: [],\r\n      newRP: {\r\n        name:\"\",\r\n        order:null,\r\n        allocations:{},\r\n      },\r\n    };\r\n  },\r\n  components: {\r\n    AANameConfig,\r\n    DeleteObj,\r\n  },\r\n  computed: {\r\n    nameSet: function (){\r\n      let AANameList = [];\r\n      let checkList = []\r\n      for (let i = 0; i < this.RPAANames.length; i++) {\r\n        let found = false;\r\n        let aaName = this.RPAANames[i];\r\n          if (checkList.includes(aaName.custom_name)) {\r\n            found = true;\r\n          }\r\n          if (!found) {\r\n            let newAA = {};\r\n            newAA[aaName.id] = aaName.custom_name;\r\n            AANameList.push(newAA);\r\n            found = false;\r\n            checkList.push(aaName.custom_name);\r\n          }\r\n      }\r\n      return (AANameList)\r\n    }\r\n  },\r\n  watch: {\r\n    RPGroupID: function () {\r\n      this.getRPAANameData();\r\n      this.getRiskProfiles();\r\n    },\r\n  },\r\n  methods: {\r\n    addToChanged(profile) {\r\n      if (!(this.changeList.includes(profile))) {\r\n        this.changeList.push(profile);\r\n      } else {\r\n        const i = this.changeList.findIndex(item => item.id === profile.id);\r\n        this.changeList.splice(i, 1);\r\n        this.changeList.push(profile);\r\n      }\r\n    },\r\n    setAAPercentage(event, AAName, riskProfile) {\r\n      const i = this.riskProfiles.findIndex(item => item.id === riskProfile.id);\r\n      const aaID = Object.keys(AAName)[0];\r\n      let found = false;\r\n      for (let x=0; x < this.riskProfiles[i].allocations.length; x++){\r\n        found = false;\r\n          if (this.riskProfiles[i].allocations[x].name.id == aaID) {\r\n            // event = event.split(\"%\").pop();\r\n            this.riskProfiles[i].allocations[x].percentage = event/100;\r\n            found = true;\r\n            break;\r\n          }\r\n      }\r\n      if (!found) {\r\n        let newAllocation = {}\r\n        newAllocation.name = {}\r\n        newAllocation.name.id = aaID;\r\n        newAllocation.percentage = event/100;\r\n        newAllocation.riskprofile = riskProfile.id;\r\n        newAllocation.id = null;\r\n        this.riskProfiles[i].allocations.push(newAllocation);\r\n      }\r\n    },\r\n    getAAPercentage(AAName, riskProfile) {\r\n      let percentage = 0\r\n      for (let i=0; i < riskProfile.allocations.length; i++) {\r\n        if (riskProfile.allocations[i].name.custom_name == Object.values(AAName)[0]) {\r\n          percentage += riskProfile.allocations[i].percentage;\r\n        }\r\n      }\r\n      return (percentage*100)\r\n    },\r\n    getRiskProfiles() {\r\n      let endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/`;\r\n      apiService(endpoint).then(data => {\r\n        this.riskProfiles = data.results;\r\n      });\r\n    },\r\n    getRPAANameData() {\r\n      let endpoint = `/api/activeriskprofilenames/`;\r\n      apiService(endpoint).then(data => {\r\n        this.RPAANames = data.results;\r\n      });\r\n    },\r\n    addRP() {\r\n      if (this.newRP.name) {\r\n        let endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/`;\r\n        apiService(endpoint, \"POST\", {\r\n          name: this.newRP.name,\r\n          group: this.RPGroupID,\r\n          order: this.newRP.order,\r\n        }).then(data => {\r\n          this.addAA(data.id);\r\n          console.log(data);\r\n        });\r\n        if (this.error) {\r\n          this.error = null;\r\n        }\r\n      } else {\r\n        this.error = \"You must enter a name for the new risk profile.\";\r\n      }\r\n    },\r\n    addAA(id) {\r\n      for (const [key, value] of Object.entries(this.newRP.allocations)) {\r\n        let endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/${id}/aa/`;\r\n        apiService(endpoint, \"POST\", {\r\n          name_id: key,\r\n          percentage: value/100,\r\n          riskprofile: id\r\n        }).then(data => {\r\n          this.getRiskProfiles();\r\n          this.newRP.name=\"\";\r\n          this.newRP.order=null;\r\n          this.newRP.allocations = {};\r\n          this.$emit(\"disable-dialog\", data);\r\n          console.log(data);\r\n        });\r\n      }\r\n    },\r\n    onSubmit() {\r\n      if (this.changeList) {\r\n        for (let i=0; i < this.changeList.length; i++) {\r\n          let endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/${this.changeList[i].id}/`;\r\n          apiService(endpoint, \"PATCH\", {\r\n            name: this.changeList[i].name,\r\n            group: this.changeList[i].group,\r\n            order: this.changeList[i].order,\r\n          }).then(data => {\r\n            this.updateAA(data.id, this.changeList[i]);\r\n          });\r\n        };\r\n      };\r\n    },\r\n    updateAA(profileID, profile) {\r\n      for (let i=0; i < profile.allocations.length; i++) {\r\n        let endpoint = '';\r\n        let method = '';\r\n        if (profile.allocations[i].id == null) {\r\n          endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/${profileID}/aa/`;\r\n          method = \"POST\"\r\n        } else {\r\n          endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/${profileID}/aa/${profile.allocations[i].id}/`;\r\n          method = \"PATCH\"\r\n        };\r\n        apiService(endpoint, method, {\r\n          id: profile.allocations[i].id,\r\n          name_id: profile.allocations[i].name.id,\r\n          percentage: profile.allocations[i].percentage,\r\n          riskprofile: profileID\r\n        }).then(data => {\r\n          console.log(data)\r\n          this.getRiskProfiles();\r\n          this.$emit(\"disable-dialog\", data);\r\n          this.changeList=[];\r\n        });\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getRPAANameData();\r\n    this.getRiskProfiles();\r\n  }\r\n};\r\n</script>\r\n"]}]}