{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\views\\Scenario.vue?vue&type=style&index=0&media=screen&lang=css&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\views\\Scenario.vue","mtime":1610084200663},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRyYWdMaXN0IHsKICB3aWR0aDogMTAwJTsKICBtaW4taGVpZ2h0OiAzMDBweDsKfQo="},{"version":3,"sources":["Scenario.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2WA;AACA;AACA;AACA","file":"Scenario.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <v-container class=\"fullwidthrow pa-0\" style=\"background: #e4e7f0\">\r\n      <v-container style=\"width:1012px\" class=\"pb-0\">\r\n        <v-card v-if=\"activeScenario\"  class=\"pt-8 px-8 mt-4 rounded-card-top-only nobottomshadow\">\r\n          <v-row>\r\n            <v-col dense :cols=\"4\">\r\n              <span class=\"display-1 font-weight-medium\"><strong>{{ activeScenario.client }}</strong></span>\r\n            </v-col>\r\n            <v-divider vertical inset/>\r\n            <v-col>\r\n              <Healthcheck\r\n                :currentPlatforms=\"currentList\"\r\n                :recommendedPlatforms=\"recommendedList\"\r\n                :alternativePlatforms=\"alternativeList\"\r\n              />\r\n            </v-col>\r\n          </v-row>\r\n            <v-row>\r\n              <v-col :cols=\"4\">\r\n                <FeeChartSummary\r\n                  :currentPlatforms=\"currentList\"\r\n                  :recommendedPlatforms=\"recommendedList\"\r\n                  :alternativePlatforms=\"alternativeList\"\r\n                />\r\n              </v-col>\r\n              <v-col :cols=\"8\">\r\n                <ScenarioAAChartSummary\r\n                  :riskProfile=\"riskProfile\"\r\n                  :key=\"AAChartKey\"\r\n                />\r\n              </v-col>\r\n            </v-row>\r\n            <v-row>\r\n              <template\r\n                v-for=\"status in statuses\">\r\n                <v-col\r\n                  :key=\"status\">\r\n                  <v-card-title\r\n                    class=\"justify-center py-0 subtitle-1 font-weight-medium\">\r\n                  {{ status }}\r\n                  </v-card-title>\r\n                </v-col>\r\n              </template>\r\n            </v-row>\r\n        </v-card>\r\n      </v-container>\r\n    </v-container>\r\n\r\n    <v-container\r\n      class=\"white px-4 pt-0\">\r\n      <v-row>\r\n        <v-col class=\"pt-0\">\r\n          <v-divider style=\"height:4px; max-height:4px\" class=\"primary\" />\r\n\r\n          <v-card class=\"px-4 half-rounded-card-bottom-only\" elevation=\"4\">\r\n            <v-row>\r\n              <v-col>\r\n                <AddPlatform\r\n                  :status=\"'Current'\"\r\n                  :currentType=\"currentType\"\r\n                  @add-platform=\"addPlatform\" />\r\n              </v-col>\r\n            </v-row>\r\n            <v-row>\r\n              <v-col class=\"pt-0\">\r\n                <v-row>\r\n                  <draggable\r\n                    class=\"dragList\"\r\n                    v-model=\"currentList\"\r\n                    group=\"statusLists\"\r\n                    @start=\"drag=true\"\r\n                    @end=\"drag=false\"\r\n                    @change=\"updateStatus('Current', $event)\"\r\n                    :emptyInsertThreshold=\"5\"\r\n                    >\r\n                    <v-col\r\n                      v-for=\"platform in currentList\"\r\n                      :key=\"platform.id\">\r\n                      <PlatformSummary\r\n                        :scenario=\"activeScenario\"\r\n                        :platform=\"platform\"\r\n                        @delete-object=\"deleteObj\"\r\n                        @clone-platform=\"clonePlatform\"\r\n                      />\r\n                    </v-col>\r\n                  </draggable>\r\n                </v-row>\r\n              </v-col>\r\n            </v-row>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col class=\"pt-0\">\r\n\r\n          <v-divider style=\"height:4px; max-height:4px\" class=\"primary\" />\r\n\r\n          <v-card class=\"px-4 half-rounded-card-bottom-only\" elevation=\"4\">\r\n            <v-row>\r\n              <v-col>\r\n                <AddPlatform\r\n                  :status=\"'Recommended'\"\r\n                  :currentType=\"currentType\"\r\n                  @add-platform=\"addPlatform\" />\r\n              </v-col>\r\n            </v-row>\r\n            <v-row>\r\n            <v-col class=\"pt-0\">\r\n              <v-row>\r\n                <draggable\r\n                  class=\"dragList\"\r\n                  v-model=\"recommendedList\"\r\n                  group=\"statusLists\"\r\n                  @start=\"drag=true\"\r\n                  @end=\"drag=false\"\r\n                  @change=\"updateStatus('Recommended', $event)\"\r\n                  :emptyInsertThreshold=\"5\">\r\n                  <v-col\r\n                    v-for=\"platform in recommendedList\"\r\n                    :key=\"platform.id\">\r\n                    <PlatformSummary\r\n                      :scenario=\"activeScenario\"\r\n                      :platform=\"platform\"\r\n                      @delete-object=\"deleteObj\"\r\n                      @clone-platform=\"clonePlatform\"\r\n                    />\r\n                  </v-col>\r\n                </draggable>\r\n              </v-row>\r\n            </v-col>\r\n          </v-row>\r\n        </v-card>\r\n\r\n      </v-col>\r\n      <v-col class=\"pt-0\">\r\n        <v-divider style=\"height:4px; max-height:4px\" class=\"primary\" />\r\n\r\n        <v-card class=\"px-4 half-rounded-card-bottom-only\" elevation=\"4\">\r\n          <v-row>\r\n            <v-col>\r\n              <AddPlatform\r\n                :status=\"'Alternative'\"\r\n                :currentType=\"currentType\"\r\n                @add-platform=\"addPlatform\" />\r\n            </v-col>\r\n          </v-row>\r\n          <v-row>\r\n            <v-col class=\"pt-0\">\r\n              <v-row>\r\n                <draggable\r\n                  class=\"dragList\"\r\n                  v-model=\"alternativeList\"\r\n                  group=\"statusLists\"\r\n                  @start=\"drag=true\"\r\n                  @end=\"drag=false\"\r\n                  @change=\"updateStatus('Alternative', $event)\"\r\n                  :emptyInsertThreshold=\"5\">\r\n                  <v-col\r\n                    v-for=\"platform in alternativeList\"\r\n                    :key=\"platform.id\">\r\n                    <PlatformSummary\r\n                      :scenario=\"activeScenario\"\r\n                      :platform=\"platform\"\r\n                      @delete-object=\"deleteObj\"\r\n                      @clone-platform=\"clonePlatform\"\r\n                    />\r\n                  </v-col>\r\n                </draggable>\r\n              </v-row>\r\n            </v-col>\r\n          </v-row>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\nimport AddPlatform from \"@/components/AddPlatform.vue\";\r\nimport PlatformSummary from \"@/components/PlatformSummary.vue\";\r\nimport Healthcheck from \"@/components/Healthcheck.vue\";\r\nimport FeeChartSummary from \"@/components/FeeChartSummary.vue\";\r\nimport ScenarioAAChartSummary from \"@/components/ScenarioAAChartSummary.vue\";\r\nimport draggable from 'vuedraggable'\r\nimport { mapGetters } from \"vuex\";\r\nimport { SCENARIO_FETCH } from \"@/store/actions.type\";\r\nimport {\r\n  CLEAR_ACTIVE_SCENARIO,\r\n} from \"@/store/mutations.type\";\r\nimport {\r\n  PLATFORMNAME_ALL\r\n} from \"@/store/actions.type\";\r\n\r\nexport default {\r\n  name: \"Scenario\",\r\n  provide() {\r\n    return {\r\n      scenarioId: this.id\r\n    };\r\n  },\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  components: {\r\n    AddPlatform,\r\n    PlatformSummary,\r\n    draggable,\r\n    Healthcheck,\r\n    FeeChartSummary,\r\n    ScenarioAAChartSummary,\r\n  },\r\n  data() {\r\n    return {\r\n      AAChartKey: 0,\r\n      scenario: null,\r\n      platforms: [],\r\n      error: null,\r\n      next: null,\r\n      currentList: [],\r\n      recommendedList: [],\r\n      alternativeList: [],\r\n      clone: {},\r\n      statuses: [\r\n        \"Current\",\r\n        \"Recommended\",\r\n        \"Alternative\"\r\n      ],\r\n    };\r\n  },\r\n  watch: {\r\n    id() {\r\n      this.setActiveScenario();\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activeScenario\", \"activeUser\", \"platformNames\"]),\r\n    currentType() {\r\n      // Returns the platform type of the first item added to the current list.\r\n      // This is passed to platformSummary for targeted sponsored products\r\n      if (this.currentList.length > 0) {\r\n        const result = this.currentList.reduce((r, o) =>\r\n          o.create_date < r.create_date  ? o : r);\r\n        return result.platform_type\r\n      } else {\r\n        return null\r\n      }\r\n    },\r\n    riskProfile() {\r\n      if (!this._.isEmpty(this.activeScenario.risk_profile)) {\r\n        return this.activeScenario.risk_profile;\r\n      } else {\r\n        return {}\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    forceRerender() {\r\n      // Forces the AA Chart to call the API data when a platform is moved.\r\n      this.AAChartKey += 1;\r\n    },\r\n    allocateToList(platform) {\r\n      if (platform.status == \"Current\") {\r\n        this.currentList.push(platform);\r\n      } else if (platform.status == \"Recommended\") {\r\n        this.recommendedList.push(platform);\r\n      } else if (platform.status == \"Alternative\") {\r\n        this.alternativeList.push(platform);\r\n      }\r\n    },\r\n    sortPlatforms() {\r\n      this.platforms.forEach((platform) => {\r\n        this.allocateToList(platform);\r\n      })\r\n    },\r\n    checkNull(list) {\r\n      if (list.length > 0) {\r\n        return list;\r\n      }\r\n    },\r\n    setPageTitle(title) {\r\n      document.title = title;\r\n    },\r\n    getScenarioPlatforms() {\r\n      let endpoint = `/api/scenarios/${this.id}/platforms/`;\r\n      if (this.next) {\r\n        endpoint = this.next;\r\n      }\r\n      apiService(endpoint).then(data => {\r\n        this.platforms.push(...data.results);\r\n        this.sortPlatforms();\r\n        if (data.next) {\r\n          this.next = data.next;\r\n          this.getScenarioPlatforms();\r\n        } else {\r\n          this.next = null;\r\n        }\r\n      });\r\n    },\r\n    addPlatform(platform) {\r\n      this.platforms.push(platform);\r\n      this.allocateToList(platform);\r\n    },\r\n    deleteObj(objectToDelete) {\r\n      if (objectToDelete.status == \"Current\") {\r\n        this.currentList.splice(this.currentList.indexOf(objectToDelete),1);\r\n      } else if (objectToDelete.status == \"Recommended\") {\r\n        this.recommendedList.splice(this.recommendedList.indexOf(objectToDelete),1);\r\n      } else if (objectToDelete.status == \"Alternative\") {\r\n        this.alternativeList.splice(this.alternativeList.indexOf(objectToDelete),1);\r\n      } else {\r\n        console.log(objectToDelete);\r\n      }\r\n      let deletedPlatform = this.platforms.indexOf(objectToDelete)\r\n      this.$delete(this.platforms, deletedPlatform);\r\n      this.forceRerender()\r\n    },\r\n    updateStatus(status, {added}) {\r\n      if (added != undefined) {\r\n        let changedPlatform = this.platforms[this.platforms.indexOf(added.element)];\r\n        changedPlatform.status = status;\r\n        this.patchPlatformStatus(changedPlatform);\r\n      }\r\n    },\r\n    clonePlatform(clone) {\r\n      this.addPlatform(clone);\r\n      this.forceRerender()\r\n    },\r\n    patchPlatformStatus(platform) {\r\n      let endpoint = `/api/scenarios/${this.id}/platforms/${platform.id}/`;\r\n      apiService(endpoint, \"PATCH\", {status: platform.status}).then(() =>\r\n        this.forceRerender()\r\n      )\r\n    },\r\n    setActiveScenario(){\r\n      if (this._.isEmpty(this.activeScenario)) {\r\n        this.$store.dispatch(SCENARIO_FETCH, this.id);\r\n      }\r\n    },\r\n    getPlatformNames() {\r\n      if (this._.isEmpty(this.platformNames)) {\r\n        this.$store.dispatch(PLATFORMNAME_ALL, null)\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getScenarioPlatforms();\r\n    this.setActiveScenario();\r\n    this.getPlatformNames();\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    if (to.name != \"platform\" && to.name != \"reports\") {\r\n      this.$store.commit(CLEAR_ACTIVE_SCENARIO);\r\n    }\r\n    next()\r\n  }\r\n};\r\n</script>\r\n<style media=\"screen\">\r\n  .dragList {\r\n    width: 100%;\r\n    min-height: 300px;\r\n  }\r\n</style>\r\n"]}]}