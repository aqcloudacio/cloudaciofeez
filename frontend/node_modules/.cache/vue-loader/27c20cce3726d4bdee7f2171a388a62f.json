{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\InvestmentAAChartSummary.vue?vue&type=style&index=0&media=screen&lang=css&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\InvestmentAAChartSummary.vue","mtime":1611120852862},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnYtc2VsZWN0X19zZWxlY3Rpb25zIHsKICBmb250LXNpemU6IC44ZW0gIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["InvestmentAAChartSummary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA","file":"InvestmentAAChartSummary.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n  <v-container class=\"pa-3\">\r\n      <AABarChart\r\n        v-if=\"chartData != null\"\r\n        :chartData=\"chartData\"\r\n        :options=\"chartOptions\"\r\n        :height=\"220\"\r\n        ref=\"AABarChart\"\r\n        :key=\"AAKey\"\r\n      >\r\n    </AABarChart>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport AABarChart from \"@/components/AABarChart.vue\";\r\nimport MergeAAAllocations from \"@/components/mixins/MergeAAAllocations.js\"\r\n\r\nexport default {\r\n  name: \"InvestmentAAChartSummary\",\r\n  mixins: [MergeAAAllocations],\r\n  props: {\r\n    RPAANames: {\r\n      type: Array,\r\n      required: false\r\n    },\r\n    aaSummary: {\r\n      type: Array,\r\n      required: false\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      AAKey:0,\r\n      chartOptions: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          yAxes: [{\r\n            gridLines: {\r\n              drawBorder: false,\r\n            },\r\n            ticks: {\r\n              fontColor: 'rgba(77,77,80)',\r\n              beginAtZero: true,\r\n              maxTicksLimit: 6,\r\n              callback: function (value) {\r\n                return value.toLocaleString('en-US', {style:'percent'});\r\n              }\r\n            }\r\n          }],\r\n          xAxes: [{\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n            ticks: {\r\n              fontColor: 'rgba(77,77,80)',\r\n              maxRotation: 0,\r\n              callback: function (value) {\r\n                let matches = value.match(/\\b(\\w)/g);\r\n                let acronym = matches.join('');\r\n                return acronym\r\n              }\r\n            }\r\n          }],\r\n        },\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function(tooltipItem, data) {\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              if (label.length > 0) {\r\n                label += ': ';\r\n                label = label[0].toUpperCase() + label.slice(1).toLowerCase();\r\n              }\r\n              let val = tooltipItem.yLabel;\r\n              val = val.toLocaleString('en-US', {style:'percent', minimumFractionDigits:2});\r\n              label += val\r\n              return label\r\n            }\r\n          }\r\n        },\r\n        // title: {\r\n        //   display: true,\r\n        //   text: \"Asset Allocation\",\r\n        // },\r\n        legend: {\r\n          display: false,\r\n        },\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    AABarChart\r\n  },\r\n  computed: {\r\n    AAArray() {\r\n      if (!this._.isEmpty(this.aaSummary)) {\r\n        return this.$mergeAAAllocations(this.RPAANames, this.aaSummary, \"aa_total_perc\")\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    chartData(){\r\n      return {\r\n        labels: this.RPAANames,\r\n        datasets: [\r\n          {\r\n            data: this.AAArray,\r\n            backgroundColor: 'rgba(222, 72, 108)',\r\n            borderColor: 'rgba(222, 72, 108)',\r\n            borderWidth: 1,\r\n            label: \"Asset Allocation\"\r\n          },\r\n        ]\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    aaSummary () {\r\n      this.forceRerender();\r\n    },\r\n  },\r\n  methods: {\r\n    forceRerender(){\r\n      this.AAKey += 1;\r\n    },\r\n  },\r\n  mounted() {\r\n  }\r\n};\r\n</script>\r\n<style media=\"screen\">\r\n  .v-select__selections {\r\n    font-size: .8em !important;\r\n  }\r\n</style>\r\n"]}]}