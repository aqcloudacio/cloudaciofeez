{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\PlatformAAChartSummary.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\PlatformAAChartSummary.vue","mtime":1601437893462},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQUFCYXJDaGFydCBmcm9tICJAL2NvbXBvbmVudHMvQUFCYXJDaGFydC52dWUiOw0KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOw0KDQppbXBvcnQgTWVyZ2VSUEFsbG9jYXRpb25zIGZyb20gIkAvY29tcG9uZW50cy9taXhpbnMvTWVyZ2VSUEFsbG9jYXRpb25zLmpzIg0KaW1wb3J0IE1lcmdlQUFBbGxvY2F0aW9ucyBmcm9tICJAL2NvbXBvbmVudHMvbWl4aW5zL01lcmdlQUFBbGxvY2F0aW9ucy5qcyINCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiUGxhdGZvcm1BQUNoYXJ0U3VtbWFyeSIsDQogIG1peGluczogW01lcmdlUlBBbGxvY2F0aW9ucywgTWVyZ2VBQUFsbG9jYXRpb25zXSwNCiAgcHJvcHM6IHsNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY2hhcnRPcHRpb25zOiB7DQogICAgICAgIHNjYWxlczogew0KICAgICAgICAgICAgeUF4ZXM6IFt7DQogICAgICAgICAgICAgICAgdGlja3M6IHsNCiAgICAgICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsDQogICAgICAgICAgICAgICAgICAgIG1heFRpY2tzTGltaXQ6IDYsDQogICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAodmFsdWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUudG9Mb2NhbGVTdHJpbmcoJ2VuLVVTJywge3N0eWxlOidwZXJjZW50J30pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfV0sDQogICAgICAgICAgICB4QXhlczogW3sNCiAgICAgICAgICAgICAgICB0aWNrczogew0KICAgICAgICAgICAgICAgICAgbWF4Um90YXRpb246IDAgLA0KICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICh2YWx1ZSkgew0KICAgICAgICAgICAgICAgICAgICBsZXQgbWF0Y2hlcyA9IHZhbHVlLm1hdGNoKC9cYihcdykvZyk7DQogICAgICAgICAgICAgICAgICAgIGxldCBhY3JvbnltID0gbWF0Y2hlcy5qb2luKCcnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjcm9ueW0NCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9XSwNCiAgICAgICAgfSwNCiAgICAgICAgdG9vbHRpcHM6IHsNCiAgICAgICAgICBjYWxsYmFja3M6IHsNCiAgICAgICAgICAgIGxhYmVsOiBmdW5jdGlvbih0b29sdGlwSXRlbSwgZGF0YSkgew0KICAgICAgICAgICAgICBsZXQgbGFiZWwgPSBkYXRhLmRhdGFzZXRzW3Rvb2x0aXBJdGVtLmRhdGFzZXRJbmRleF0ubGFiZWwgfHwgJyc7DQogICAgICAgICAgICAgIGlmIChsYWJlbCkgew0KICAgICAgICAgICAgICAgIGxhYmVsICs9ICc6ICc7DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgbGV0IHZhbCA9IHRvb2x0aXBJdGVtLnlMYWJlbDsNCiAgICAgICAgICAgICAgdmFsID0gdmFsLnRvTG9jYWxlU3RyaW5nKCdlbi1VUycsIHtzdHlsZToncGVyY2VudCcsIG1pbmltdW1GcmFjdGlvbkRpZ2l0czoyfSk7DQogICAgICAgICAgICAgIGxhYmVsICs9IHZhbA0KICAgICAgICAgICAgICByZXR1cm4gbGFiZWwNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgZGlzcGxheTogdHJ1ZSwNCiAgICAgICAgICB0ZXh0OiAiQXNzZXQgQWxsb2NhdGlvbiIsDQogICAgICAgIH0sDQogICAgICAgIGxlZ2VuZDogew0KICAgICAgICAgIHBvc2l0aW9uOiAndG9wJywNCiAgICAgICAgICBsYWJlbHM6IHsNCiAgICAgICAgICAgIGZvbnRDb2xvcjogJ2dyZXknDQogICAgICAgICAgfSwNCiAgICAgICAgICBvbkhvdmVyOiBmdW5jdGlvbihlKSB7DQogICAgICAgICAgICBlLnRhcmdldC5zdHlsZS5jdXJzb3IgPSAncG9pbnRlcic7DQogICAgICAgICAgfSwNCiAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbihlLCBsZWdlbmRJdGVtKSB7DQogICAgICAgICAgICB2YXIgaW5kZXggPSBsZWdlbmRJdGVtLmRhdGFzZXRJbmRleDsNCiAgICAgICAgICAgIHZhciBjaSA9IHRoaXMuY2hhcnQ7DQogICAgICAgICAgICB2YXIgbWV0YSA9IGNpLmdldERhdGFzZXRNZXRhKGluZGV4KTsNCg0KICAgICAgICAgICAgICBpZiAobWV0YS5oaWRkZW4gPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgIG1ldGEuaGlkZGVuID0gZmFsc2UNCiAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBtZXRhLmhpZGRlbiA9IHRydWU7DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGNpLnVwZGF0ZSgpOw0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgaG92ZXI6IHsNCiAgICAgICAgIG9uSG92ZXI6IGZ1bmN0aW9uKGUpIHsNCiAgICAgICAgICAgIHZhciBwb2ludCA9IHRoaXMuZ2V0RWxlbWVudEF0RXZlbnQoZSk7DQogICAgICAgICAgICBpZiAoIXBvaW50Lmxlbmd0aCkgZS50YXJnZXQuc3R5bGUuY3Vyc29yID0gJ2RlZmF1bHQnOw0KICAgICAgICAgfQ0KICAgICAgIH0NCiAgICAgIH0NCiAgICB9Ow0KICB9LA0KICBjb21wb25lbnRzOiB7DQogICAgQUFCYXJDaGFydA0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcEdldHRlcnMoWyJhY3RpdmVTY2VuYXJpbyIsICJhY3RpdmVQbGF0Zm9ybSIsICJhY3RpdmVQbGF0Zm9ybUFBIl0pLA0KICAgIEFBTmFtZXMoKSB7DQogICAgICBsZXQgY3VzdG9tX25hbWVzID0gdGhpcy5hY3RpdmVQbGF0Zm9ybUFBLm1hcChhID0+IGEuY3VzdG9tX25hbWUpOw0KICAgICAgbGV0IGFhbmFtZXMgPSBbLi4ubmV3IFNldChjdXN0b21fbmFtZXMpXTsNCiAgICAgIHJldHVybiBhYW5hbWVzDQogICAgfSwNCiAgICBSUEFycmF5KCkgew0KICAgICAgLy8gZmluZHMgYW55IGR1cGxpY2F0ZSBSUF9BQV9OYW1lcyBhbmQgbWVyZ2VzIHRoZWlyIHZhbHVlcw0KICAgICAgaWYgKCF0aGlzLl8uaXNFbXB0eSh0aGlzLmFjdGl2ZVNjZW5hcmlvLnJpc2tfcHJvZmlsZSkpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuJG1lcmdlUlBBbGxvY2F0aW9ucyh0aGlzLkFBTmFtZXMsIHRoaXMuYWN0aXZlU2NlbmFyaW8ucmlza19wcm9maWxlLmFsbG9jYXRpb25zKQ0KDQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gW10NCiAgICAgIH0NCiAgICB9LA0KICAgIEFBQXJyYXkoKSB7DQogICAgICByZXR1cm4gdGhpcy4kbWVyZ2VBQUFsbG9jYXRpb25zKHRoaXMuQUFOYW1lcywgdGhpcy5hY3RpdmVQbGF0Zm9ybUFBLCdhYV90b3RhbF9wZXJjX3BsYXRmb3JtJykNCiAgICB9LA0KICAgIGNoYXJ0RGF0YSgpew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgbGFiZWxzOiB0aGlzLkFBTmFtZXMsDQogICAgICAgIGRhdGFzZXRzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgZGF0YTogdGhpcy5SUEFycmF5LA0KICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLDEyOCwxMjgsMC4yKScsDQogICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMCwxMjgsMTI4LDEpJywNCiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxLA0KICAgICAgICAgICAgbGFiZWw6ICJSaXNrIFByb2ZpbGUiDQogICAgICAgICAgfSwNCiAgICAgICAgICB7DQogICAgICAgICAgICBkYXRhOiB0aGlzLkFBQXJyYXksDQogICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI1NSwgOTksIDEzMiwgMC4yKScsDQogICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMjU1LCA5OSwgMTMyLCAxKScsDQogICAgICAgICAgICBib3JkZXJXaWR0aDogMSwNCiAgICAgICAgICAgIGxhYmVsOiB0aGlzLmFjdGl2ZVBsYXRmb3JtLnN0cl9uYW1lDQogICAgICAgICAgfQ0KICAgICAgICBdDQogICAgICB9DQogICAgfSwNCiAgfSwNCiAgbWV0aG9kczogew0KICB9LA0KICBtb3VudGVkKCkgew0KICB9DQp9Ow0K"},{"version":3,"sources":["PlatformAAChartSummary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"PlatformAAChartSummary.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n  <v-card v-if=\"chartData != null\" >\r\n      <AABarChart\r\n        :chartData=\"chartData\"\r\n        :options=\"chartOptions\"\r\n        :height=\"150\"\r\n        ref=\"AABarChart\"\r\n      >\r\n    </AABarChart>\r\n\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport AABarChart from \"@/components/AABarChart.vue\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nimport MergeRPAllocations from \"@/components/mixins/MergeRPAllocations.js\"\r\nimport MergeAAAllocations from \"@/components/mixins/MergeAAAllocations.js\"\r\n\r\nexport default {\r\n  name: \"PlatformAAChartSummary\",\r\n  mixins: [MergeRPAllocations, MergeAAAllocations],\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n      chartOptions: {\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 6,\r\n                    callback: function (value) {\r\n                      return value.toLocaleString('en-US', {style:'percent'});\r\n                    }\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                  maxRotation: 0 ,\r\n                  callback: function (value) {\r\n                    let matches = value.match(/\\b(\\w)/g);\r\n                    let acronym = matches.join('');\r\n                    return acronym\r\n                  }\r\n                }\r\n            }],\r\n        },\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function(tooltipItem, data) {\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              if (label) {\r\n                label += ': ';\r\n              }\r\n              let val = tooltipItem.yLabel;\r\n              val = val.toLocaleString('en-US', {style:'percent', minimumFractionDigits:2});\r\n              label += val\r\n              return label\r\n            }\r\n          }\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Asset Allocation\",\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          labels: {\r\n            fontColor: 'grey'\r\n          },\r\n          onHover: function(e) {\r\n            e.target.style.cursor = 'pointer';\r\n          },\r\n          onClick: function(e, legendItem) {\r\n            var index = legendItem.datasetIndex;\r\n            var ci = this.chart;\r\n            var meta = ci.getDatasetMeta(index);\r\n\r\n              if (meta.hidden == true) {\r\n                meta.hidden = false\r\n              } else {\r\n                meta.hidden = true;\r\n              }\r\n            ci.update();\r\n          }\r\n        },\r\n        hover: {\r\n         onHover: function(e) {\r\n            var point = this.getElementAtEvent(e);\r\n            if (!point.length) e.target.style.cursor = 'default';\r\n         }\r\n       }\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    AABarChart\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activeScenario\", \"activePlatform\", \"activePlatformAA\"]),\r\n    AANames() {\r\n      let custom_names = this.activePlatformAA.map(a => a.custom_name);\r\n      let aanames = [...new Set(custom_names)];\r\n      return aanames\r\n    },\r\n    RPArray() {\r\n      // finds any duplicate RP_AA_Names and merges their values\r\n      if (!this._.isEmpty(this.activeScenario.risk_profile)) {\r\n        return this.$mergeRPAllocations(this.AANames, this.activeScenario.risk_profile.allocations)\r\n\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    AAArray() {\r\n      return this.$mergeAAAllocations(this.AANames, this.activePlatformAA,'aa_total_perc_platform')\r\n    },\r\n    chartData(){\r\n      return {\r\n        labels: this.AANames,\r\n        datasets: [\r\n          {\r\n            data: this.RPArray,\r\n            backgroundColor: 'rgba(0,128,128,0.2)',\r\n            borderColor: 'rgba(0,128,128,1)',\r\n            borderWidth: 1,\r\n            label: \"Risk Profile\"\r\n          },\r\n          {\r\n            data: this.AAArray,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 1,\r\n            label: this.activePlatform.str_name\r\n          }\r\n        ]\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n  },\r\n  mounted() {\r\n  }\r\n};\r\n</script>\r\n"]}]}