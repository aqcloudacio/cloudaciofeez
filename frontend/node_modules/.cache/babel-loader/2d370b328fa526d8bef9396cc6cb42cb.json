{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\store\\user.module.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\store\\user.module.js","mtime":1603944662700},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxcRmVlelxcZmVlelxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFxGZWV6XFxmZWV6XFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgovLyBpbXBvcnQgVnVlIGZyb20gInZ1ZSI7CmltcG9ydCB7IFVzZXJTZXJ2aWNlIH0gZnJvbSAiQC9jb21tb24vYXBpLnNlcnZpY2UiOwppbXBvcnQgeyBVU0VSX0ZFVENILCBVU0VSX1VQREFURSwgUFJBQ1RJQ0VfSU5WSVRFX0FDQ0VQVCwgVVNFUl9MT0dJTiAvLyBVU0VSX1JFR0lTVEVSLAosIFJFRlJFU0hfQUNDRVNTX1RPS0VOIH0gZnJvbSAiLi9hY3Rpb25zLnR5cGUiOwppbXBvcnQgeyBTRVRfQUNUSVZFX1VTRVIsIFJFTU9WRV9BQ1RJVkVfVVNFUl9GUk9NX1BSQUNUSUNFLCBBRERfQUNUSVZFX1VTRVJfVE9fUFJBQ1RJQ0UsIFNFVF9BQ1RJVkVfVVNFUl9QUk9QLCBVUERBVEVfQUNDRVNTX1RPS0VOLCBVUERBVEVfTE9DQUxfU1RPUkFHRSwgREVTVFJPWV9UT0tFTlMsIFRPR0dMRV9SRUZSRVNISU5HX1RPS0VOIH0gZnJvbSAiLi9tdXRhdGlvbnMudHlwZSI7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgYWN0aXZlVXNlcjoge30sCiAgYWNjZXNzVG9rZW46IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3NfdG9rZW4nKSB8fCBudWxsLAogIHJlZnJlc2hUb2tlbjogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3JlZnJlc2hfdG9rZW4nKSB8fCBudWxsLAogIHJlZnJlc2hpbmdBY2Nlc3NUb2tlbjogbnVsbAp9OwpleHBvcnQgdmFyIHN0YXRlID0gX29iamVjdFNwcmVhZCh7fSwgaW5pdGlhbFN0YXRlKTsKZXhwb3J0IHZhciBhY3Rpb25zID0gKF9hY3Rpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgVVNFUl9GRVRDSCwgZnVuY3Rpb24gKGNvbnRleHQpIHsKICByZXR1cm4gVXNlclNlcnZpY2UuZ2V0KCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgY29udGV4dC5jb21taXQoU0VUX0FDVElWRV9VU0VSLCBkYXRhLnJlc3VsdHNbMF0pOwogIH0pOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBQUkFDVElDRV9JTlZJVEVfQUNDRVBULCBmdW5jdGlvbiAoY29udGV4dCwgbm90aWZpY2F0aW9uKSB7CiAgY29udGV4dC5jb21taXQoQUREX0FDVElWRV9VU0VSX1RPX1BSQUNUSUNFLCB7CiAgICAndHlwZSc6ICdwcmFjdGljZScsCiAgICAncHJhY3RpY2UnOiBub3RpZmljYXRpb24ucHJhY3RpY2UKICB9KTsKICBjb250ZXh0LmNvbW1pdChSRU1PVkVfQUNUSVZFX1VTRVJfRlJPTV9QUkFDVElDRSwgewogICAgJ3R5cGUnOiAncGVuZGluZycsCiAgICAncHJhY3RpY2UnOiBub3RpZmljYXRpb24ucHJhY3RpY2UKICB9KTsKCiAgaWYgKG5vdGlmaWNhdGlvbi5hY3RpdmVfcHJhY3RpY2UpIHsKICAgIGNvbnRleHQuY29tbWl0KFNFVF9BQ1RJVkVfVVNFUl9QUk9QLCB7CiAgICAgICdwcm9wJzogJ2FjdGl2ZV9wcmFjdGljZScsCiAgICAgICd2YWx1ZSc6IG5vdGlmaWNhdGlvbi5wcmFjdGljZQogICAgfSk7CiAgfQoKICA7CiAgY29udGV4dC5kaXNwYXRjaChVU0VSX1VQREFURSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFVTRVJfVVBEQVRFLCBmdW5jdGlvbiAoY29udGV4dCkgewogIHJldHVybiBVc2VyU2VydmljZS51cGRhdGUoY29udGV4dC5nZXR0ZXJzLmFjdGl2ZVVzZXIpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgIGNvbnRleHQuY29tbWl0KFNFVF9BQ1RJVkVfVVNFUiwgZGF0YSk7CiAgfSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFVTRVJfTE9HSU4sIGZ1bmN0aW9uIChjb250ZXh0LCBjcmVkZW50aWFscykgewogIHJldHVybiBVc2VyU2VydmljZS5sb2dpbihjcmVkZW50aWFscykudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgLy8gU3RvcmVzIHRoZSBhY2Nlc3MgYW5kIHJlZnJlc2ggdG9rZW5zIGluIGxvY2Fsc3RvcmFnZQogICAgY29udGV4dC5jb21taXQoVVBEQVRFX0xPQ0FMX1NUT1JBR0UsIHsKICAgICAgYWNjZXNzOiBkYXRhLmFjY2VzcywKICAgICAgcmVmcmVzaDogZGF0YS5yZWZyZXNoCiAgICB9KTsgLy8gY2F0Y2goZXJyID0+IHsKICAgIC8vICAgLy9ub3Qgc3VyZSBhYm91dCB0aGlzIHJlamVjdCBiaXQsIGhhdmUgdG8gY2hlY2sgaXQncyBvawogICAgLy8gICByZWplY3QoZXJyKQogICAgLy8gfSk7CiAgfSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFJFRlJFU0hfQUNDRVNTX1RPS0VOLCBmdW5jdGlvbiAoY29udGV4dCkgewogIC8vIGRpc2FibGVzIHJlcXVlc3RpbmcgYW5vdGhlciB0b2tlbiB3aGlsZSB0aGlzIG9uZSBpcyBiZWluZyByZWZyZXNoZWQuCiAgLy8gc3RvcHMgbXVsdGlwbGUgc2ltdWx0YW5lb3VzIHJlZnJlc2ggcmVxdWVzdHMvZXJycyBmcm9tIHZ1ZXgKICAvLyBzZW5kIHRoZSBzdG9yZWQgcmVmcmVzaCB0b2tlbiB0byB0aGUgQVBJCiAgcmV0dXJuIFVzZXJTZXJ2aWNlLnJlZnJlc2hUb2tlbih7CiAgICAncmVmcmVzaCc6IGNvbnRleHQuZ2V0dGVycy5yZWZyZXNoVG9rZW4KICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAvLyBpZiBBUEkgc2VuZHMgYmFjayBuZXcgYWNjZXNzIHRva2VuLCB1cGRhdGUgdGhlIHN0b3JlCiAgICBjb25zb2xlLmxvZygnTmV3IGFjY2VzcyBzdWNjZXNzZnVsbHkgZ2VuZXJhdGVkJyk7CiAgICBjb250ZXh0LmNvbW1pdChVUERBVEVfQUNDRVNTX1RPS0VOLCBkYXRhLmFjY2Vzcyk7CiAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgLy8gSE9XIFRPIEhBTkRMRSBSRUZSRVNIIFRPS0VOIEVYUElSWT8KICAgIGNvbnNvbGUubG9nKCIiLmNvbmNhdChlcnIsICIgZXJyb3IgaW4gcmVmcmVzaFRva2VuIFRhc2siKSk7CiAgfSkuZmluYWxseShjb250ZXh0LmNvbW1pdChUT0dHTEVfUkVGUkVTSElOR19UT0tFTikpOwp9KSwgX2FjdGlvbnMpOwovKiBlc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246IFsiZXJyb3IiLCB7ICJwcm9wcyI6IGZhbHNlIH1dICovCgpleHBvcnQgdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfQUNUSVZFX1VTRVIsIGZ1bmN0aW9uIChzdGF0ZSwgdXNlcikgewogIHN0YXRlLmFjdGl2ZVVzZXIgPSB1c2VyOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIFJFTU9WRV9BQ1RJVkVfVVNFUl9GUk9NX1BSQUNUSUNFLCBmdW5jdGlvbiAoc3RhdGUsIF9yZWYpIHsKICB2YXIgdHlwZSA9IF9yZWYudHlwZSwKICAgICAgcHJhY3RpY2UgPSBfcmVmLnByYWN0aWNlOwoKICBpZiAodHlwZSA9PT0gJ3BlbmRpbmcnKSB7CiAgICB2YXIgcmVzdWx0ID0gc3RhdGUuYWN0aXZlVXNlci5wZW5kaW5nX3ByYWN0aWNlcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHsKICAgICAgcmV0dXJuIGkgIT0gcHJhY3RpY2U7CiAgICB9KTsKICAgIHN0YXRlLmFjdGl2ZVVzZXIucGVuZGluZ19wcmFjdGljZXMgPSByZXN1bHQ7CiAgfQp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFERF9BQ1RJVkVfVVNFUl9UT19QUkFDVElDRSwgZnVuY3Rpb24gKHN0YXRlLCBfcmVmMikgewogIHZhciB0eXBlID0gX3JlZjIudHlwZSwKICAgICAgcHJhY3RpY2UgPSBfcmVmMi5wcmFjdGljZTsKCiAgaWYgKHR5cGUgPT09ICdwcmFjdGljZScpIHsKICAgIHN0YXRlLmFjdGl2ZVVzZXIucHJhY3RpY2VzLnB1c2gocHJhY3RpY2UpOwogIH0KfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfQUNUSVZFX1VTRVJfUFJPUCwgZnVuY3Rpb24gKHN0YXRlLCBfcmVmMykgewogIHZhciBwcm9wID0gX3JlZjMucHJvcCwKICAgICAgdmFsdWUgPSBfcmVmMy52YWx1ZTsKCiAgaWYgKHByb3AuaW5jbHVkZXMoJy4nKSkgewogICAgdmFyIHNwbGl0cHJvcCA9IHByb3Auc3BsaXQoJy4nKTsKICAgIHZhciBvYmogPSBzcGxpdHByb3BbMF07CiAgICB2YXIgYXR0ciA9IHNwbGl0cHJvcFsxXTsKCiAgICBpZiAoIXN0YXRlLmFjdGl2ZVVzZXJbb2JqXSkgewogICAgICBzdGF0ZS5hY3RpdmVVc2VyW29ial0gPSBuZXcgT2JqZWN0KCk7CiAgICB9CgogICAgc3RhdGUuYWN0aXZlVXNlcltvYmpdW2F0dHJdID0gdmFsdWU7CiAgfSBlbHNlIHsKICAgIHN0YXRlLmFjdGl2ZVVzZXJbcHJvcF0gPSB2YWx1ZTsKICB9Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgVVBEQVRFX0xPQ0FMX1NUT1JBR0UsIGZ1bmN0aW9uIChzdGF0ZSwgX3JlZjQpIHsKICB2YXIgYWNjZXNzID0gX3JlZjQuYWNjZXNzLAogICAgICByZWZyZXNoID0gX3JlZjQucmVmcmVzaDsKICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWNjZXNzX3Rva2VuJywgYWNjZXNzKTsKICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncmVmcmVzaF90b2tlbicsIHJlZnJlc2gpOwogIHN0YXRlLmFjY2Vzc1Rva2VuID0gYWNjZXNzOwogIHN0YXRlLnJlZnJlc2hUb2tlbiA9IHJlZnJlc2g7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgVVBEQVRFX0FDQ0VTU19UT0tFTiwgZnVuY3Rpb24gKHN0YXRlLCBhY2Nlc3MpIHsKICBzdGF0ZS5hY2Nlc3NUb2tlbiA9IGFjY2VzczsKICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWNjZXNzX3Rva2VuJywgYWNjZXNzKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBERVNUUk9ZX1RPS0VOUywgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuYWNjZXNzVG9rZW4gPSBudWxsOwogIHN0YXRlLnJlZnJlc2hUb2tlbiA9IG51bGw7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgVE9HR0xFX1JFRlJFU0hJTkdfVE9LRU4sIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLnJlZnJlc2hpbmdBY2Nlc3NUb2tlbiA9IG51bGw7Cn0pLCBfbXV0YXRpb25zKTsKdmFyIGdldHRlcnMgPSB7CiAgYWN0aXZlVXNlcjogZnVuY3Rpb24gYWN0aXZlVXNlcihzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmFjdGl2ZVVzZXI7CiAgfSwKICBhY2Nlc3NUb2tlbjogZnVuY3Rpb24gYWNjZXNzVG9rZW4oc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5hY2Nlc3NUb2tlbjsKICB9LAogIHJlZnJlc2hUb2tlbjogZnVuY3Rpb24gcmVmcmVzaFRva2VuKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucmVmcmVzaFRva2VuOwogIH0sCiAgbG9nZ2VkSW46IGZ1bmN0aW9uIGxvZ2dlZEluKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuYWNjZXNzVG9rZW4gIT0gbnVsbDsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBnZXR0ZXJzOiBnZXR0ZXJzCn07"},{"version":3,"sources":["C:/Users/User/Desktop/Feez/feez/frontend/src/store/user.module.js"],"names":["UserService","USER_FETCH","USER_UPDATE","PRACTICE_INVITE_ACCEPT","USER_LOGIN","REFRESH_ACCESS_TOKEN","SET_ACTIVE_USER","REMOVE_ACTIVE_USER_FROM_PRACTICE","ADD_ACTIVE_USER_TO_PRACTICE","SET_ACTIVE_USER_PROP","UPDATE_ACCESS_TOKEN","UPDATE_LOCAL_STORAGE","DESTROY_TOKENS","TOGGLE_REFRESHING_TOKEN","initialState","activeUser","accessToken","localStorage","getItem","refreshToken","refreshingAccessToken","state","actions","context","get","then","data","commit","results","notification","practice","active_practice","dispatch","update","getters","credentials","login","access","refresh","console","log","catch","err","finally","mutations","user","type","result","pending_practices","filter","i","practices","push","prop","value","includes","splitprop","split","obj","attr","Object","setItem","loggedIn"],"mappings":"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","sourcesContent":["// import Vue from \"vue\";\r\nimport {\r\n  UserService\r\n} from \"@/common/api.service\";\r\nimport {\r\n  USER_FETCH,\r\n  USER_UPDATE,\r\n  PRACTICE_INVITE_ACCEPT,\r\n  USER_LOGIN,\r\n  // USER_REGISTER,\r\n  REFRESH_ACCESS_TOKEN,\r\n} from \"./actions.type\";\r\nimport {\r\n  SET_ACTIVE_USER,\r\n  REMOVE_ACTIVE_USER_FROM_PRACTICE,\r\n  ADD_ACTIVE_USER_TO_PRACTICE,\r\n  SET_ACTIVE_USER_PROP,\r\n  UPDATE_ACCESS_TOKEN,\r\n  UPDATE_LOCAL_STORAGE,\r\n  DESTROY_TOKENS,\r\n  TOGGLE_REFRESHING_TOKEN,\r\n} from \"./mutations.type\";\r\n\r\nconst initialState = {\r\n  activeUser: {},\r\n  accessToken: localStorage.getItem('access_token') || null,\r\n  refreshToken: localStorage.getItem('refresh_token') || null,\r\n  refreshingAccessToken: null,\r\n};\r\n\r\nexport const state = { ...initialState };\r\n\r\nexport const actions = {\r\n  [USER_FETCH](context) {\r\n      return UserService.get().then(data => {\r\n        context.commit(SET_ACTIVE_USER, data.results[0])\r\n      });\r\n  },\r\n  [PRACTICE_INVITE_ACCEPT](context, notification) {\r\n    context.commit(ADD_ACTIVE_USER_TO_PRACTICE, {\r\n      'type': 'practice',\r\n      'practice': notification.practice\r\n    });\r\n    context.commit(REMOVE_ACTIVE_USER_FROM_PRACTICE, {\r\n      'type': 'pending',\r\n      'practice': notification.practice\r\n    });\r\n    if (notification.active_practice) {\r\n      context.commit(SET_ACTIVE_USER_PROP, {\r\n        'prop': 'active_practice',\r\n        'value': notification.practice\r\n      });\r\n    };\r\n    context.dispatch(USER_UPDATE);\r\n  },\r\n  [USER_UPDATE](context) {\r\n    return UserService.update(context.getters.activeUser).then(data => {\r\n      context.commit(SET_ACTIVE_USER, data)\r\n    });\r\n  },\r\n  [USER_LOGIN](context, credentials){\r\n    return UserService.login(credentials).then(data => {\r\n      // Stores the access and refresh tokens in localstorage\r\n      context.commit(UPDATE_LOCAL_STORAGE, {\r\n        access: data.access,\r\n        refresh: data.refresh\r\n      })\r\n      // catch(err => {\r\n      //   //not sure about this reject bit, have to check it's ok\r\n      //   reject(err)\r\n      // });\r\n    })\r\n  },\r\n  [REFRESH_ACCESS_TOKEN](context){\r\n    // disables requesting another token while this one is being refreshed.\r\n    // stops multiple simultaneous refresh requests/errs from vuex\r\n    // send the stored refresh token to the API\r\n    return UserService.refreshToken({\r\n      'refresh': context.getters.refreshToken\r\n    }).then(data => {\r\n      // if API sends back new access token, update the store\r\n      console.log('New access successfully generated');\r\n      context.commit(UPDATE_ACCESS_TOKEN, data.access);\r\n    }).catch(err => {\r\n        // HOW TO HANDLE REFRESH TOKEN EXPIRY?\r\n      console.log(`${err} error in refreshToken Task`);\r\n    }).finally(\r\n      context.commit(TOGGLE_REFRESHING_TOKEN)\r\n    )\r\n  }\r\n};\r\n\r\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\r\nexport const mutations = {\r\n  [SET_ACTIVE_USER](state, user) {\r\n    state.activeUser = user;\r\n  },\r\n  [REMOVE_ACTIVE_USER_FROM_PRACTICE](state, {type, practice}){\r\n    if (type === 'pending') {\r\n      const result = state.activeUser.pending_practices.filter(i => i != practice);\r\n      state.activeUser.pending_practices = result;\r\n    }\r\n  },\r\n  [ADD_ACTIVE_USER_TO_PRACTICE](state, {type, practice}){\r\n    if (type === 'practice') {\r\n      state.activeUser.practices.push(practice)\r\n    }\r\n  },\r\n  [SET_ACTIVE_USER_PROP](state, {prop, value}) {\r\n    if (prop.includes('.')) {\r\n        let splitprop = prop.split('.');\r\n        let obj = splitprop[0];\r\n        let attr = splitprop[1];\r\n        if (!state.activeUser[obj]) {\r\n            state.activeUser[obj] = new Object();\r\n        }\r\n        state.activeUser[obj][attr] = value;\r\n    } else {\r\n    state.activeUser[prop] = value;\r\n    }\r\n  },\r\n  [UPDATE_LOCAL_STORAGE](state, {access, refresh}) {\r\n    localStorage.setItem('access_token', access);\r\n    localStorage.setItem('refresh_token', refresh);\r\n    state.accessToken = access;\r\n    state.refreshToken = refresh;\r\n  },\r\n  [UPDATE_ACCESS_TOKEN] (state, access) {\r\n    state.accessToken = access;\r\n    localStorage.setItem('access_token', access);\r\n  },\r\n  [DESTROY_TOKENS] (state) {\r\n    state.accessToken = null;\r\n    state.refreshToken = null;\r\n  },\r\n  [TOGGLE_REFRESHING_TOKEN] (state) {\r\n    state.refreshingAccessToken = null;\r\n  },\r\n};\r\n\r\nconst getters = {\r\n  activeUser(state) {\r\n    return state.activeUser;\r\n  },\r\n  accessToken (state) {\r\n    return state.accessToken;\r\n  },\r\n  refreshToken (state) {\r\n    return state.refreshToken;\r\n  },\r\n  loggedIn (state) {\r\n    return state.accessToken != null\r\n  }\r\n};\r\n\r\nexport default {\r\n  state,\r\n  actions,\r\n  mutations,\r\n  getters\r\n};\r\n"]}]}