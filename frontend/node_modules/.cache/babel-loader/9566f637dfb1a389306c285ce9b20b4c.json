{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\common\\api.service.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\common\\api.service.js","mtime":1605241795570},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/User/Desktop/Feez/feez/frontend/src/common/api.service.js"],"names":["CSRF_TOKEN","axios","jwt_decode","user","store","REFRESH_ACCESS_TOKEN","apiService","endpoint","method","data","headers","state","accessToken","Authorization","options","url","then","response","catch","err","console","log","Promise","reject","refreshTokenPromise","interceptors","use","error","config","status","getters","refreshToken","currentDatetime","Date","decodedRefreshToken","decodedAccessToken","refreshTokenExpiry","exp","accessTokenExpiry","dispatch","token","ScenarioService","get","scenarioId","create","scenario","update","id","AdvertService","list","InvestmentNameService","PlatformService","platformId","rootState","activeScenario","activePlatform","PlatformAAService","PlatformNameService","UserService","login","credentials","register","registerDetails","resetPassword","email","changePassword","payload","verify","resendVerificationToken"],"mappings":"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","sourcesContent":["import { CSRF_TOKEN } from \"./csrf_token.js\";\r\nimport axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport user from \"../store/user.module\";\r\nimport store from \"../store/index\";\r\nimport {\r\n  REFRESH_ACCESS_TOKEN,\r\n} from \"../store/actions.type\";\r\n\r\nfunction apiService(endpoint, method, data) {\r\n\r\n  var headers = {\r\n    'Accept': 'application/json',\r\n    \"content-type\": \"application/json\",\r\n    \"X-CSRFTOKEN\": CSRF_TOKEN,\r\n  }\r\n\r\n  // Adds header if the access token exists. This is so registrations don't\r\n  // automatically bounce.\r\n  if (user.state.accessToken) {\r\n    headers.Authorization = `Bearer ${user.state.accessToken}`\r\n  }\r\n\r\n  const options = {\r\n    url: endpoint,\r\n    method: method || \"GET\",\r\n    data: data,\r\n    headers: headers\r\n  };\r\n\r\n  return axios(options)\r\n  .then(response => {\r\n    return response;\r\n   }).catch(err => {\r\n     console.log('Logging error:');\r\n     console.log(err.response);\r\n     return Promise.reject(err.response);\r\n   })\r\n}\r\n\r\nvar refreshTokenPromise = null// this holds any in-progress token refresh requests\r\n\r\naxios.interceptors.response.use(\r\n  response => {\r\n    return response.data;\r\n  },\r\n  async error => {\r\n    if (error.config && error.response && error.response.status === 401) {\r\n      if (store.getters.accessToken && store.getters.refreshToken) {\r\n        // Have to do the token expiry check here because for some reason the\r\n        // vuex getter does not refresh when called from this script.\r\n        let currentDatetime = new Date();\r\n        let decodedRefreshToken = jwt_decode(store.getters.refreshToken);\r\n        let decodedAccessToken = jwt_decode(store.getters.accessToken);\r\n        let refreshTokenExpiry = new Date(decodedRefreshToken.exp * 1000);\r\n        let accessTokenExpiry = new Date(decodedAccessToken.exp * 1000);\r\n\r\n        // only want to attempt a refresh if they have a valid refresh token,\r\n        // and the access token is actually expired.\r\n        if (refreshTokenExpiry > currentDatetime && accessTokenExpiry < currentDatetime ) {\r\n          if (!refreshTokenPromise) {\r\n          // check for an existing in-progress request\r\n          // if nothing is in-progress, start a new refresh token request\r\n            refreshTokenPromise = store.dispatch(REFRESH_ACCESS_TOKEN).then((token) => {\r\n              refreshTokenPromise = null; // clear state\r\n              // console.log(\"401 caught, new token retrieved.\");\r\n              return token // resolve with the new token\r\n            })\r\n          }\r\n          // once the refresh promise has completed, this async will be called\r\n          // for all queued requests their headers changed to new token.\r\n          return await refreshTokenPromise.then(token => {\r\n            error.config.headers['Authorization'] = `Bearer ${token}`\r\n            return axios(error.config)\r\n          })\r\n        } else {\r\n          return Promise.reject(error);\r\n        }\r\n      } else {\r\n        return Promise.reject(error);\r\n      }\r\n    } else {\r\n      return Promise.reject(error);\r\n    }\r\n  });\r\n\r\nexport { apiService };\r\n\r\nexport const ScenarioService = {\r\n  // list() {\r\n  //   return apiService(`/api/scenarios/`, \"GET\");\r\n  // },\r\n  get(scenarioId) {\r\n    return apiService(`/api/scenarios/${scenarioId}/`, \"GET\");\r\n  },\r\n  create(scenario) {\r\n    return apiService(`/api/scenarios/`, \"POST\", scenario);\r\n  },\r\n  update(scenario) {\r\n    return apiService(`/api/scenarios/${scenario.id}/`, \"PATCH\", scenario);\r\n  },\r\n  // destroy(scenarioId) {\r\n  //   return apiService(`/api/scenarios/${scenarioId}/`, \"DELETE\");\r\n  // }\r\n};\r\n\r\nexport const AdvertService = {\r\n  list() {\r\n    return apiService(`/api/currentadvert/`, \"GET\");\r\n  },\r\n};\r\n\r\nexport const InvestmentNameService = {\r\n  list() {\r\n    return apiService(`/api/unlinkedinvestmentname/`, \"GET\");\r\n  },\r\n};\r\n\r\nexport const PlatformService = {\r\n  get({scenarioId, platformId}) {\r\n    return apiService(`/api/scenarios/${scenarioId}/platforms/${platformId}/`, \"GET\");\r\n  },\r\n  update(state, rootState) {\r\n    return apiService(`/api/scenarios/${rootState.scenario.activeScenario.id}/platforms/${state.activePlatform.id}/`, \"PATCH\", state.activePlatform);\r\n  },\r\n};\r\nexport const PlatformAAService = {\r\n  list({scenarioId, platformId}) {\r\n    return apiService(`/api/scenarios/${scenarioId}/platforms/${platformId}/aasummary/`, \"GET\");\r\n  },\r\n};\r\n\r\nexport const PlatformNameService = {\r\n  list(endpoint) {\r\n    if (endpoint) {\r\n      return apiService(endpoint, \"GET\");\r\n    } else {\r\n      return apiService(`/api/platformnames/`, \"GET\");\r\n    }\r\n  },\r\n};\r\n\r\nexport const UserService = {\r\n  get() {\r\n    return apiService(`/api/user/`, \"GET\");\r\n  },\r\n  update(user) {\r\n    return apiService(`/api/user/${user.id}/`, \"PATCH\", user);\r\n  },\r\n  login(credentials) {\r\n    return apiService(`/api/token/`, \"POST\", credentials);\r\n  },\r\n  register(user) {\r\n    return apiService(`/api/rego/`, \"POST\", user);\r\n  },\r\n  registerDetails(user) {\r\n    return apiService(`/api/regodetails/${user.id}/`, \"PATCH\", user);\r\n  },\r\n  resetPassword(user) {\r\n    // Custom update() method in serializer just sends a token.\r\n    return apiService(`/api/resetpassword/${user.email}/`, \"PATCH\", user);\r\n  },\r\n  changePassword(payload) {\r\n    return apiService(`/api/changepassword/${payload.id}/`, \"PATCH\", payload);\r\n  },\r\n  verify(payload) {\r\n    // Note - this API is write-only\r\n    return apiService(`/api/verify/${payload.id}/`, \"PATCH\", payload);\r\n  },\r\n  resendVerificationToken(user) {\r\n    return apiService(`/api/rego/${user.id}/`, \"PATCH\", user);\r\n  },\r\n  refreshToken(refreshToken) {\r\n    return apiService(`/api/token/refresh/`, \"POST\", refreshToken);\r\n  },\r\n};\r\n"]}]}