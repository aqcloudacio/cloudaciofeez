{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\common\\api.service.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\common\\api.service.js","mtime":1604022959438},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/User/Desktop/Feez/feez/frontend/src/common/api.service.js"],"names":["CSRF_TOKEN","axios","user","store","REFRESH_ACCESS_TOKEN","apiService","endpoint","method","data","options","url","headers","state","accessToken","then","response","console","log","catch","err","refreshTokenPromise","interceptors","use","error","config","status","dispatch","token","Promise","reject","ScenarioService","get","scenarioId","create","scenario","update","id","AdvertService","list","InvestmentNameService","PlatformService","platformId","rootState","activeScenario","activePlatform","PlatformAAService","PlatformNameService","UserService","login","credentials","refreshToken"],"mappings":"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","sourcesContent":["import { CSRF_TOKEN } from \"./csrf_token.js\";\r\nimport axios from 'axios';\r\n\r\nimport user from \"../store/user.module\";\r\nimport store from \"../store/index\";\r\nimport {\r\n  REFRESH_ACCESS_TOKEN,\r\n} from \"../store/actions.type\";\r\n// import {\r\n//   SET_REFRESHING_IN_PROGRESS,\r\n// } from \"../store/mutations.type\";\r\n\r\n\r\n//\r\n// function handleResponse(response) {\r\n//   if (response.status === 204) {\r\n//     return \"\";\r\n//   } else if (response.status === 401) {\r\n//     // Prevents mutliple simultaneous refreshes\r\n//     if (!user.state.refreshingInProgress) {\r\n//       console.log('requesting token refresh');\r\n//       console.log(response);\r\n//       store.state.refreshingInProgress = store.dispatch(REFRESH_ACCESS_TOKEN);\r\n//     } else {\r\n//       console.log('blocked. token request in progress')\r\n//     }\r\n//   } else {\r\n//     return response.json().then(json => {\r\n//       return response.ok ? json : Promise.reject(json);\r\n//     })\r\n//   }\r\n// }\r\n\r\n function apiService(endpoint, method, data) {\r\n\r\n  const options = {\r\n    url: endpoint,\r\n    method: method || \"GET\",\r\n    data: data,\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      \"content-type\": \"application/json\",\r\n      \"X-CSRFTOKEN\": CSRF_TOKEN,\r\n      \"Authorization\": `Bearer ${user.state.accessToken}`,\r\n    }\r\n  };\r\n\r\n  return axios(options)\r\n  .then(response => {\r\n    console.log('response from axios then:')\r\n    console.log(response);\r\n   return response;\r\n   }).catch(err => {\r\n     console.log('logging err:');\r\n     return console.log(err);\r\n   })\r\n\r\n  //\r\n  // const config = {\r\n  //   method: method || \"GET\",\r\n  //   body: data !== undefined ? JSON.stringify(data) : null,\r\n  //   headers: {\r\n  //     \"content-type\": \"application/json\",\r\n  //     \"X-CSRFTOKEN\": CSRF_TOKEN,\r\n  //     \"Authorization\": `Bearer ${user.state.accessToken}`,\r\n  //   }\r\n  // };\r\n  //\r\n  //\r\n  //   return fetch(endpoint, config)\r\n  //     .then(handleResponse)\r\n}\r\n\r\nvar refreshTokenPromise = null// this holds any in-progress token refresh requests\r\n\r\naxios.interceptors.response.use(\r\n  response => {\r\n  console.log('Response was succesfully received');\r\n  return response.data;\r\n},\r\nasync error => {\r\n  if (error.config && error.response && error.response.status === 401) {\r\n    if (!refreshTokenPromise) {\r\n      console.log('fetching token');\r\n      // check for an existing in-progress request\r\n      // if nothing is in-progress, start a new refresh token request\r\n      refreshTokenPromise = store.dispatch(REFRESH_ACCESS_TOKEN).then((token) => {\r\n        refreshTokenPromise = null; // clear state\r\n        console.log(token);\r\n        return token // resolve with the new token\r\n      })\r\n    }\r\n    console.log(\"i'm waiting..\");\r\n    return await refreshTokenPromise.then(token => {\r\n      error.config.headers['Authorization'] = `Bearer ${token}`\r\n      console.log('resending data')\r\n      return axios(error.config)\r\n    })\r\n  }\r\n  // console.log(error)\r\n  // handle the response error\r\n  console.log(\"i'm bad\")\r\n  return Promise.reject(error);\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport { apiService };\r\n\r\nexport const ScenarioService = {\r\n  // list() {\r\n  //   return apiService(`/api/scenarios/`, \"GET\");\r\n  // },\r\n  get(scenarioId) {\r\n    return apiService(`/api/scenarios/${scenarioId}/`, \"GET\");\r\n  },\r\n  create(scenario) {\r\n    return apiService(`/api/scenarios/`, \"POST\", scenario);\r\n  },\r\n  update(scenario) {\r\n    return apiService(`/api/scenarios/${scenario.id}/`, \"PATCH\", scenario);\r\n  },\r\n  // destroy(scenarioId) {\r\n  //   return apiService(`/api/scenarios/${scenarioId}/`, \"DELETE\");\r\n  // }\r\n};\r\n\r\nexport const AdvertService = {\r\n  list() {\r\n    return apiService(`/api/currentadvert/`, \"GET\");\r\n  },\r\n};\r\n\r\nexport const InvestmentNameService = {\r\n  list() {\r\n    return apiService(`/api/unlinkedinvestmentname/`, \"GET\");\r\n  },\r\n};\r\n\r\nexport const PlatformService = {\r\n  get({scenarioId, platformId}) {\r\n    return apiService(`/api/scenarios/${scenarioId}/platforms/${platformId}/`, \"GET\");\r\n  },\r\n  update(state, rootState) {\r\n    return apiService(`/api/scenarios/${rootState.scenario.activeScenario.id}/platforms/${state.activePlatform.id}/`, \"PATCH\", state.activePlatform);\r\n  },\r\n};\r\nexport const PlatformAAService = {\r\n  list({scenarioId, platformId}) {\r\n    return apiService(`/api/scenarios/${scenarioId}/platforms/${platformId}/aasummary/`, \"GET\");\r\n  },\r\n};\r\n\r\nexport const PlatformNameService = {\r\n  list(endpoint) {\r\n    if (endpoint) {\r\n      return apiService(endpoint, \"GET\");\r\n    } else {\r\n      return apiService(`/api/platformnames/`, \"GET\");\r\n    }\r\n  },\r\n};\r\n\r\nexport const UserService = {\r\n  get() {\r\n    return apiService(`/api/user/`, \"GET\");\r\n  },\r\n  update(user) {\r\n    return apiService(`/api/user/${user.id}/`, \"PATCH\", user);\r\n  },\r\n  login(credentials) {\r\n    return apiService(`/api/token/`, \"POST\", credentials);\r\n  },\r\n  refreshToken(refreshToken) {\r\n    return apiService(`/api/token/refresh/`, \"POST\", refreshToken);\r\n  },\r\n};\r\n"]}]}