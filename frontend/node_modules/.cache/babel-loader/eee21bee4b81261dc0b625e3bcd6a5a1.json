{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\RiskProfileTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\RiskProfileTable.vue","mtime":1585623161856},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RiskProfileTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <v-form  @submit.prevent=\"onSubmit\">\r\n    <v-container>\r\n      <v-row dense>\r\n        <v-col\r\n          :cols=\"2\">\r\n          <v-card>\r\n            <v-card-title>\r\n            </v-card-title>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\">\r\n          <v-card>\r\n            <v-card-title>\r\n              {{ Object.values(AAName)[0] }}\r\n            </v-card-title>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col\r\n          :cols=\"1\">\r\n        </v-col>\r\n      </v-row>\r\n      <v-row\r\n        v-for=\"profile in riskProfiles\"\r\n        :key=\"profile.id\"\r\n        dense>\r\n        <v-col\r\n          :cols=\"2\">\r\n            <v-text-field\r\n              @change=\"addToChanged(profile)\"\r\n              v-model=\"profile.name\"\r\n              outlined dense solo />\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\">\r\n            <v-text-field\r\n              @change=\"addToChanged(profile)\"\r\n              :value = \"getAAPercentage(AAName,profile)\"\r\n              @input = \"setAAPercentage($event, AAName, profile)\"\r\n              outlined dense solo/>\r\n        </v-col>\r\n        <v-col\r\n          :cols=\"1\">\r\n          <DeleteObj\r\n            :objectType=\"'riskprofile'\"\r\n            :objectToDelete=\"profile\"\r\n            :RPGroupID=\"RPGroupID\"\r\n            @delete-object=\"getRiskProfiles\"\r\n            v-on=\"$listeners\"\r\n          />\r\n        </v-col>\r\n      </v-row>\r\n      <v-row\r\n        dense>\r\n        <v-col\r\n          :cols=\"2\">\r\n            <v-text-field\r\n              v-model=\"newRP.name\"\r\n              outlined dense solo />\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\">\r\n            <v-text-field\r\n              v-model=\"newRP.allocations[Object.keys(AAName)[0]]\"\r\n              outlined dense solo/>\r\n        </v-col>\r\n        <v-col\r\n          :cols=\"1\">\r\n          <v-btn type=\"button\" color=\"green\" dark dense\r\n            @click=\"addRP\">\r\n            <v-icon>\r\n              mdi-plus\r\n            </v-icon>\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n      <v-row v-if=\"riskProfiles.length\">\r\n        <v-col>\r\n          <v-btn type=\"submit\" color=\"primary\" dark dense>Update</v-btn>\r\n        </v-col>\r\n      </v-row>\r\n      <br>\r\n      <AANameConfig\r\n        :RPAANames=\"RPAANames\"/>\r\n    </v-container>\r\n  </v-form>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\nimport AANameConfig from \"@/components/AANameConfig.vue\";\r\nimport DeleteObj from \"@/components/DeleteObj.vue\";\r\n\r\nexport default {\r\n  name: \"RiskProfileTable\",\r\n  props: {\r\n    RPGroupID: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      riskProfiles: [],\r\n      RPAANames: [],\r\n      error: null,\r\n      changeList: [],\r\n      newRP: {\r\n        name:\"\",\r\n        order:null,\r\n        allocations:{},\r\n      },\r\n    };\r\n  },\r\n  components: {\r\n    AANameConfig,\r\n    DeleteObj,\r\n  },\r\n  computed: {\r\n    nameSet: function (){\r\n      let AANameList = [];\r\n      let checkList = []\r\n      for (let i = 0; i < this.RPAANames.length; i++) {\r\n        let found = false;\r\n        let aaName = this.RPAANames[i];\r\n          if (checkList.includes(aaName.custom_name)) {\r\n            found = true;\r\n          }\r\n          if (!found) {\r\n            let newAA = {};\r\n            newAA[aaName.id] = aaName.custom_name;\r\n            AANameList.push(newAA);\r\n            found = false;\r\n            checkList.push(aaName.custom_name);\r\n          }\r\n      }\r\n      return (AANameList)\r\n    }\r\n  },\r\n  watch: {\r\n    RPGroupID: function () {\r\n      this.getRPAANameData();\r\n      this.getRiskProfiles();\r\n    },\r\n  },\r\n  methods: {\r\n    addToChanged(profile) {\r\n      if (!(this.changeList.includes(profile))) {\r\n        this.changeList.push(profile);\r\n      } else {\r\n        const i = this.changeList.findIndex(item => item.id === profile.id);\r\n        this.changeList.splice(i, 1);\r\n        this.changeList.push(profile);\r\n      }\r\n    },\r\n    setAAPercentage(event, AAName, riskProfile) {\r\n      const i = this.riskProfiles.findIndex(item => item.id === riskProfile.id);\r\n      const aaID = Object.keys(AAName)[0];\r\n      let found = false;\r\n      for (let x=0; x < this.riskProfiles[i].allocations.length; x++){\r\n        found = false;\r\n          if (this.riskProfiles[i].allocations[x].name.id == aaID) {\r\n            // event = event.split(\"%\").pop();\r\n            this.riskProfiles[i].allocations[x].percentage = event/100;\r\n            found = true;\r\n            break;\r\n          }\r\n      }\r\n      if (!found) {\r\n        let newAllocation = {}\r\n        newAllocation.name = {}\r\n        newAllocation.name.id = aaID;\r\n        newAllocation.percentage = event/100;\r\n        newAllocation.riskprofile = riskProfile.id;\r\n        newAllocation.id = null;\r\n        this.riskProfiles[i].allocations.push(newAllocation);\r\n      }\r\n    },\r\n    getAAPercentage(AAName, riskProfile) {\r\n      let percentage = 0\r\n      for (let i=0; i < riskProfile.allocations.length; i++) {\r\n        if (riskProfile.allocations[i].name.custom_name == Object.values(AAName)[0]) {\r\n          percentage += riskProfile.allocations[i].percentage;\r\n        }\r\n      }\r\n      return (percentage*100)\r\n    },\r\n    getRiskProfiles() {\r\n      let endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/`;\r\n      apiService(endpoint).then(data => {\r\n        this.riskProfiles = data.results;\r\n      });\r\n    },\r\n    getRPAANameData() {\r\n      let endpoint = `/api/activeriskprofilenames/`;\r\n      apiService(endpoint).then(data => {\r\n        this.RPAANames = data.results;\r\n      });\r\n    },\r\n    addRP() {\r\n      if (this.newRP.name) {\r\n        let endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/`;\r\n        apiService(endpoint, \"POST\", {\r\n          name: this.newRP.name,\r\n          group: this.RPGroupID,\r\n          order: this.newRP.order,\r\n        }).then(data => {\r\n          this.addAA(data.id);\r\n          console.log(data);\r\n        });\r\n        if (this.error) {\r\n          this.error = null;\r\n        }\r\n      } else {\r\n        this.error = \"You must enter a name for the new risk profile.\";\r\n      }\r\n    },\r\n    addAA(id) {\r\n      for (const [key, value] of Object.entries(this.newRP.allocations)) {\r\n        let endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/${id}/aa/`;\r\n        apiService(endpoint, \"POST\", {\r\n          name_id: key,\r\n          percentage: value/100,\r\n          riskprofile: id\r\n        }).then(data => {\r\n          this.getRiskProfiles();\r\n          this.newRP.name=\"\";\r\n          this.newRP.order=null;\r\n          this.newRP.allocations = {};\r\n          this.$emit(\"disable-dialog\", data);\r\n          console.log(data);\r\n        });\r\n      }\r\n    },\r\n    onSubmit() {\r\n      if (this.changeList) {\r\n        for (let i=0; i < this.changeList.length; i++) {\r\n          let endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/${this.changeList[i].id}/`;\r\n          apiService(endpoint, \"PATCH\", {\r\n            name: this.changeList[i].name,\r\n            group: this.changeList[i].group,\r\n            order: this.changeList[i].order,\r\n          }).then(data => {\r\n            this.updateAA(data.id, this.changeList[i]);\r\n          });\r\n        };\r\n      };\r\n    },\r\n    updateAA(profileID, profile) {\r\n      for (let i=0; i < profile.allocations.length; i++) {\r\n        let endpoint = '';\r\n        let method = '';\r\n        if (profile.allocations[i].id == null) {\r\n          endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/${profileID}/aa/`;\r\n          method = \"POST\"\r\n        } else {\r\n          endpoint = `/api/riskprofilegroups/${this.RPGroupID}/riskprofiles/${profileID}/aa/${profile.allocations[i].id}/`;\r\n          method = \"PATCH\"\r\n        };\r\n        apiService(endpoint, method, {\r\n          id: profile.allocations[i].id,\r\n          name_id: profile.allocations[i].name.id,\r\n          percentage: profile.allocations[i].percentage,\r\n          riskprofile: profileID\r\n        }).then(data => {\r\n          console.log(data)\r\n          this.getRiskProfiles();\r\n          this.$emit(\"disable-dialog\", data);\r\n          this.changeList=[];\r\n        });\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getRPAANameData();\r\n    this.getRiskProfiles();\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}