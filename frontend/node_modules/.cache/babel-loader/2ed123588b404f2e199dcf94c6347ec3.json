{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\common\\api.service.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\common\\api.service.js","mtime":1594866466645},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCB7IENTUkZfVE9LRU4gfSBmcm9tICIuL2NzcmZfdG9rZW4uanMiOwoKZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2UocmVzcG9uc2UpIHsKICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDQpIHsKICAgIHJldHVybiAiIjsKICB9IGVsc2UgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSB7CiAgICByZXR1cm4gbnVsbDsKICB9IGVsc2UgewogICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICB9Cn0KCmZ1bmN0aW9uIGFwaVNlcnZpY2UoZW5kcG9pbnQsIG1ldGhvZCwgZGF0YSkgewogIHZhciBjb25maWcgPSB7CiAgICBtZXRob2Q6IG1ldGhvZCB8fCAiR0VUIiwKICAgIGJvZHk6IGRhdGEgIT09IHVuZGVmaW5lZCA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogbnVsbCwKICAgIGhlYWRlcnM6IHsKICAgICAgImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgIlgtQ1NSRlRPS0VOIjogQ1NSRl9UT0tFTgogICAgfQogIH07CiAgcmV0dXJuIGZldGNoKGVuZHBvaW50LCBjb25maWcpLnRoZW4oaGFuZGxlUmVzcG9uc2UpLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICB9KTsKfQoKZXhwb3J0IHsgYXBpU2VydmljZSB9OwpleHBvcnQgdmFyIFNjZW5hcmlvU2VydmljZSA9IHsKICBsaXN0OiBmdW5jdGlvbiBsaXN0KCkgewogICAgcmV0dXJuIGFwaVNlcnZpY2UoIi9hcGkvc2NlbmFyaW9zLyIsICJHRVQiKTsKICB9LAogIGdldDogZnVuY3Rpb24gZ2V0KHNjZW5hcmlvSWQpIHsKICAgIHJldHVybiBhcGlTZXJ2aWNlKCIvYXBpL3NjZW5hcmlvcy8iLmNvbmNhdChzY2VuYXJpb0lkLCAiLyIpLCAiR0VUIik7CiAgfSwKICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZShvYmopIHsKICAgIHJldHVybiBhcGlTZXJ2aWNlKCIvYXBpL3NjZW5hcmlvcy8iLCAiUE9TVCIsIG9iaik7CiAgfSwKICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShzY2VuYXJpb0lkLCBvYmopIHsKICAgIHJldHVybiBhcGlTZXJ2aWNlKCIvYXBpL3NjZW5hcmlvcy8iLmNvbmNhdChzY2VuYXJpb0lkLCAiLyIpLCAiUEFUQ0giLCBvYmopOwogIH0sCiAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveShzY2VuYXJpb0lkKSB7CiAgICByZXR1cm4gYXBpU2VydmljZSgiL2FwaS9zY2VuYXJpb3MvIi5jb25jYXQoc2NlbmFyaW9JZCwgIi8iKSwgIkRFTEVURSIpOwogIH0KfTs="},{"version":3,"sources":["C:/Users/User/Desktop/Feez/feez/frontend/src/common/api.service.js"],"names":["CSRF_TOKEN","handleResponse","response","status","json","apiService","endpoint","method","data","config","body","undefined","JSON","stringify","headers","fetch","then","catch","error","console","log","ScenarioService","list","get","scenarioId","create","obj","update","destroy"],"mappings":";AAAA,SAASA,UAAT,QAA2B,iBAA3B;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAO,EAAP;AACD,GAFD,MAEO,IAAID,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,WAAO,IAAP;AACD,GAFM,MAEA;AACL,WAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;AACF;;AAED,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4C;AAC1C,MAAMC,MAAM,GAAG;AACbF,IAAAA,MAAM,EAAEA,MAAM,IAAI,KADL;AAEbG,IAAAA,IAAI,EAAEF,IAAI,KAAKG,SAAT,GAAqBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArB,GAA4C,IAFrC;AAGbM,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,qBAAed;AAFR;AAHI,GAAf;AAQA,SAAOe,KAAK,CAACT,QAAD,EAAWG,MAAX,CAAL,CACJO,IADI,CACCf,cADD,EAEJgB,KAFI,CAEE,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAFP,CAAP;AAGD;;AAED,SAASb,UAAT;AAEA,OAAO,IAAMgB,eAAe,GAAG;AAC7BC,EAAAA,IAD6B,kBACtB;AACL,WAAOjB,UAAU,oBAAoB,KAApB,CAAjB;AACD,GAH4B;AAI7BkB,EAAAA,GAJ6B,eAIzBC,UAJyB,EAIb;AACd,WAAOnB,UAAU,0BAAmBmB,UAAnB,QAAkC,KAAlC,CAAjB;AACD,GAN4B;AAO7BC,EAAAA,MAP6B,kBAOtBC,GAPsB,EAOjB;AACV,WAAOrB,UAAU,oBAAoB,MAApB,EAA4BqB,GAA5B,CAAjB;AACD,GAT4B;AAU7BC,EAAAA,MAV6B,kBAUtBH,UAVsB,EAUVE,GAVU,EAUL;AACtB,WAAOrB,UAAU,0BAAmBmB,UAAnB,QAAkC,OAAlC,EAA2CE,GAA3C,CAAjB;AACD,GAZ4B;AAa7BE,EAAAA,OAb6B,mBAarBJ,UAbqB,EAaT;AAClB,WAAOnB,UAAU,0BAAmBmB,UAAnB,QAAkC,QAAlC,CAAjB;AACD;AAf4B,CAAxB","sourcesContent":["import { CSRF_TOKEN } from \"./csrf_token.js\";\r\n\r\nfunction handleResponse(response) {\r\n  if (response.status === 204) {\r\n    return \"\";\r\n  } else if (response.status === 404) {\r\n    return null;\r\n  } else {\r\n    return response.json();\r\n  }\r\n}\r\n\r\nfunction apiService(endpoint, method, data) {\r\n  const config = {\r\n    method: method || \"GET\",\r\n    body: data !== undefined ? JSON.stringify(data) : null,\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      \"X-CSRFTOKEN\": CSRF_TOKEN\r\n    }\r\n  };\r\n  return fetch(endpoint, config)\r\n    .then(handleResponse)\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nexport { apiService };\r\n\r\nexport const ScenarioService = {\r\n  list() {\r\n    return apiService(`/api/scenarios/`, \"GET\");\r\n  },\r\n  get(scenarioId) {\r\n    return apiService(`/api/scenarios/${scenarioId}/`, \"GET\");\r\n  },\r\n  create(obj) {\r\n    return apiService(`/api/scenarios/`, \"POST\", obj);\r\n  },\r\n  update(scenarioId, obj) {\r\n    return apiService(`/api/scenarios/${scenarioId}/`, \"PATCH\", obj);\r\n  },\r\n  destroy(scenarioId) {\r\n    return apiService(`/api/scenarios/${scenarioId}/`, \"DELETE\");\r\n  }\r\n};\r\n"]}]}