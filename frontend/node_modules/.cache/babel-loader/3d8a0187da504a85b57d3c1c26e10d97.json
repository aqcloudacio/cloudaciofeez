{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\RiskProfileTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\RiskProfileTable.vue","mtime":1612317932472},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RiskProfileTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <v-container class=\"pa-0 small-text\">\r\n      <v-row align=\"center\">\r\n        <v-col\r\n        :cols=\"6\">\r\n          <v-select\r\n            class=\"rounded-card\"\r\n            v-if=\"!editGroupName\"\r\n            :items=\"riskProfileGroups\"\r\n            item-text=\"name\"\r\n            item-value=\"id\"\r\n            v-model=\"shownRP\"\r\n            label=\"Risk Profile Group Name\"\r\n            placeholder=\"Select a Risk Profile Group\"\r\n            outlined dense hide-details=\"auto\">\r\n            <template v-slot:append-outer v-if=\"canEdit && !_.isEmpty(shownRPObject)\">\r\n              <v-icon\r\n                v-if=\"!editGroupName\"\r\n                color=\"primary\" icon\r\n                @click=\"editGroupName = !editGroupName\">mdi-pencil-circle</v-icon>\r\n            </template>\r\n            <template v-slot:append-outer v-else-if=\"!_.isEmpty(shownRPObject)\">\r\n              <v-tooltip bottom>\r\n                 <template v-slot:activator=\"{ on }\">\r\n                    <v-icon\r\n                      v-on='on'\r\n                      color=\"primary\" icon\r\n                      >mdi-lock</v-icon>\r\n                </template>\r\n                <span>{{lockMessage}}</span>\r\n              </v-tooltip>\r\n            </template>\r\n          </v-select>\r\n          <v-text-field\r\n            v-else\r\n            label=\"Risk Profile Group Name\"\r\n            :value=\"shownRPObject.name\"\r\n            @change=\"newGroupName = $event\"\r\n            dense outlined\r\n            hide-details=\"auto\">\r\n            <template v-slot:append-outer v-if=\"canEdit\">\r\n              <v-icon\r\n                v-if=\"editGroupName\"\r\n                color=\"primary\" icon\r\n                @click=\"updateGroupName()\">mdi-check-circle</v-icon>\r\n            </template>\r\n          </v-text-field>\r\n        </v-col>\r\n        <v-col>\r\n          <v-container class=\"pa-0 d-flex\">\r\n            <v-switch\r\n              inset\r\n              v-if=\"!_.isEmpty(shownRPObject)\"\r\n              v-model=\"activeSwitch\"\r\n              label=\"Active Risk Profile Group\"\r\n              />\r\n            <v-spacer />\r\n            <v-card-actions class=\"pr-0\">\r\n              <DeleteObj\r\n                v-if=\"canEdit && !_.isEmpty(shownRPObject)\"\r\n                :objectType=\"'riskprofilegroup'\"\r\n                :objectToDelete=\"shownRPObject\"\r\n                @delete-object=\"deleteRPGroup($event)\"\r\n                :color=\"'primary'\"\r\n\r\n              />\r\n              <AddRPGroup\r\n                :userID=\"activeUser.id\"\r\n                @add-rpgroup=\"addRPGroup($event)\"/>\r\n\r\n\r\n            </v-card-actions>\r\n          </v-container>\r\n        </v-col>\r\n      </v-row>\r\n      <v-divider class=\"mt-1 mb-4\" v-if=\"!_.isEmpty(shownRPObject)\"/>\r\n      <v-row dense v-if=\"!_.isEmpty(shownRPObject)\">\r\n        <v-col\r\n          :cols=\"2\">\r\n\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\"\r\n          >\r\n          <v-tooltip top>\r\n             <template v-slot:activator=\"{ on }\">\r\n              <v-card\r\n                outlined\r\n                class=\"grey1 rounded-card\"\r\n\r\n                flat\r\n                v-on=\"on\">\r\n                <v-card-subtitle class=\"text-center py-2\">\r\n                  {{ getAcronym(Object.values(AAName)[0]) }}\r\n                </v-card-subtitle>\r\n              </v-card>\r\n            </template>\r\n            <span>{{ Object.values(AAName)[0] }}</span>\r\n          </v-tooltip>\r\n        </v-col>\r\n        <v-col :cols=\"1\">\r\n          <v-container class=\"pa-0 pt-1 d-flex\">\r\n            <v-spacer />\r\n            <AANameConfig\r\n              v-if=\"canEdit\"\r\n              :RPAANames=\"RPAANames\"/>\r\n          </v-container>\r\n        </v-col>\r\n      </v-row>\r\n      <v-form\r\n        @submit.prevent=\"onSubmit\"\r\n        ref=\"mainForm\">\r\n        <v-row\r\n          v-for=\"profile in riskProfiles\"\r\n          :key=\"profile.id\"\r\n          dense\r\n\r\n          >\r\n          <v-col\r\n            :cols=\"2\">\r\n            <v-text-field\r\n              :style=\"checkColor(profile) \"\r\n              class=\"rounded-card small-text-9em\"\r\n              :error =\"!checkComplete(profile)\"\r\n              @change=\"addToChanged(profile)\"\r\n              v-model=\"profile.name\"\r\n              dense outlined\r\n              :rules=\"[v => !!(v) || 'Must enter a name']\"\r\n              validate-on-blur\r\n              hide-details=\"auto\"\r\n              :read-only=\"!canEdit\">\r\n              <template\r\n                v-if=\"checkHint(profile)\"\r\n                v-slot:append>\r\n                <v-tooltip\r\n                  bottom\r\n                >\r\n                  <template v-slot:activator=\"{ on }\">\r\n                    <v-icon v-on=\"on\" color=\"red\">\r\n                      mdi-alert-rhombus-outline\r\n                    </v-icon>\r\n                  </template>\r\n                  {{ checkHint(profile)}}\r\n                </v-tooltip>\r\n              </template>\r\n            </v-text-field>\r\n          </v-col>\r\n          <v-col\r\n            v-for=\"AAName in nameSet\"\r\n            :key=\"Object.keys(AAName)[0]\"\r\n          >\r\n              <v-text-field\r\n                :style='checkColor(profile)'\r\n                :error =\"!checkComplete(profile)\"\r\n                :disabled=\"!canEdit\"\r\n                @change=\"addToChanged(profile)\"\r\n                :value = \"getAAPercentage(AAName,profile)\"\r\n                @blur = \"setAAPercentage($event.target.value, AAName, profile)\"\r\n                class=\"allocationNumber rounded-card\"\r\n                type=\"number\"\r\n                outlined dense hide-details/>\r\n          </v-col>\r\n          <v-col\r\n            :cols=\"1\"\r\n            >\r\n            <v-container class=\"pa-0 pt-1 d-flex\">\r\n              <v-spacer />\r\n              <v-btn icon>\r\n                <DeleteObj\r\n                  v-if=\"canEdit\"\r\n                  :objectType=\"'riskprofile'\"\r\n                  :objectToDelete=\"profile\"\r\n                  :shownRP=\"shownRP\"\r\n                  @delete-object=\"deleteRP\"\r\n                  v-on=\"$listeners\"\r\n                  :color=\"'primary'\"\r\n                />\r\n              </v-btn>\r\n            </v-container>\r\n          </v-col>\r\n        </v-row>\r\n      </v-form>\r\n      <v-form\r\n        @submit.prevent=\"onSubmit\"\r\n        ref=\"addForm\">\r\n        <v-row v-if=\"canEdit && !_.isEmpty(shownRPObject)\"\r\n          dense>\r\n          <v-col\r\n            :cols=\"2\">\r\n              <v-text-field\r\n                class=\"rounded-card\"\r\n                v-model=\"newRP.name\"\r\n                outlined dense\r\n                :rules=\"[v => !!(v) || 'Must enter a name']\"\r\n                validate-on-blur\r\n                hide-details=\"auto\"/>\r\n          </v-col>\r\n          <v-col\r\n            v-for=\"AAName in nameSet\"\r\n            :key=\"Object.keys(AAName)[0]\">\r\n              <v-text-field\r\n                class=\"rounded-card allocationNumber\"\r\n                type=\"number\"\r\n                v-model=\"newRP.allocations[Object.keys(AAName)[0]]\"\r\n                outlined dense hide-details/>\r\n          </v-col>\r\n          <v-col\r\n            :cols=\"1\">\r\n            <v-container class=\"pa-0 pt-1 d-flex\">\r\n              <v-spacer />\r\n              <v-btn type=\"button\" color=\"primary\" dark dense\r\n                @click=\"addRP\" icon>\r\n                <v-icon>\r\n                  mdi-plus-circle\r\n                </v-icon>\r\n              </v-btn>\r\n            </v-container>\r\n          </v-col>\r\n        </v-row>\r\n      </v-form>\r\n      <v-divider class=\"mt-4\" v-if=\"!_.isEmpty(shownRPObject)\" />\r\n      <v-row v-if=\"riskProfiles.length && canEdit\">\r\n        <v-col class=\"text-right\">\r\n          <v-btn @click=\"onSubmit\" class=\"primary-action-button\" >Update All</v-btn>\r\n        </v-col>\r\n      </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\nimport AANameConfig from \"@/components/AANameConfig.vue\";\r\nimport DeleteObj from \"@/components/DeleteObj.vue\";\r\nimport AddRPGroup from \"@/components/AddRPGroup.vue\";\r\nimport WithoutWatchers from \"@/components/mixins/WithoutWatchers.js\";\r\n\r\nimport { mapGetters } from \"vuex\";\r\nimport {\r\n  USER_UPDATE\r\n} from \"@/store/actions.type\";\r\nimport {\r\n  SET_ACTIVE_USER_PROP\r\n} from \"@/store/mutations.type\";\r\n\r\nexport default {\r\n  name: \"RiskProfileTable\",\r\n  mixins: [WithoutWatchers],\r\n  props: {\r\n    riskProfileGroups: {\r\n      type: Array,\r\n      required: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      activeSwitch: false,\r\n      newGroupName: \"\",\r\n      editGroupName: false,\r\n      riskProfiles: [],\r\n      RPAANames: [],\r\n      error: null,\r\n      shownRP: null,\r\n      changeList: [],\r\n      newRP: {\r\n        name:\"\",\r\n        order:null,\r\n        allocations:{},\r\n      },\r\n    };\r\n  },\r\n  components: {\r\n    AANameConfig,\r\n    DeleteObj,\r\n    AddRPGroup,\r\n\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activeUser\"]),\r\n    lockMessage() {\r\n      let msg = '';\r\n      if (!this.isNotAFSLLimited) {\r\n        msg += 'You cannot edit AFSL Risk Profiles'\r\n      }\r\n      else if (!this.isPracticeAdmin) {\r\n        msg += 'You are not an admin of this Practice'\r\n      }\r\n      return msg\r\n    },\r\n    canEdit() {\r\n      if (this.isPracticeAdmin && this.isNotAFSLLimited && this.isNotDefaultTemplate ) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    isPracticeAdmin() {\r\n      if (this.riskProfileGroups && this.shownRP && this.shownRPObject.id) {\r\n        if (this.shownRPObject.active_practices.length > 0) {\r\n          return this.shownRPObject.active_practices.some(item => this.activeUser.admin_practices.includes(item));\r\n        } else {\r\n          return true\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    isNotDefaultTemplate() {\r\n      if (this.riskProfileGroups && this.shownRP) {\r\n        if (this.shownRPObject.template && this.shownRPObject.default) {\r\n          return false\r\n        } else {\r\n          return true\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    isNotAFSLLimited() {\r\n      if (this.riskProfileGroups && this.shownRP) {\r\n        if (this._.isEmpty(this.shownRPObject.afsls)) {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    shownRPObject() {\r\n      if (this.riskProfileGroups && this.shownRP) {\r\n          const i = this.riskProfileGroups.findIndex(item => item.id == this.shownRP);\r\n          if (i != -1) {\r\n            //The id is added to the array before the group data comes back from\r\n            // Profile view, so this avoids errors while it comes in.\r\n            return this.riskProfileGroups[i];\r\n          } else {\r\n            return {}\r\n          }\r\n      } else {\r\n        return {}\r\n      }\r\n    },\r\n    nameSet: function (){\r\n      let AANameList = [];\r\n      let checkList = []\r\n      for (let i = 0; i < this.RPAANames.length; i++) {\r\n        let found = false;\r\n        let aaName = this.RPAANames[i];\r\n          if (checkList.includes(aaName.custom_name)) {\r\n            found = true;\r\n          }\r\n          if (!found) {\r\n            let newAA = {};\r\n            newAA[aaName.id] = aaName.custom_name;\r\n            AANameList.push(newAA);\r\n            found = false;\r\n            checkList.push(aaName.custom_name);\r\n          }\r\n      }\r\n      return (AANameList)\r\n    },\r\n    selectedIsActive() {\r\n      if (this.shownRP) {\r\n        if (this.shownRP === this.activeUser.active_rp) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    shownRP: function () {\r\n      this.setActiveSwitch()\r\n      this.getRPAANameData();\r\n      this.getRiskProfiles();\r\n      this.changeList = [];\r\n    },\r\n    activeSwitch: function () {\r\n      this.setActiveRP()\r\n    },\r\n  },\r\n  methods: {\r\n    setActiveSwitch() {\r\n      this.$withoutWatchers(() => {\r\n        if (this.selectedIsActive) {\r\n          this.activeSwitch = true;\r\n        } else {\r\n          this.activeSwitch = false;\r\n        }\r\n      })\r\n    },\r\n    getAcronym(n) {\r\n      // returns the first letters of each word in name as an abbreviation\r\n      if (n) {\r\n        let matches = n.match(/\\b(\\w)/g);\r\n        let acronym = matches.join('');\r\n        return acronym\r\n      } else {\r\n        return n\r\n      }\r\n    },\r\n    checkHint(profile) {\r\n      if (!this.checkComplete(profile)) {\r\n        return \"Allocations do not equal 100%\"\r\n      }\r\n    },\r\n    checkColor(profile){\r\n      if (!this.checkComplete(profile)) {\r\n        return ({\r\n          backgroundColor: '#ffebee',\r\n        })\r\n      }\r\n    },\r\n    checkComplete(profile) {\r\n      if (profile.allocations) {\r\n        let value = profile.allocations.reduce( function (a,b) {\r\n          return parseFloat(a) + parseFloat(b.percentage);\r\n        }, 0);\r\n        if (value.toFixed(4) === '1.0000') {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    updateGroupName(){\r\n      this.editGroupName = !this.editGroupName;\r\n      if (this.newGroupName != '') {\r\n        let endpoint = `/api/riskprofilegroups/${this.shownRPObject.id}/`;\r\n        apiService(endpoint, \"PATCH\", {\r\n          name: this.newGroupName,\r\n        }).then(data => {\r\n          this.$emit('update-rpgroup', data);\r\n          this.newGroupName = \"\";\r\n        })\r\n      }\r\n    },\r\n    deleteRP(data) {\r\n      // Removes item from the riskprofiles list\r\n      const removeItem = this.riskProfiles.findIndex(i => i.id === data.id);\r\n      if (removeItem) {\r\n        this.$delete(this.riskProfiles, removeItem);\r\n      }\r\n      // Removes item from the changed list (if it's in it)\r\n      const removeFromChanged = this.changeList.findIndex(i => i.id === data.id);\r\n      if (removeFromChanged >= 0) {\r\n        this.$delete(this.changeList, removeFromChanged);\r\n      }\r\n    },\r\n    deleteRPGroup(data) {\r\n      this.$emit('delete-rpgroup', data);\r\n      this.riskProfiles = [];\r\n    },\r\n    setActiveRP() {\r\n      let setActive = null;\r\n      if (this.activeSwitch) {\r\n        setActive = this.shownRP;\r\n      }\r\n      this.$store.commit(SET_ACTIVE_USER_PROP, {\r\n        'prop': 'active_rp',\r\n        'value': setActive\r\n      })\r\n      this.$store.dispatch(USER_UPDATE);\r\n    },\r\n    addRPGroup(data){\r\n      this.$emit('add-rpgroup')\r\n      this.shownRP = data.id;\r\n    },\r\n    addToChanged(profile) {\r\n      if (!(this.changeList.includes(profile))) {\r\n        this.changeList.push(profile);\r\n      } else {\r\n        const i = this.changeList.findIndex(item => item.id === profile.id);\r\n        this.changeList.splice(i, 1);\r\n        this.changeList.push(profile);\r\n      }\r\n    },\r\n    setAAPercentage(event, AAName, riskProfile) {\r\n      // Gets the key of the aaname item (the key is the id)\r\n      const aaID = Object.keys(AAName)[0];\r\n      let found = false;\r\n      // Iterates the risk profile allocations and attempts to find and item\r\n      // with a matching name_id\r\n      for (let allocation of riskProfile.allocations){\r\n        found = false;\r\n          // If it is found, assign, break the loop and change found var\r\n          if (allocation.name.id.toString() === aaID) {\r\n            allocation.percentage = (event/100).toFixed(4);\r\n            found = true;\r\n            break;\r\n          }\r\n      }\r\n      // If not found, create a new allocation object and add to the RP.\r\n      if (!found) {\r\n        let newAllocation = {}\r\n        newAllocation.name = {}\r\n        newAllocation.name.id = aaID;\r\n        newAllocation.percentage = (event/100).toFixed(4);\r\n        newAllocation.riskprofile = riskProfile.id;\r\n        newAllocation.id = null;\r\n        riskProfile.allocations.push(newAllocation);\r\n      }\r\n    },\r\n    getAAPercentage(AAName, riskProfile) {\r\n      let total = 0\r\n      for (let i=0; i < riskProfile.allocations.length; i++) {\r\n        // Test if the custom_name for the risk profile matches the columm header\r\n        if (riskProfile.allocations[i].name.custom_name === Object.values(AAName)[0]) {\r\n          let percentage = Number(riskProfile.allocations[i].percentage)\r\n          if (percentage > 0) {\r\n            // Add percentages together for merged RP AA names\r\n            total += percentage;\r\n          }\r\n        }\r\n      }\r\n      return (total*100).toFixed(2)\r\n    },\r\n    getRiskProfiles() {\r\n      if (this.shownRP) {\r\n        let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/`;\r\n        apiService(endpoint).then(data => {\r\n          this.riskProfiles = data.results;\r\n        });\r\n      }\r\n    },\r\n    getRPAANameData() {\r\n      if (this.shownRP) {\r\n        let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofilenames/`;\r\n        apiService(endpoint).then(data => {\r\n          this.RPAANames = data.results;\r\n        });\r\n      }\r\n    },\r\n    addRP() {\r\n      // validates the last row (the add row)\r\n      if (this.$refs.addForm.validate()){\r\n        let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/`;\r\n        apiService(endpoint, \"POST\", {\r\n          name: this.newRP.name,\r\n          group: this.shownRP,\r\n          order: this.newRP.order,\r\n        }).then(data => {\r\n          this.addAA(data.id);\r\n        });\r\n\r\n      }\r\n    },\r\n    addAA(id) {\r\n      if (this._.isEmpty(this.newRP.allocations)) {\r\n        this.getRiskProfiles();\r\n        this.newRP.name=\"\";\r\n        this.newRP.order=null;\r\n      } else {\r\n        for (const [key, value] of Object.entries(this.newRP.allocations)) {\r\n          let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/${id}/aa/`;\r\n          apiService(endpoint, \"POST\", {\r\n            name_id: key,\r\n            percentage: value/100,\r\n            riskprofile: id\r\n          }).then(() => {\r\n            this.getRiskProfiles();\r\n            this.newRP.name=\"\";\r\n            this.newRP.order=null;\r\n            this.newRP.allocations = {};\r\n          });\r\n        }\r\n      }\r\n    },\r\n    onSubmit() {\r\n      // If there is a new item in the add row, add it too.\r\n      if (!this._.isEmpty(this.newRP.name)) {\r\n        this.addRP();\r\n      }\r\n      if (this.$refs.mainForm.validate()){\r\n        if (this.changeList) {\r\n          for (let i=0; i < this.changeList.length; i++) {\r\n            let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/${this.changeList[i].id}/`;\r\n            apiService(endpoint, \"PATCH\", {\r\n              name: this.changeList[i].name,\r\n              group: this.changeList[i].group,\r\n              order: this.changeList[i].order,\r\n            }).then(data => {\r\n              this.updateAA(data.id, this.changeList[i]);\r\n            });\r\n          };\r\n        };\r\n      }\r\n    },\r\n    updateAA(profileID, profile) {\r\n      for (let i=0; i < profile.allocations.length; i++) {\r\n        let endpoint = '';\r\n        let method = '';\r\n        if (profile.allocations[i].id === null) {\r\n          endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/${profileID}/aa/`;\r\n          method = \"POST\"\r\n        } else {\r\n          endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/${profileID}/aa/${profile.allocations[i].id}/`;\r\n          method = \"PATCH\"\r\n        };\r\n        apiService(endpoint, method, {\r\n          id: profile.allocations[i].id,\r\n          name_id: profile.allocations[i].name.id,\r\n          percentage: profile.allocations[i].percentage,\r\n          riskprofile: profileID\r\n        }).then(() => {\r\n          this.getRiskProfiles();\r\n          this.changeList=[];\r\n        });\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.shownRP = this.activeUser.active_rp;\r\n    this.getRPAANameData();\r\n    this.getRiskProfiles();\r\n  }\r\n};\r\n</script>\r\n<style >\r\n/* .header-card {\r\n  border: 1px solid  !important\r\n} */\r\n.allocationNumber input[type='number'] {\r\n  -moz-appearance:textfield;\r\n}\r\n.allocationNumber input::-webkit-outer-spin-button,\r\n.allocationNumber input::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n}\r\n.allocationNumber input {\r\n  font-size: .8rem;\r\n  text-align: center !important;\r\n}\r\n.small-text-9em {\r\n  font-size: .9rem !important;\r\n}\r\n.error-styling  {\r\n  background-color: #ffebee;\r\n\r\n}\r\n\r\n\r\n</style>\r\n"],"sourceRoot":"src/components"}]}