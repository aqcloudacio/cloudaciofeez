{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\ScenarioAAChartSummary.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\ScenarioAAChartSummary.vue","mtime":1601608958094},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxcRmVlelxcZmVlelxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFxGZWV6XFxmZWV6XFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBBQUJhckNoYXJ0IGZyb20gIkAvY29tcG9uZW50cy9BQUJhckNoYXJ0LnZ1ZSI7CmltcG9ydCB7IGFwaVNlcnZpY2UgfSBmcm9tICJAL2NvbW1vbi9hcGkuc2VydmljZS5qcyI7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IE1lcmdlUlBBbGxvY2F0aW9ucyBmcm9tICJAL2NvbXBvbmVudHMvbWl4aW5zL01lcmdlUlBBbGxvY2F0aW9ucy5qcyI7CmltcG9ydCBNZXJnZUFBQWxsb2NhdGlvbnMgZnJvbSAiQC9jb21wb25lbnRzL21peGlucy9NZXJnZUFBQWxsb2NhdGlvbnMuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNjZW5hcmlvQUFDaGFydFN1bW1hcnkiLAogIG1peGluczogW01lcmdlUlBBbGxvY2F0aW9ucywgTWVyZ2VBQUFsbG9jYXRpb25zXSwKICBwcm9wczogewogICAgcmlza1Byb2ZpbGU6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBBQVN1bW1hcnk6IFtdLAogICAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgIHlBeGVzOiBbewogICAgICAgICAgICB0aWNrczogewogICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlLAogICAgICAgICAgICAgIG1heFRpY2tzTGltaXQ6IDYsCiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKHZhbHVlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUudG9Mb2NhbGVTdHJpbmcoJ2VuLVVTJywgewogICAgICAgICAgICAgICAgICBzdHlsZTogJ3BlcmNlbnQnCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH1dLAogICAgICAgICAgeEF4ZXM6IFt7CiAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgbWF4Um90YXRpb246IDAsCiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKHZhbHVlKSB7CiAgICAgICAgICAgICAgICB2YXIgbWF0Y2hlcyA9IHZhbHVlLm1hdGNoKC9cYihcdykvZyk7CiAgICAgICAgICAgICAgICB2YXIgYWNyb255bSA9IG1hdGNoZXMuam9pbignJyk7CiAgICAgICAgICAgICAgICByZXR1cm4gYWNyb255bTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH1dLAogICAgICAgICAgb25Ib3ZlcjogZnVuY3Rpb24gb25Ib3ZlcihlKSB7CiAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJzsKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRvb2x0aXBzOiB7CiAgICAgICAgICBjYWxsYmFja3M6IHsKICAgICAgICAgICAgbGFiZWw6IGZ1bmN0aW9uIGxhYmVsKHRvb2x0aXBJdGVtLCBkYXRhKSB7CiAgICAgICAgICAgICAgdmFyIGxhYmVsID0gZGF0YS5kYXRhc2V0c1t0b29sdGlwSXRlbS5kYXRhc2V0SW5kZXhdLmxhYmVsIHx8ICcnOwoKICAgICAgICAgICAgICBpZiAobGFiZWwpIHsKICAgICAgICAgICAgICAgIGxhYmVsICs9ICc6ICc7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICB2YXIgdmFsID0gdG9vbHRpcEl0ZW0ueUxhYmVsOwogICAgICAgICAgICAgIHZhbCA9IHZhbC50b0xvY2FsZVN0cmluZygnZW4tVVMnLCB7CiAgICAgICAgICAgICAgICBzdHlsZTogJ3BlcmNlbnQnLAogICAgICAgICAgICAgICAgbWluaW11bUZyYWN0aW9uRGlnaXRzOiAyCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgbGFiZWwgKz0gdmFsOwogICAgICAgICAgICAgIHJldHVybiBsYWJlbDsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIGRpc3BsYXk6IHRydWUsCiAgICAgICAgICB0ZXh0OiAiQXNzZXQgQWxsb2NhdGlvbiIKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgcG9zaXRpb246ICd0b3AnLAogICAgICAgICAgbGFiZWxzOiB7CiAgICAgICAgICAgIGZvbnRDb2xvcjogJ2dyZXknCiAgICAgICAgICB9LAogICAgICAgICAgb25Ib3ZlcjogZnVuY3Rpb24gb25Ib3ZlcihlKSB7CiAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJzsKICAgICAgICAgIH0sCiAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGUsIGxlZ2VuZEl0ZW0pIHsKICAgICAgICAgICAgdmFyIGluZGV4ID0gbGVnZW5kSXRlbS5kYXRhc2V0SW5kZXg7CiAgICAgICAgICAgIHZhciBjaSA9IHRoaXMuY2hhcnQ7CiAgICAgICAgICAgIHZhciBtZXRhID0gY2kuZ2V0RGF0YXNldE1ldGEoaW5kZXgpOwoKICAgICAgICAgICAgaWYgKG1ldGEuaGlkZGVuID09IHRydWUpIHsKICAgICAgICAgICAgICBtZXRhLmhpZGRlbiA9IGZhbHNlOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG1ldGEuaGlkZGVuID0gdHJ1ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2kudXBkYXRlKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBob3ZlcjogewogICAgICAgICAgb25Ib3ZlcjogZnVuY3Rpb24gb25Ib3ZlcihlKSB7CiAgICAgICAgICAgIHZhciBwb2ludCA9IHRoaXMuZ2V0RWxlbWVudEF0RXZlbnQoZSk7CiAgICAgICAgICAgIGlmICghcG9pbnQubGVuZ3RoKSBlLnRhcmdldC5zdHlsZS5jdXJzb3IgPSAnZGVmYXVsdCc7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGFjdGl2ZVNjZW5hcmlvOiBmdW5jdGlvbiBhY3RpdmVTY2VuYXJpbygpIHsKICAgICAgdGhpcy5nZXRBQVN1bW1hcnkoKTsKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEFBQmFyQ2hhcnQ6IEFBQmFyQ2hhcnQKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsiYWN0aXZlU2NlbmFyaW8iXSksIHsKICAgIFJQQXJyYXk6IGZ1bmN0aW9uIFJQQXJyYXkoKSB7CiAgICAgIGlmICghdGhpcy5fLmlzRW1wdHkodGhpcy5yaXNrUHJvZmlsZSkpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbWVyZ2VSUEFsbG9jYXRpb25zKHRoaXMuQUFOYW1lcywgdGhpcy5hY3RpdmVTY2VuYXJpby5yaXNrX3Byb2ZpbGUuYWxsb2NhdGlvbnMpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIEFBTmFtZXM6IGZ1bmN0aW9uIEFBTmFtZXMoKSB7CiAgICAgIHZhciBjdXN0b21fbmFtZXMgPSB0aGlzLkFBU3VtbWFyeS5tYXAoZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gYS5jdXN0b21fbmFtZTsKICAgICAgfSk7CgogICAgICB2YXIgYWFuYW1lcyA9IF90b0NvbnN1bWFibGVBcnJheShuZXcgU2V0KGN1c3RvbV9uYW1lcykpOwoKICAgICAgcmV0dXJuIGFhbmFtZXM7CiAgICB9LAogICAgY3VycmVudEFBQXJyYXk6IGZ1bmN0aW9uIGN1cnJlbnRBQUFycmF5KCkgewogICAgICByZXR1cm4gdGhpcy4kbWVyZ2VBQUFsbG9jYXRpb25zKHRoaXMuQUFOYW1lcywgdGhpcy5BQVN1bW1hcnksICdjdXJfdG90YWxfcGVyYycpOwogICAgfSwKICAgIHJlY29tbWVuZGVkQUFBcnJheTogZnVuY3Rpb24gcmVjb21tZW5kZWRBQUFycmF5KCkgewogICAgICByZXR1cm4gdGhpcy4kbWVyZ2VBQUFsbG9jYXRpb25zKHRoaXMuQUFOYW1lcywgdGhpcy5BQVN1bW1hcnksICdyZWNfdG90YWxfcGVyYycpOwogICAgfSwKICAgIGFsdGVybmF0aXZlQUFBcnJheTogZnVuY3Rpb24gYWx0ZXJuYXRpdmVBQUFycmF5KCkgewogICAgICByZXR1cm4gdGhpcy4kbWVyZ2VBQUFsbG9jYXRpb25zKHRoaXMuQUFOYW1lcywgdGhpcy5BQVN1bW1hcnksICdhbHRfdG90YWxfcGVyYycpOwogICAgfSwKICAgIGNoYXJ0RGF0YTogZnVuY3Rpb24gY2hhcnREYXRhKCkgewogICAgICByZXR1cm4gewogICAgICAgIGxhYmVsczogdGhpcy5BQU5hbWVzLAogICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgZGF0YTogdGhpcy5SUEFycmF5LAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLDEyOCwxMjgsMC4yKScsCiAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMCwxMjgsMTI4LDEpJywKICAgICAgICAgIGJvcmRlcldpZHRoOiAxLAogICAgICAgICAgbGFiZWw6ICJSaXNrIFByb2ZpbGUiCiAgICAgICAgfSwgewogICAgICAgICAgZGF0YTogdGhpcy5jdXJyZW50QUFBcnJheSwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMjU1LCA5OSwgMTMyLCAwLjIpJywKICAgICAgICAgIGJvcmRlckNvbG9yOiAncmdiYSgyNTUsIDk5LCAxMzIsIDEpJywKICAgICAgICAgIGJvcmRlcldpZHRoOiAxLAogICAgICAgICAgbGFiZWw6ICJDdXJyZW50IgogICAgICAgIH0sIHsKICAgICAgICAgIGRhdGE6IHRoaXMucmVjb21tZW5kZWRBQUFycmF5LAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSg1NCwgMTYyLCAyMzUsIDAuMiknLAogICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDU0LCAxNjIsIDIzNSwgMSknLAogICAgICAgICAgYm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICBsYWJlbDogIlJlY29tbWVuZGVkIgogICAgICAgIH0sIHsKICAgICAgICAgIGRhdGE6IHRoaXMuYWx0ZXJuYXRpdmVBQUFycmF5LAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgyNTUsIDIwNiwgODYsIDAuMiknLAogICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwgMjA2LCA4NiwgMSknLAogICAgICAgICAgYm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICBsYWJlbDogIkFsdGVybmF0aXZlIgogICAgICAgIH1dCiAgICAgIH07CiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgZ2V0QUFTdW1tYXJ5OiBmdW5jdGlvbiBnZXRBQVN1bW1hcnkoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAoIXRoaXMuXy5pc0VtcHR5KHRoaXMuYWN0aXZlU2NlbmFyaW8pKSB7CiAgICAgICAgdmFyIGVuZHBvaW50ID0gIi9hcGkvc2NlbmFyaW9zLyIuY29uY2F0KHRoaXMuYWN0aXZlU2NlbmFyaW8uaWQsICIvYWFzdW1tYXJ5LyIpOwogICAgICAgIGFwaVNlcnZpY2UoZW5kcG9pbnQpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIF90aGlzLkFBU3VtbWFyeSA9IGRhdGEucmVzdWx0czsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0QUFTdW1tYXJ5KCk7CiAgfQp9Ow=="},{"version":3,"sources":["ScenarioAAChartSummary.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <v-card v-if=\"chartData != null\" >\r\n      <AABarChart\r\n        :chartData=\"chartData\"\r\n        :options=\"chartOptions\"\r\n        :height=\"150\"\r\n        ref=\"AABarChart\"\r\n      >\r\n    </AABarChart>\r\n\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport AABarChart from \"@/components/AABarChart.vue\";\r\nimport { apiService } from \"@/common/api.service.js\";\r\nimport { mapGetters } from \"vuex\";\r\nimport MergeRPAllocations from \"@/components/mixins/MergeRPAllocations.js\"\r\nimport MergeAAAllocations from \"@/components/mixins/MergeAAAllocations.js\"\r\n\r\nexport default {\r\n  name: \"ScenarioAAChartSummary\",\r\n  mixins: [MergeRPAllocations, MergeAAAllocations],\r\n  props: {\r\n    riskProfile: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      AASummary: [],\r\n      chartOptions: {\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 6,\r\n                    callback: function (value) {\r\n                      return value.toLocaleString('en-US', {style:'percent'});\r\n                    }\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                  maxRotation: 0,\r\n                  callback: function (value) {\r\n                    let matches = value.match(/\\b(\\w)/g);\r\n                    let acronym = matches.join('');\r\n                    return acronym\r\n                  }\r\n                },\r\n            }],\r\n          onHover: function(e) {\r\n            e.target.style.cursor = 'pointer';\r\n          },\r\n        },\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function(tooltipItem, data) {\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              if (label) {\r\n                label += ': ';\r\n              }\r\n              let val = tooltipItem.yLabel;\r\n              val = val.toLocaleString('en-US', {style:'percent', minimumFractionDigits:2});\r\n              label += val\r\n              return label\r\n            }\r\n          }\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Asset Allocation\",\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          labels: {\r\n            fontColor: 'grey'\r\n          },\r\n          onHover: function(e) {\r\n            e.target.style.cursor = 'pointer';\r\n          },\r\n          onClick: function(e, legendItem) {\r\n            var index = legendItem.datasetIndex;\r\n            var ci = this.chart;\r\n            var meta = ci.getDatasetMeta(index);\r\n\r\n              if (meta.hidden == true) {\r\n                meta.hidden = false\r\n              } else {\r\n                meta.hidden = true;\r\n              }\r\n            ci.update();\r\n          }\r\n        },\r\n        hover: {\r\n         onHover: function(e) {\r\n            var point = this.getElementAtEvent(e);\r\n            if (!point.length) e.target.style.cursor = 'default';\r\n         }\r\n       }\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    activeScenario() {\r\n      this.getAASummary();\r\n    },\r\n  },\r\n  components: {\r\n    AABarChart\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activeScenario\"]),\r\n    RPArray() {\r\n      if (!this._.isEmpty(this.riskProfile)) {\r\n        return this.$mergeRPAllocations(this.AANames, this.activeScenario.risk_profile.allocations)\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    AANames() {\r\n      let custom_names = this.AASummary.map(a => a.custom_name);\r\n      let aanames = [...new Set(custom_names)];\r\n      return aanames\r\n    },\r\n    currentAAArray() {\r\n      return this.$mergeAAAllocations(this.AANames, this.AASummary,'cur_total_perc')\r\n    },\r\n    recommendedAAArray() {\r\n      return this.$mergeAAAllocations(this.AANames, this.AASummary,'rec_total_perc')\r\n    },\r\n    alternativeAAArray() {\r\n      return this.$mergeAAAllocations(this.AANames, this.AASummary,'alt_total_perc')\r\n    },\r\n    chartData(){\r\n      return {\r\n        labels: this.AANames,\r\n        datasets: [\r\n          {\r\n            data: this.RPArray,\r\n            backgroundColor: 'rgba(0,128,128,0.2)',\r\n            borderColor: 'rgba(0,128,128,1)',\r\n            borderWidth: 1,\r\n            label: \"Risk Profile\"\r\n          },\r\n          {\r\n            data: this.currentAAArray,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 1,\r\n            label: \"Current\"\r\n          },\r\n          {\r\n            data: this.recommendedAAArray,\r\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1,\r\n            label: \"Recommended\"\r\n          },\r\n          {\r\n            data: this.alternativeAAArray,\r\n            backgroundColor: 'rgba(255, 206, 86, 0.2)',\r\n            borderColor: 'rgba(255, 206, 86, 1)',\r\n            borderWidth: 1,\r\n            label: \"Alternative\"\r\n          },\r\n        ]\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    getAASummary() {\r\n      if (!this._.isEmpty(this.activeScenario)) {\r\n        let endpoint = `/api/scenarios/${this.activeScenario.id}/aasummary/`;\r\n        apiService(endpoint).then(data => {\r\n          this.AASummary = data.results;\r\n        });\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getAASummary();\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}