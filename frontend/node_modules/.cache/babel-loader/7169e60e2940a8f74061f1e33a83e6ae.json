{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\AAChartSummary.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\AAChartSummary.vue","mtime":1588047117480},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AAChartSummary.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <v-card v-if=\"chartData != null\" >\r\n      <AABarChart\r\n        :chartData=\"chartData\"\r\n        :options=\"chartOptions\"\r\n        :height=\"400\"\r\n        ref=\"AABarChart\"\r\n        :key=\"AAKey\"\r\n      >\r\n    </AABarChart>\r\n\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport AABarChart from \"@/components/AABarChart.vue\";\r\nimport { apiService } from \"@/common/api.service.js\";\r\n\r\nexport default {\r\n  name: \"AAChartSummary\",\r\n  inject: [\"scenarioId\"],\r\n  props: {\r\n    riskProfile: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    currentPlatforms: {\r\n      type: Array,\r\n      required: false\r\n    },\r\n    recommendedPlatforms: {\r\n      type: Array,\r\n      required: false\r\n    },\r\n    alternativePlatforms: {\r\n      type: Array,\r\n      required: false\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      AAKey:0,\r\n      RPAANames: [],\r\n      currentAASummary: [],\r\n      recommendedAASummary: [],\r\n      alternativeAASummary: [],\r\n      chartOptions: {\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 6,\r\n                    callback: function (value) {\r\n                      return value.toLocaleString('en-US', {style:'percent'});\r\n                    }\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                  maxRotation: 0 // angle in degrees\r\n                }\r\n            }],\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Asset Allocation\",\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          labels: {\r\n            fontColor: 'grey'\r\n          },\r\n          onHover: function(e) {\r\n            e.target.style.cursor = 'pointer';\r\n          },\r\n          onClick: function(e, legendItem) {\r\n            var index = legendItem.datasetIndex;\r\n            var ci = this.chart;\r\n            var meta = ci.getDatasetMeta(index);\r\n\r\n              if (meta.hidden == true) {\r\n                meta.hidden = false\r\n              } else {\r\n                meta.hidden = true;\r\n              }\r\n            ci.update();\r\n          }\r\n        },\r\n        hover: {\r\n         onHover: function(e) {\r\n            var point = this.getElementAtEvent(e);\r\n            if (!point.length) e.target.style.cursor = 'default';\r\n         }\r\n       }\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    AABarChart\r\n  },\r\n  computed: {\r\n    nameSet: function (){\r\n      let AANameList = [];\r\n      let checkList = []\r\n      for (let i = 0; i < this.RPAANames.length; i++) {\r\n        let found = false;\r\n        let aaName = this.RPAANames[i];\r\n          if (checkList.includes(aaName.custom_name)) {\r\n            found = true;\r\n          }\r\n          if (!found) {\r\n            let newAA = {};\r\n            newAA = aaName.custom_name;\r\n            AANameList.push(newAA);\r\n            found = false;\r\n            checkList.push(aaName.custom_name);\r\n          }\r\n      }\r\n      return (AANameList)\r\n    },\r\n    RPArray() {\r\n      if (this.riskProfile != null) {\r\n        let result = this.riskProfile.allocations.map(a => Number(a.percentage) );\r\n        console.log(result);\r\n        return result;\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    currentAAArray() {\r\n      let total = this.currentPlatforms.reduce(function(prev, cur) {\r\n        return prev + cur.platform_total;\r\n      }, 0);\r\n      let result = this.currentAASummary.map(a => a.aa_total / total )\r\n      return result;\r\n    },\r\n    recommendedAAArray() {\r\n      let total = this.recommendedPlatforms.reduce(function(prev, cur) {\r\n        return prev + cur.platform_total;\r\n      }, 0);\r\n      let result = this.recommendedAASummary.map(a => a.aa_total / total )\r\n      return result;\r\n    },\r\n    alternativeAAArray() {\r\n      let total = this.alternativePlatforms.reduce(function(prev, cur) {\r\n        return prev + cur.platform_total;\r\n      }, 0);\r\n      let result = this.alternativeAASummary.map(a => a.aa_total / total )\r\n      return result;\r\n    },\r\n    chartData(){\r\n      return {\r\n        labels: this.nameSet,\r\n        datasets: [\r\n          {\r\n            data: this.RPArray,\r\n            backgroundColor: 'rgba(0,128,128,0.2)',\r\n            borderColor: 'rgba(0,128,128,1)',\r\n            borderWidth: 1,\r\n            label: \"Risk Profile\"\r\n          },\r\n          {\r\n            data: this.currentAAArray,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 1,\r\n            label: \"Current\"\r\n          },\r\n          {\r\n            data: this.recommendedAAArray,\r\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1,\r\n            label: \"Recommended\"\r\n          },\r\n          {\r\n            data: this.alternativeAAArray,\r\n            backgroundColor: 'rgba(255, 206, 86, 0.2)',\r\n            borderColor: 'rgba(255, 206, 86, 1)',\r\n            borderWidth: 1,\r\n            label: \"Alternative\"\r\n          },\r\n        ]\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    currentPlatforms: function () {\r\n      this.getAASummary();\r\n    },\r\n    recommendedPlatforms: function () {\r\n      this.getAASummary();\r\n    },\r\n    alternativePlatforms: function () {\r\n      this.getAASummary();\r\n    },\r\n    riskProfile: function () {\r\n      this.forceRerender();\r\n    },\r\n  },\r\n  methods: {\r\n    forceRerender(){\r\n      this.AAKey += 1;\r\n    },\r\n    getAASummary() {\r\n      for (let i=0; i < this.currentPlatforms.length; i++) {\r\n        let endpoint = `/api/scenarios/${this.scenarioId}/platforms/${this.currentPlatforms[i].id}/aasummary/`;\r\n        apiService(endpoint).then(data => {\r\n          this.currentAASummary = data.results;\r\n        });\r\n      }\r\n      for (let i=0; i < this.recommendedPlatforms.length; i++) {\r\n        let endpoint = `/api/scenarios/${this.scenarioId}/platforms/${this.recommendedPlatforms[i].id}/aasummary/`;\r\n        apiService(endpoint).then(data => {\r\n          this.recommendedAASummary = data.results;\r\n        });\r\n      }\r\n      for (let i=0; i < this.alternativePlatforms.length; i++) {\r\n        let endpoint = `/api/scenarios/${this.scenarioId}/platforms/${this.alternativePlatforms[i].id}/aasummary/`;\r\n        apiService(endpoint).then(data => {\r\n          this.alternativeAASummary = data.results;\r\n        });\r\n      }\r\n    },\r\n    getRPAANameData() {\r\n      let endpoint = `/api/activeriskprofilenames/`;\r\n      apiService(endpoint).then(data => {\r\n        this.RPAANames = data.results;\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getRPAANameData();\r\n    this.getAASummary();\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}