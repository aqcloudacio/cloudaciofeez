{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\AddInvestment.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\AddInvestment.vue","mtime":1599098952331},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AddInvestment.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <v-expansion-panel outline   @click.stop >\r\n      <v-expansion-panel-header class=\"pa-3\"   @click.stop   >\r\n      <v-row class=\"ma-0\" @click.stop>\r\n      <v-col :cols=\"7\" class=\"py-0\" @click.stop>\r\n        <v-combobox\r\n          v-model=\"newInvestment\"\r\n          :items=\"investmentList\"\r\n          @keyup.enter=\"delaySubmit\"\r\n          ref=\"combobox\"\r\n          no-data-text=\"Create a custom investment\"\r\n          solo dense\r\n          @keyup.space.prevent\r\n          @click.stop\r\n          hide-details=\"auto\"\r\n          label=\"Add an investment by typing its name\"\r\n          :search-input.sync=\"search\"\r\n          item-text=\"name\"\r\n          :filter=\"filterObject\">\r\n        <template v-slot:no-data>\r\n          <v-list-item>\r\n            <v-list-item-content>\r\n              <v-list-item-title>\r\n                No investments match \"<strong>{{ search }}</strong>\". Press <kbd>enter</kbd> to create a custom investment.\r\n              </v-list-item-title>\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n        </template>\r\n<!--\r\n        <template v-slot:selection='{ item }'>\r\n          <span class=\"pr-2\">\r\n\r\n              {{ item.name }} ({{ item.code }})\r\n            </span>\r\n        </template> -->\r\n        <template v-slot:item='{ item }'>\r\n          <v-list-item-content class=\"pr-2\">\r\n            <v-list-item-title v-text=\"item.name\"></v-list-item-title>\r\n          </v-list-item-content>\r\n          <v-spacer></v-spacer>\r\n          <v-chip v-if=\"item.code\" right outlined>\r\n            {{ item.code }}\r\n          </v-chip>\r\n        </template>\r\n      </v-combobox>\r\n      </v-col>\r\n      <v-col :cols=\"3\" class=\"py-0\">\r\n        <v-text-field\r\n          label=\"Amount\"\r\n          solo dense\r\n          hide-details=\"auto\"\r\n          type=\"number\"\r\n          @keyup.space.prevent\r\n          @click.stop\r\n          v-model=\"investmentAmount\" />\r\n      </v-col>\r\n      <v-col :cols=\"2\" class=\"py-0\">\r\n        <v-icon\r\n          color=\"teal\"\r\n          @click.stop\r\n          @click=\"delaySubmit\"\r\n          large\r\n        >mdi-check-circle-outline</v-icon>\r\n        <v-menu\r\n          top offset-y\r\n          :close-on-content-click=\"false\">\r\n          <template v-slot:activator=\"{ on }\">\r\n            <v-icon\r\n              color=\"teal\"\r\n              @click.stop\r\n              large\r\n              v-on=\"on\">\r\n                mdi-filter\r\n            </v-icon>\r\n          </template>\r\n          <v-list dense>\r\n            <template v-for=\"(item, idx) in filterItems\">\r\n              <v-list-item\r\n                :key=\"item.id\"\r\n                :disabled=\"item.disabled\">\r\n                <v-checkbox\r\n                  dense\r\n                  class='mt-0'\r\n                  hide-details\r\n                  @change=\"setSelected($event, item.id)\"\r\n                  v-model=\"item.selected\"\r\n                />\r\n                <v-list-item-title class=\"mt-1\">\r\n                  {{ item.name }}\r\n                </v-list-item-title>\r\n              </v-list-item>\r\n              <v-divider v-if=\"item.id===1\" :key=\"idx\" class=\"mx-4\"></v-divider>\r\n            </template>\r\n          </v-list>\r\n        </v-menu>\r\n      </v-col>\r\n    </v-row>\r\n  </v-expansion-panel-header>\r\n  </v-expansion-panel>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash'\r\nimport { apiService } from \"@/common/api.service.js\";\r\nimport { mapGetters } from \"vuex\";\r\nimport {\r\n  INVESTMENTNAME_ALL,\r\n} from \"@/store/actions.type\";\r\n\r\nexport default {\r\n  name: \"AddInvestment\",\r\n  inject: [\"platformId\", \"scenarioId\"],\r\n  data() {\r\n    return {\r\n      search: null,\r\n      newInvestment: null,\r\n      investmentAmount: null,\r\n      linkedInvestmentNames: [],\r\n      error: null,\r\n      next: null,\r\n      selected: [],\r\n      filterItems: [\r\n        {name: \"Show all\", selected: true, disabled: false, id: 1},\r\n        {name: \"Show fund-specific investments\", selected: false, disabled: true, id: 2},\r\n        {name: \"Show managed funds\", selected: true, disabled: false, id: 3},\r\n        {name: \"Show managed accounts\", selected: true, disabled: false, id: 4},\r\n        {name: \"Show listed investments\", selected: true, disabled: false, id: 5},\r\n        {name: \"Show other assets\", selected: true, disabled: false, id: 6},\r\n      ]\r\n    }\r\n  },\r\n  watch: {\r\n    activePlatform() {\r\n      this.setCheckBoxes();\r\n      this.getLinkedInvestmentNames();\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activePlatform\", \"investmentNames\"]),\r\n    nameIdOrNull() {\r\n      if (this.newInvestment.id != null) {\r\n        return this.newInvestment.id;\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    customName() {\r\n      if (this.newInvestment.id != null) {\r\n        return null\r\n      } else {\r\n        return this.newInvestment;\r\n      }\r\n    },\r\n    filteredList() {\r\n      // filters the whole unlinked investment list based on user input.\r\n      let list = [];\r\n      if (this.filterItems.find(x => x.id === 1).selected === true) {\r\n        list.push(...this.investmentNames);\r\n      }\r\n      if (this.filterItems.find(x => x.id === 3).selected === true) {\r\n        let f = _.filter(this.investmentNames, {investment_class: 'MF'});\r\n        list.push(...f);\r\n      }\r\n      if (this.filterItems.find(x => x.id === 4).selected === true) {\r\n        let f = _.filter(this.investmentNames, {investment_class: 'MA'});\r\n        list.push(...f);\r\n      }\r\n      if (this.filterItems.find(x => x.id === 5).selected === true) {\r\n        let f = _.filter(this.investmentNames, {investment_class: 'LISTED'});\r\n        list.push(...f);\r\n      }\r\n      if (this.filterItems.find(x => x.id === 6).selected === true) {\r\n        let f = _.filter(this.investmentNames, {investment_class: 'OTHER'});\r\n        list.push(...f);\r\n      }\r\n      return list\r\n    },\r\n    investmentList() {\r\n      // joins the linked investment names (if applicable) and the filtered full\r\n      // investment name list\r\n      let fullList = [];\r\n      if (this.filterItems.find(x => x.id === 2).selected === true) {\r\n        fullList.push(...this.linkedInvestmentNames);\r\n      }\r\n      if (this.filterItems.some(x => (x.id != 2) && (x.selected===true))) {\r\n        fullList.push(...this.filteredList);\r\n      }\r\n      return fullList\r\n    }\r\n  },\r\n  methods: {\r\n    filterObject(item, queryText) {\r\n        const textOne = item.name.toLowerCase()\r\n        const searchText = queryText.toLowerCase()\r\n\r\n        if (item.code) {\r\n          const textTwo = item.code.toLowerCase()\r\n          return textOne.indexOf(searchText) > -1 ||\r\n            textTwo.indexOf(searchText) > -1\r\n        } else {\r\n          return textOne.indexOf(searchText) > -1\r\n        }\r\n    },\r\n    nameAndCode(item) {\r\n      return item.name + item.code\r\n    },\r\n    setSelected(event, id) {\r\n      if (id===1){\r\n        for (let item of this.filterItems) {\r\n          if (item.id != 2) {\r\n            item.selected = event;\r\n          } else if (this.activePlatform.name.linked_investments) {\r\n            item.selected = event;\r\n          }\r\n        }\r\n      } else if (event === false) {\r\n        let idx = this.filterItems.findIndex(x => x.id === 1);\r\n        this.filterItems[idx].selected = false;\r\n      }\r\n    },\r\n    setCheckBoxes() {\r\n      let linkedInvIdx = this.filterItems.findIndex(x => x.id === 2);\r\n      if (this.activePlatform.name.linked_investments) {\r\n        this.filterItems[linkedInvIdx].selected = true;\r\n        this.filterItems[linkedInvIdx].disabled = false;\r\n        for (let item of this.filterItems) {\r\n          if (item.id != 2) {\r\n            item.selected = false;\r\n          }\r\n        }\r\n      } else {\r\n        this.setSelected(true,1);\r\n      }\r\n    },\r\n    getInvestmentNames() {\r\n      if (_.isEmpty(this.investmentNames)) {\r\n        this.$store.dispatch(INVESTMENTNAME_ALL)\r\n      }\r\n    },\r\n    getLinkedInvestmentNames() {\r\n      if (this.activePlatform.name.linked_investments) {\r\n        let endpoint = ''\r\n        if (this.next === null) {\r\n          endpoint = `/api/platformnames/${this.activePlatform.name.id}/investmentnames/`\r\n        } else {\r\n          endpoint = this.next;\r\n        }\r\n        apiService(endpoint, \"GET\").then(data => {\r\n          this.linkedInvestmentNames.push(...data.results);\r\n          if (data.next) {\r\n            this.next = data.next;\r\n            this.getLinkedInvestmentNames()\r\n          } else {\r\n            this.next = null;\r\n          }\r\n        });\r\n      }\r\n      // let endpoint = `/api/investmentname/`;\r\n      // apiService(endpoint, \"GET\").then(data => {\r\n      //   this.investmentList = data.results;\r\n      // });\r\n    },\r\n    delaySubmit() {\r\n      // Resolves a weird combobox bug where it does not update props until blur\r\n      this.$refs.combobox.blur();\r\n      this.$nextTick(() => {\r\n        this.onSubmit();\r\n      })\r\n    },\r\n    onSubmit() {\r\n      let endpoint = `/api/scenarios/${this.scenarioId}/platforms/${this.platformId}/investments/`;\r\n      if (this.newInvestment != null) {\r\n        apiService(endpoint, \"POST\", {\r\n          name_id: this.nameIdOrNull,\r\n          investment_class_id: null,\r\n          platform: this.platformId,\r\n          amount: this.investmentAmount,\r\n          custom_name: this.customName,\r\n        }).then(data => {\r\n          this.$emit(\"add-investment\", data);\r\n          this.newInvestment = null;\r\n          this.investmentAmount = null;\r\n        });\r\n        if (this.error) {\r\n          this.error = null;\r\n        }\r\n      } else {\r\n        this.error = \"\"\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getInvestmentNames();\r\n    // this.getInvestmentList();\r\n    // this.setCheckBoxes();\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}