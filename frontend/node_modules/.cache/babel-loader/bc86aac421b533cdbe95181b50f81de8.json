{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\RiskProfileTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\RiskProfileTable.vue","mtime":1600911510862},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RiskProfileTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <v-form  @submit.prevent=\"onSubmit\">\r\n    <v-container>\r\n      <v-row>\r\n        <v-col\r\n        :cols=\"6\">\r\n          <v-select\r\n              v-if=\"!editGroupName\"\r\n              :items=\"riskProfileGroups\"\r\n              item-text=\"name\"\r\n              item-value=\"id\"\r\n              v-model=\"shownRP\"\r\n              outlined dense hide-details>\r\n          </v-select>\r\n          <v-text-field\r\n            v-else\r\n            :value=\"shownRPObject.name\"\r\n            @change=\"newGroupName = $event\"\r\n            dense outlined\r\n            hide-details />\r\n        </v-col>\r\n        <v-col\r\n        :cols=\"1\">\r\n          <template v-if=\"canEdit\">\r\n            <v-btn\r\n              v-if=\"!editGroupName\"\r\n              color=\"green\" icon\r\n              @click=\"editGroupName = !editGroupName\">\r\n              <v-icon large>mdi-pencil-circle</v-icon>\r\n            </v-btn>\r\n            <v-btn\r\n              v-else\r\n              color=\"green\" icon\r\n              @click=\"updateGroupName()\">\r\n              <v-icon large>mdi-check-circle</v-icon>\r\n            </v-btn>\r\n          </template>\r\n        </v-col>\r\n        <v-col\r\n        :cols=\"2\">\r\n          <v-btn\r\n            :disabled=\"this.shownRP === this.activeUser.active_rp ? true : false\"\r\n            color=\"primary\"\r\n            @click=\"setActiveRP()\">\r\n            Set As Active\r\n          </v-btn>\r\n        </v-col>\r\n        <v-col\r\n        :cols=\"2\">\r\n          <AddRPGroup\r\n            :userID=\"activeUser.id\"\r\n            @add-rpgroup=\"addRPGroup\"/>\r\n        </v-col>\r\n        <v-col\r\n        :cols=\"1\">\r\n          <DeleteObj\r\n            v-if=\"canEdit\"\r\n            :objectType=\"'riskprofilegroup'\"\r\n            :objectToDelete=\"shownRPObject\"\r\n            @delete-object=\"deleteRPGroup($event)\"\r\n          />\r\n        </v-col>\r\n      </v-row>\r\n      <v-divider class =\"my-4\"/>\r\n      <v-row dense>\r\n        <v-col\r\n          :cols=\"2\">\r\n\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\">\r\n          <v-tooltip top>\r\n             <template v-slot:activator=\"{ on }\">\r\n              <v-card dense v-on=\"on\">\r\n                <v-card-text>\r\n                  {{ getAcronym(Object.values(AAName)[0]) }}\r\n                </v-card-text>\r\n              </v-card>\r\n            </template>\r\n            <span>{{ Object.values(AAName)[0] }}</span>\r\n          </v-tooltip>\r\n        </v-col>\r\n        <v-col\r\n          :cols=\"1\"\r\n          align-self=\"center\">\r\n          <AANameConfig\r\n            v-if=\"canEdit\"\r\n            :RPAANames=\"RPAANames\"/>\r\n        </v-col>\r\n      </v-row>\r\n      <v-row\r\n        v-for=\"profile in riskProfiles\"\r\n        :key=\"profile.id\"\r\n        dense>\r\n        <v-col\r\n          :cols=\"2\">\r\n            <v-text-field\r\n              :background-color=\"checkColor(profile)\"\r\n              @change=\"addToChanged(profile)\"\r\n              v-model=\"profile.name\"\r\n              dense outlined\r\n              :hint=\"checkHint(profile)\"\r\n              persistent-hint\r\n              hide-details=\"auto\" />\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\">\r\n            <v-text-field\r\n              @change=\"addToChanged(profile)\"\r\n              :value = \"getAAPercentage(AAName,profile)\"\r\n              @blur = \"setAAPercentage($event.target.value, AAName, profile)\"\r\n              class=\"allocationNumber\"\r\n              type=\"number\"\r\n              outlined dense hide-details/>\r\n        </v-col>\r\n        <v-col\r\n          :cols=\"1\">\r\n          <DeleteObj\r\n            v-if=\"canEdit\"\r\n            :objectType=\"'riskprofile'\"\r\n            :objectToDelete=\"profile\"\r\n            :shownRP=\"shownRP\"\r\n            @delete-object=\"getRiskProfiles\"\r\n            v-on=\"$listeners\"\r\n          />\r\n        </v-col>\r\n      </v-row>\r\n      <v-row v-if=\"canEdit\"\r\n        dense>\r\n        <v-col\r\n          :cols=\"2\">\r\n            <v-text-field\r\n              v-model=\"newRP.name\"\r\n              outlined dense hide-details/>\r\n        </v-col>\r\n        <v-col\r\n          v-for=\"AAName in nameSet\"\r\n          :key=\"Object.keys(AAName)[0]\">\r\n            <v-text-field\r\n              type=\"number\"\r\n              v-model=\"newRP.allocations[Object.keys(AAName)[0]]\"\r\n              outlined dense hide-details/>\r\n        </v-col>\r\n        <v-col\r\n          :cols=\"1\">\r\n          <v-btn type=\"button\" color=\"green\" dark dense\r\n            @click=\"addRP\">\r\n            <v-icon>\r\n              mdi-plus\r\n            </v-icon>\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n      <v-row v-if=\"riskProfiles.length && canEdit\">\r\n        <v-col :cols=\"2\">\r\n          <v-btn type=\"submit\" color=\"primary\" dark dense>Update All</v-btn>\r\n        </v-col>\r\n        <v-col :cols=\"2\">\r\n\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </v-form>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\nimport AANameConfig from \"@/components/AANameConfig.vue\";\r\nimport DeleteObj from \"@/components/DeleteObj.vue\";\r\nimport AddRPGroup from \"@/components/AddRPGroup.vue\";\r\nimport { mapGetters } from \"vuex\";\r\nimport {\r\n  USER_UPDATE\r\n} from \"@/store/actions.type\";\r\nimport {\r\n  SET_ACTIVE_USER_PROP\r\n} from \"@/store/mutations.type\";\r\n\r\nexport default {\r\n  name: \"RiskProfileTable\",\r\n  props: {\r\n    riskProfileGroups: {\r\n      type: Array,\r\n      required: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      newGroupName: \"\",\r\n      editGroupName: false,\r\n      riskProfiles: [],\r\n      RPAANames: [],\r\n      error: null,\r\n      shownRP: null,\r\n      changeList: [],\r\n      newRP: {\r\n        name:\"\",\r\n        order:null,\r\n        allocations:{},\r\n      },\r\n    };\r\n  },\r\n  components: {\r\n    AANameConfig,\r\n    DeleteObj,\r\n    AddRPGroup,\r\n\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activeUser\"]),\r\n    canEdit() {\r\n      if (this.isPracticeAdmin && this.isNotAFSLLimited && this.isNotDefaultTemplate ) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    isPracticeAdmin() {\r\n      if (this.riskProfileGroups && this.shownRP && this.shownRPObject.id) {\r\n        if (this.shownRPObject.active_practices.length > 0) {\r\n          return this.shownRPObject.active_practices.some(item => this.activeUser.admin_practices.includes(item));\r\n        } else {\r\n          return true\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    isNotDefaultTemplate() {\r\n      if (this.riskProfileGroups && this.shownRP) {\r\n        if (this.shownRPObject.template && this.shownRPObject.default) {\r\n          return false\r\n        } else {\r\n          return true\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    isNotAFSLLimited() {\r\n      if (this.riskProfileGroups && this.shownRP) {\r\n        if (this._.isEmpty(this.shownRPObject.afsls)) {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    shownRPObject() {\r\n      if (this.riskProfileGroups && this.shownRP) {\r\n          const i = this.riskProfileGroups.findIndex(item => item.id == this.shownRP);\r\n          if (i != -1) {\r\n            //The id is added to the array before the group data comes back from\r\n            // Profile view, so this avoids errors while it comes in.\r\n            return this.riskProfileGroups[i];\r\n          } else {\r\n            return {}\r\n          }\r\n      } else {\r\n        return {}\r\n      }\r\n    },\r\n    nameSet: function (){\r\n      let AANameList = [];\r\n      let checkList = []\r\n      for (let i = 0; i < this.RPAANames.length; i++) {\r\n        let found = false;\r\n        let aaName = this.RPAANames[i];\r\n          if (checkList.includes(aaName.custom_name)) {\r\n            found = true;\r\n          }\r\n          if (!found) {\r\n            let newAA = {};\r\n            newAA[aaName.id] = aaName.custom_name;\r\n            AANameList.push(newAA);\r\n            found = false;\r\n            checkList.push(aaName.custom_name);\r\n          }\r\n      }\r\n      return (AANameList)\r\n    }\r\n  },\r\n  watch: {\r\n    shownRP: function () {\r\n      this.getRPAANameData();\r\n      this.getRiskProfiles();\r\n    },\r\n  },\r\n  methods: {\r\n    getAcronym(n) {\r\n      // returns the first letters of each word in name as an abbreviation\r\n      let matches = n.match(/\\b(\\w)/g);\r\n      let acronym = matches.join('');\r\n      return acronym\r\n    },\r\n    checkHint(profile) {\r\n      if (!this.checkComplete(profile)) {\r\n        return \"Allocations do not equal 100%\"\r\n      }\r\n    },\r\n    checkColor(profile){\r\n      if (!this.checkComplete(profile)) {\r\n        return \"red lighten-4\"\r\n      }\r\n    },\r\n    checkComplete(profile) {\r\n      let value = profile.allocations.reduce( function (a,b) {\r\n        return parseFloat(a) + parseFloat(b.percentage);\r\n      }, 0);\r\n      if (value.toFixed(0) === '1') {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    updateGroupName(){\r\n      this.editGroupName = !this.editGroupName;\r\n      if (this.newGroupName != '') {\r\n        let endpoint = `/api/riskprofilegroups/${this.shownRPObject.id}/`;\r\n        apiService(endpoint, \"PATCH\", {\r\n          name: this.newGroupName,\r\n        }).then(data => {\r\n          this.$emit('update-rpgroup', data);\r\n          this.newGroupName = \"\";\r\n        })\r\n      }\r\n    },\r\n    deleteRPGroup(data) {\r\n      this.$emit('delete-rpgroup', data)\r\n      this.riskProfiles = [];\r\n    },\r\n    setActiveRP() {\r\n      this.$store.commit(SET_ACTIVE_USER_PROP, {\r\n        'prop': 'active_rp',\r\n        'value': this.shownRP\r\n      })\r\n      this.$store.dispatch(USER_UPDATE);\r\n    },\r\n    addRPGroup(data){\r\n      this.$emit('add-rpgroup')\r\n      this.shownRP = data.id;\r\n    },\r\n    addToChanged(profile) {\r\n      if (!(this.changeList.includes(profile))) {\r\n        this.changeList.push(profile);\r\n      } else {\r\n        const i = this.changeList.findIndex(item => item.id === profile.id);\r\n        this.changeList.splice(i, 1);\r\n        this.changeList.push(profile);\r\n      }\r\n    },\r\n    setAAPercentage(event, AAName, riskProfile) {\r\n      const i = this.riskProfiles.findIndex(item => item.id === riskProfile.id);\r\n      const aaID = Object.keys(AAName)[0];\r\n      let found = false;\r\n      for (let x=0; x < this.riskProfiles[i].allocations.length; x++){\r\n        found = false;\r\n          if (this.riskProfiles[i].allocations[x].name.id == aaID) {\r\n            // event = event.split(\"%\").pop();\r\n            this.riskProfiles[i].allocations[x].percentage = event/100;\r\n            found = true;\r\n            break;\r\n          }\r\n      }\r\n      if (!found) {\r\n        let newAllocation = {}\r\n        newAllocation.name = {}\r\n        newAllocation.name.id = aaID;\r\n        newAllocation.percentage = event/100;\r\n        newAllocation.riskprofile = riskProfile.id;\r\n        newAllocation.id = null;\r\n        this.riskProfiles[i].allocations.push(newAllocation);\r\n      }\r\n    },\r\n    getAAPercentage(AAName, riskProfile) {\r\n      let total = 0\r\n      for (let i=0; i < riskProfile.allocations.length; i++) {\r\n        // Test if the custom_name for the risk profile matches the columm header\r\n        if (riskProfile.allocations[i].name.custom_name === Object.values(AAName)[0]) {\r\n          let percentage = Number(riskProfile.allocations[i].percentage)\r\n          if (percentage > 0) {\r\n            // Add percentages together for merged RP AA names\r\n            total += percentage;\r\n          }\r\n        }\r\n      }\r\n      return (total*100).toFixed(2)\r\n    },\r\n    getRiskProfiles() {\r\n      if (this.shownRP) {\r\n        let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/`;\r\n        apiService(endpoint).then(data => {\r\n          this.riskProfiles = data.results;\r\n        });\r\n      }\r\n    },\r\n    getRPAANameData() {\r\n      if (this.shownRP) {\r\n        let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofilenames/`;\r\n        apiService(endpoint).then(data => {\r\n          this.RPAANames = data.results;\r\n        });\r\n      }\r\n    },\r\n    addRP() {\r\n      if (this.newRP.name) {\r\n        let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/`;\r\n        apiService(endpoint, \"POST\", {\r\n          name: this.newRP.name,\r\n          group: this.shownRP,\r\n          order: this.newRP.order,\r\n        }).then(data => {\r\n          this.addAA(data.id);\r\n        });\r\n        if (this.error) {\r\n          this.error = null;\r\n        }\r\n      } else {\r\n        this.error = \"You must enter a name for the new risk profile.\";\r\n      }\r\n    },\r\n    addAA(id) {\r\n      if (this._.isEmpty(this.newRP.allocations)) {\r\n        this.getRiskProfiles();\r\n        this.newRP.name=\"\";\r\n        this.newRP.order=null;\r\n      } else {\r\n        for (const [key, value] of Object.entries(this.newRP.allocations)) {\r\n          let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/${id}/aa/`;\r\n          apiService(endpoint, \"POST\", {\r\n            name_id: key,\r\n            percentage: value/100,\r\n            riskprofile: id\r\n          }).then(() => {\r\n            this.getRiskProfiles();\r\n            this.newRP.name=\"\";\r\n            this.newRP.order=null;\r\n            this.newRP.allocations = {};\r\n          });\r\n        }\r\n      }\r\n    },\r\n    onSubmit() {\r\n      if (this.changeList) {\r\n        for (let i=0; i < this.changeList.length; i++) {\r\n          let endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/${this.changeList[i].id}/`;\r\n          apiService(endpoint, \"PATCH\", {\r\n            name: this.changeList[i].name,\r\n            group: this.changeList[i].group,\r\n            order: this.changeList[i].order,\r\n          }).then(data => {\r\n            this.updateAA(data.id, this.changeList[i]);\r\n          });\r\n        };\r\n      };\r\n    },\r\n    updateAA(profileID, profile) {\r\n      for (let i=0; i < profile.allocations.length; i++) {\r\n        let endpoint = '';\r\n        let method = '';\r\n        if (profile.allocations[i].id == null) {\r\n          endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/${profileID}/aa/`;\r\n          method = \"POST\"\r\n        } else {\r\n          endpoint = `/api/riskprofilegroups/${this.shownRP}/riskprofiles/${profileID}/aa/${profile.allocations[i].id}/`;\r\n          method = \"PATCH\"\r\n        };\r\n        apiService(endpoint, method, {\r\n          id: profile.allocations[i].id,\r\n          name_id: profile.allocations[i].name.id,\r\n          percentage: profile.allocations[i].percentage,\r\n          riskprofile: profileID\r\n        }).then(() => {\r\n          this.getRiskProfiles();\r\n          this.changeList=[];\r\n        });\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.shownRP = this.activeUser.active_rp;\r\n    this.getRPAANameData();\r\n    this.getRiskProfiles();\r\n  }\r\n};\r\n</script>\r\n<style media=\"screen\" >\r\n.allocationNumber input[type='number'] {\r\n  -moz-appearance:textfield;\r\n}\r\n.allocationNumber input::-webkit-outer-spin-button,\r\n.allocationNumber input::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n}\r\n.allocationNumber input {\r\n  font-size: .8em;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}