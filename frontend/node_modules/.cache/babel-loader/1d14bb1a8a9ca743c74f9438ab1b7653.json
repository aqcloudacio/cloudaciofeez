{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\PlatformAAChartSummary.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\PlatformAAChartSummary.vue","mtime":1601437893462},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxcRmVlelxcZmVlelxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFxGZWV6XFxmZWV6XFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBBQUJhckNoYXJ0IGZyb20gIkAvY29tcG9uZW50cy9BQUJhckNoYXJ0LnZ1ZSI7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IE1lcmdlUlBBbGxvY2F0aW9ucyBmcm9tICJAL2NvbXBvbmVudHMvbWl4aW5zL01lcmdlUlBBbGxvY2F0aW9ucy5qcyI7CmltcG9ydCBNZXJnZUFBQWxsb2NhdGlvbnMgZnJvbSAiQC9jb21wb25lbnRzL21peGlucy9NZXJnZUFBQWxsb2NhdGlvbnMuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBsYXRmb3JtQUFDaGFydFN1bW1hcnkiLAogIG1peGluczogW01lcmdlUlBBbGxvY2F0aW9ucywgTWVyZ2VBQUFsbG9jYXRpb25zXSwKICBwcm9wczoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0T3B0aW9uczogewogICAgICAgIHNjYWxlczogewogICAgICAgICAgeUF4ZXM6IFt7CiAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsCiAgICAgICAgICAgICAgbWF4VGlja3NMaW1pdDogNiwKICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2sodmFsdWUpIHsKICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS50b0xvY2FsZVN0cmluZygnZW4tVVMnLCB7CiAgICAgICAgICAgICAgICAgIHN0eWxlOiAncGVyY2VudCcKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfV0sCiAgICAgICAgICB4QXhlczogW3sKICAgICAgICAgICAgdGlja3M6IHsKICAgICAgICAgICAgICBtYXhSb3RhdGlvbjogMCwKICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2sodmFsdWUpIHsKICAgICAgICAgICAgICAgIHZhciBtYXRjaGVzID0gdmFsdWUubWF0Y2goL1xiKFx3KS9nKTsKICAgICAgICAgICAgICAgIHZhciBhY3JvbnltID0gbWF0Y2hlcy5qb2luKCcnKTsKICAgICAgICAgICAgICAgIHJldHVybiBhY3JvbnltOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfV0KICAgICAgICB9LAogICAgICAgIHRvb2x0aXBzOiB7CiAgICAgICAgICBjYWxsYmFja3M6IHsKICAgICAgICAgICAgbGFiZWw6IGZ1bmN0aW9uIGxhYmVsKHRvb2x0aXBJdGVtLCBkYXRhKSB7CiAgICAgICAgICAgICAgdmFyIGxhYmVsID0gZGF0YS5kYXRhc2V0c1t0b29sdGlwSXRlbS5kYXRhc2V0SW5kZXhdLmxhYmVsIHx8ICcnOwoKICAgICAgICAgICAgICBpZiAobGFiZWwpIHsKICAgICAgICAgICAgICAgIGxhYmVsICs9ICc6ICc7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICB2YXIgdmFsID0gdG9vbHRpcEl0ZW0ueUxhYmVsOwogICAgICAgICAgICAgIHZhbCA9IHZhbC50b0xvY2FsZVN0cmluZygnZW4tVVMnLCB7CiAgICAgICAgICAgICAgICBzdHlsZTogJ3BlcmNlbnQnLAogICAgICAgICAgICAgICAgbWluaW11bUZyYWN0aW9uRGlnaXRzOiAyCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgbGFiZWwgKz0gdmFsOwogICAgICAgICAgICAgIHJldHVybiBsYWJlbDsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIGRpc3BsYXk6IHRydWUsCiAgICAgICAgICB0ZXh0OiAiQXNzZXQgQWxsb2NhdGlvbiIKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgcG9zaXRpb246ICd0b3AnLAogICAgICAgICAgbGFiZWxzOiB7CiAgICAgICAgICAgIGZvbnRDb2xvcjogJ2dyZXknCiAgICAgICAgICB9LAogICAgICAgICAgb25Ib3ZlcjogZnVuY3Rpb24gb25Ib3ZlcihlKSB7CiAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJzsKICAgICAgICAgIH0sCiAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGUsIGxlZ2VuZEl0ZW0pIHsKICAgICAgICAgICAgdmFyIGluZGV4ID0gbGVnZW5kSXRlbS5kYXRhc2V0SW5kZXg7CiAgICAgICAgICAgIHZhciBjaSA9IHRoaXMuY2hhcnQ7CiAgICAgICAgICAgIHZhciBtZXRhID0gY2kuZ2V0RGF0YXNldE1ldGEoaW5kZXgpOwoKICAgICAgICAgICAgaWYgKG1ldGEuaGlkZGVuID09IHRydWUpIHsKICAgICAgICAgICAgICBtZXRhLmhpZGRlbiA9IGZhbHNlOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG1ldGEuaGlkZGVuID0gdHJ1ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2kudXBkYXRlKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBob3ZlcjogewogICAgICAgICAgb25Ib3ZlcjogZnVuY3Rpb24gb25Ib3ZlcihlKSB7CiAgICAgICAgICAgIHZhciBwb2ludCA9IHRoaXMuZ2V0RWxlbWVudEF0RXZlbnQoZSk7CiAgICAgICAgICAgIGlmICghcG9pbnQubGVuZ3RoKSBlLnRhcmdldC5zdHlsZS5jdXJzb3IgPSAnZGVmYXVsdCc7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgQUFCYXJDaGFydDogQUFCYXJDaGFydAogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWyJhY3RpdmVTY2VuYXJpbyIsICJhY3RpdmVQbGF0Zm9ybSIsICJhY3RpdmVQbGF0Zm9ybUFBIl0pLCB7CiAgICBBQU5hbWVzOiBmdW5jdGlvbiBBQU5hbWVzKCkgewogICAgICB2YXIgY3VzdG9tX25hbWVzID0gdGhpcy5hY3RpdmVQbGF0Zm9ybUFBLm1hcChmdW5jdGlvbiAoYSkgewogICAgICAgIHJldHVybiBhLmN1c3RvbV9uYW1lOwogICAgICB9KTsKCiAgICAgIHZhciBhYW5hbWVzID0gX3RvQ29uc3VtYWJsZUFycmF5KG5ldyBTZXQoY3VzdG9tX25hbWVzKSk7CgogICAgICByZXR1cm4gYWFuYW1lczsKICAgIH0sCiAgICBSUEFycmF5OiBmdW5jdGlvbiBSUEFycmF5KCkgewogICAgICAvLyBmaW5kcyBhbnkgZHVwbGljYXRlIFJQX0FBX05hbWVzIGFuZCBtZXJnZXMgdGhlaXIgdmFsdWVzCiAgICAgIGlmICghdGhpcy5fLmlzRW1wdHkodGhpcy5hY3RpdmVTY2VuYXJpby5yaXNrX3Byb2ZpbGUpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG1lcmdlUlBBbGxvY2F0aW9ucyh0aGlzLkFBTmFtZXMsIHRoaXMuYWN0aXZlU2NlbmFyaW8ucmlza19wcm9maWxlLmFsbG9jYXRpb25zKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBBQUFycmF5OiBmdW5jdGlvbiBBQUFycmF5KCkgewogICAgICByZXR1cm4gdGhpcy4kbWVyZ2VBQUFsbG9jYXRpb25zKHRoaXMuQUFOYW1lcywgdGhpcy5hY3RpdmVQbGF0Zm9ybUFBLCAnYWFfdG90YWxfcGVyY19wbGF0Zm9ybScpOwogICAgfSwKICAgIGNoYXJ0RGF0YTogZnVuY3Rpb24gY2hhcnREYXRhKCkgewogICAgICByZXR1cm4gewogICAgICAgIGxhYmVsczogdGhpcy5BQU5hbWVzLAogICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgZGF0YTogdGhpcy5SUEFycmF5LAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLDEyOCwxMjgsMC4yKScsCiAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMCwxMjgsMTI4LDEpJywKICAgICAgICAgIGJvcmRlcldpZHRoOiAxLAogICAgICAgICAgbGFiZWw6ICJSaXNrIFByb2ZpbGUiCiAgICAgICAgfSwgewogICAgICAgICAgZGF0YTogdGhpcy5BQUFycmF5LAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgyNTUsIDk5LCAxMzIsIDAuMiknLAogICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwgOTksIDEzMiwgMSknLAogICAgICAgICAgYm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICBsYWJlbDogdGhpcy5hY3RpdmVQbGF0Zm9ybS5zdHJfbmFtZQogICAgICAgIH1dCiAgICAgIH07CiAgICB9CiAgfSksCiAgbWV0aG9kczoge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9Cn07"},{"version":3,"sources":["PlatformAAChartSummary.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <v-card v-if=\"chartData != null\" >\r\n      <AABarChart\r\n        :chartData=\"chartData\"\r\n        :options=\"chartOptions\"\r\n        :height=\"150\"\r\n        ref=\"AABarChart\"\r\n      >\r\n    </AABarChart>\r\n\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport AABarChart from \"@/components/AABarChart.vue\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nimport MergeRPAllocations from \"@/components/mixins/MergeRPAllocations.js\"\r\nimport MergeAAAllocations from \"@/components/mixins/MergeAAAllocations.js\"\r\n\r\nexport default {\r\n  name: \"PlatformAAChartSummary\",\r\n  mixins: [MergeRPAllocations, MergeAAAllocations],\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n      chartOptions: {\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 6,\r\n                    callback: function (value) {\r\n                      return value.toLocaleString('en-US', {style:'percent'});\r\n                    }\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                  maxRotation: 0 ,\r\n                  callback: function (value) {\r\n                    let matches = value.match(/\\b(\\w)/g);\r\n                    let acronym = matches.join('');\r\n                    return acronym\r\n                  }\r\n                }\r\n            }],\r\n        },\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function(tooltipItem, data) {\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              if (label) {\r\n                label += ': ';\r\n              }\r\n              let val = tooltipItem.yLabel;\r\n              val = val.toLocaleString('en-US', {style:'percent', minimumFractionDigits:2});\r\n              label += val\r\n              return label\r\n            }\r\n          }\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Asset Allocation\",\r\n        },\r\n        legend: {\r\n          position: 'top',\r\n          labels: {\r\n            fontColor: 'grey'\r\n          },\r\n          onHover: function(e) {\r\n            e.target.style.cursor = 'pointer';\r\n          },\r\n          onClick: function(e, legendItem) {\r\n            var index = legendItem.datasetIndex;\r\n            var ci = this.chart;\r\n            var meta = ci.getDatasetMeta(index);\r\n\r\n              if (meta.hidden == true) {\r\n                meta.hidden = false\r\n              } else {\r\n                meta.hidden = true;\r\n              }\r\n            ci.update();\r\n          }\r\n        },\r\n        hover: {\r\n         onHover: function(e) {\r\n            var point = this.getElementAtEvent(e);\r\n            if (!point.length) e.target.style.cursor = 'default';\r\n         }\r\n       }\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    AABarChart\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"activeScenario\", \"activePlatform\", \"activePlatformAA\"]),\r\n    AANames() {\r\n      let custom_names = this.activePlatformAA.map(a => a.custom_name);\r\n      let aanames = [...new Set(custom_names)];\r\n      return aanames\r\n    },\r\n    RPArray() {\r\n      // finds any duplicate RP_AA_Names and merges their values\r\n      if (!this._.isEmpty(this.activeScenario.risk_profile)) {\r\n        return this.$mergeRPAllocations(this.AANames, this.activeScenario.risk_profile.allocations)\r\n\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    AAArray() {\r\n      return this.$mergeAAAllocations(this.AANames, this.activePlatformAA,'aa_total_perc_platform')\r\n    },\r\n    chartData(){\r\n      return {\r\n        labels: this.AANames,\r\n        datasets: [\r\n          {\r\n            data: this.RPArray,\r\n            backgroundColor: 'rgba(0,128,128,0.2)',\r\n            borderColor: 'rgba(0,128,128,1)',\r\n            borderWidth: 1,\r\n            label: \"Risk Profile\"\r\n          },\r\n          {\r\n            data: this.AAArray,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 1,\r\n            label: this.activePlatform.str_name\r\n          }\r\n        ]\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n  },\r\n  mounted() {\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}