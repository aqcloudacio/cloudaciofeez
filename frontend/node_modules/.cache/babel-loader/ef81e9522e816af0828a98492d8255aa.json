{"remainingRequest":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\Notifications.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\src\\components\\Notifications.vue","mtime":1590545560879},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Feez\\feez\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBhcGlTZXJ2aWNlIH0gZnJvbSAiQC9jb21tb24vYXBpLnNlcnZpY2UuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIHVzZXI6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBub3RpZmljYXRpb25zOiBudWxsLAogICAgICBhY3RpdmVfcHJhY3RpY2U6IHRydWUKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgdmlzaWJsZU5vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIHZpc2libGVOb3RpZmljYXRpb25zKCkgewogICAgICBpZiAodGhpcy5ub3RpZmljYXRpb25zKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm90aWZpY2F0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgIHJldHVybiBpLnZpc2libGUgPT0gdHJ1ZTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBsYXN0VGhyZWVOb3RpZmljYXRpb25zOiBmdW5jdGlvbiBsYXN0VGhyZWVOb3RpZmljYXRpb25zKCkgewogICAgICByZXR1cm4gdGhpcy52aXNpYmxlTm90aWZpY2F0aW9ucy5zbGljZSgwLCAzKTsKICAgIH0sCiAgICB1bnJlYWROb3RpZmljYXRpb25zOiBmdW5jdGlvbiB1bnJlYWROb3RpZmljYXRpb25zKCkgewogICAgICByZXR1cm4gdGhpcy52aXNpYmxlTm90aWZpY2F0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKGkpIHsKICAgICAgICByZXR1cm4gaS5yZWFkID09IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBudW1Ob3RpZmljYXRpb25zOiBmdW5jdGlvbiBudW1Ob3RpZmljYXRpb25zKCkgewogICAgICBpZiAodGhpcy51bnJlYWROb3RpZmljYXRpb25zLmxlbmd0aCA+IDApIHsKICAgICAgICByZXR1cm4gdGhpcy51bnJlYWROb3RpZmljYXRpb25zLmxlbmd0aDsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0Tm90aWZpY2F0aW9uczogZnVuY3Rpb24gZ2V0Tm90aWZpY2F0aW9ucygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBlbmRwb2ludCA9ICIvYXBpL25vdGlmaWNhdGlvbnMvIjsKICAgICAgYXBpU2VydmljZShlbmRwb2ludCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIF90aGlzLm5vdGlmaWNhdGlvbnMgPSBkYXRhLnJlc3VsdHM7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbnlOb3RpZmljYXRpb246IGZ1bmN0aW9uIGRlbnlOb3RpZmljYXRpb24obm90aWZpY2F0aW9uKSB7CiAgICAgIHRoaXMuc2V0SW52aXNpYmxlKG5vdGlmaWNhdGlvbik7CiAgICB9LAogICAgc2V0QWN0aXZlUHJhY3RpY2U6IGZ1bmN0aW9uIHNldEFjdGl2ZVByYWN0aWNlKG5vdGlmaWNhdGlvbikgewogICAgICBpZiAobm90aWZpY2F0aW9uLmFjdGl2ZV9wcmFjdGljZSA9PSB0cnVlKSB7CiAgICAgICAgcmV0dXJuIG5vdGlmaWNhdGlvbi5wcmFjdGljZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy51c2VyLmFjdGl2ZV9wcmFjdGljZTsKICAgICAgfQogICAgfSwKICAgIHJlbW92ZUZyb21QZW5kaW5nOiBmdW5jdGlvbiByZW1vdmVGcm9tUGVuZGluZyhub3RpZmljYXRpb24pIHsKICAgICAgdmFyIHJlc3VsdCA9IHRoaXMudXNlci5wZW5kaW5nX3ByYWN0aWNlcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHsKICAgICAgICByZXR1cm4gaSAhPSBub3RpZmljYXRpb24ucHJhY3RpY2U7CiAgICAgIH0pOwoKICAgICAgaWYgKHJlc3VsdCkgewogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgIH0KICAgIH0sCiAgICBhZGRUb1ByYWN0aWNlczogZnVuY3Rpb24gYWRkVG9QcmFjdGljZXMobm90aWZpY2F0aW9uKSB7CiAgICAgIHRoaXMudXNlci5wcmFjdGljZXMucHVzaChub3RpZmljYXRpb24ucHJhY3RpY2UpOwogICAgICByZXR1cm4gdGhpcy51c2VyLnByYWN0aWNlczsKICAgIH0sCiAgICBhY2NlcHROb3RpZmljYXRpb246IGZ1bmN0aW9uIGFjY2VwdE5vdGlmaWNhdGlvbihub3RpZmljYXRpb24pIHsKICAgICAgdGhpcy5zZXRJbnZpc2libGUobm90aWZpY2F0aW9uKTsKCiAgICAgIGlmIChub3RpZmljYXRpb24udHlwZSA9PSAncHJhY3RpY2VfaW52aXRlJykgewogICAgICAgIHRoaXMuYWNjZXB0UHJhY3RpY2VJbnZpdGUobm90aWZpY2F0aW9uKTsKICAgICAgfQogICAgfSwKICAgIGFjY2VwdFByYWN0aWNlSW52aXRlOiBmdW5jdGlvbiBhY2NlcHRQcmFjdGljZUludml0ZShub3RpZmljYXRpb24pIHsKICAgICAgdmFyIGVuZHBvaW50ID0gIi9hcGkvdXNlci8iLmNvbmNhdCh0aGlzLnVzZXIuaWQsICIvIik7CiAgICAgIGFwaVNlcnZpY2UoZW5kcG9pbnQsICJQQVRDSCIsIHsKICAgICAgICBhY3RpdmVfcHJhY3RpY2U6IHRoaXMuc2V0QWN0aXZlUHJhY3RpY2Uobm90aWZpY2F0aW9uKSwKICAgICAgICBwcmFjdGljZXM6IHRoaXMuYWRkVG9QcmFjdGljZXMobm90aWZpY2F0aW9uKSwKICAgICAgICBwZW5kaW5nX3ByYWN0aWNlczogdGhpcy5yZW1vdmVGcm9tUGVuZGluZyhub3RpZmljYXRpb24pCiAgICAgIH0pOwogICAgfSwKICAgIHNldEFzUmVhZDogZnVuY3Rpb24gc2V0QXNSZWFkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBpZHMgPSBbXTsKICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlOwogICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTsKICAgICAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSB0aGlzLnVucmVhZE5vdGlmaWNhdGlvbnNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7CiAgICAgICAgICB2YXIgaXRlbSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgaWRzLnB1c2goaXRlbS5pZCk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7CiAgICAgICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuICE9IG51bGwpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpOwogICAgICAgICAgfQogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHsKICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcCgpIHsKICAgICAgICB2YXIgaWQgPSBfaWRzW19pXTsKCiAgICAgICAgdmFyIHJlc3VsdCA9IF90aGlzMi5ub3RpZmljYXRpb25zLmZpbmQoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgIHJldHVybiBpLmlkID09PSBpZDsKICAgICAgICB9KTsKCiAgICAgICAgcmVzdWx0LnJlYWQgPSB0cnVlOwogICAgICAgIHZhciBlbmRwb2ludCA9ICIvYXBpL25vdGlmaWNhdGlvbnMvIi5jb25jYXQoaWQsICIvIik7CiAgICAgICAgYXBpU2VydmljZShlbmRwb2ludCwgIlBBVENIIiwgewogICAgICAgICAgcmVhZDogdHJ1ZQogICAgICAgIH0pOwogICAgICB9OwoKICAgICAgZm9yICh2YXIgX2kgPSAwLCBfaWRzID0gaWRzOyBfaSA8IF9pZHMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgX2xvb3AoKTsKICAgICAgfQogICAgfSwKICAgIHNldEludmlzaWJsZTogZnVuY3Rpb24gc2V0SW52aXNpYmxlKG5vdGlmaWNhdGlvbikgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBlbmRwb2ludCA9ICIvYXBpL25vdGlmaWNhdGlvbnMvIi5jb25jYXQobm90aWZpY2F0aW9uLmlkLCAiLyIpOwogICAgICBhcGlTZXJ2aWNlKGVuZHBvaW50LCAiUEFUQ0giLCB7CiAgICAgICAgdmlzaWJsZTogZmFsc2UKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIF90aGlzMy4kc2V0KG5vdGlmaWNhdGlvbiwgJ3Zpc2libGUnLCBkYXRhLnZpc2libGUpOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldE5vdGlmaWNhdGlvbnMoKTsKICB9Cn07"},{"version":3,"sources":["Notifications.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <v-menu\r\n    :close-on-content-click=\"false\"\r\n    offset-y\r\n    max-width=\"400px\"\r\n    >\r\n    <template v-slot:activator=\"{ on }\">\r\n      <v-btn icon v-on=\"on\" @click=\"setAsRead\">\r\n        <v-badge\r\n          :value=\"numNotifications != null\"\r\n          :content=\"numNotifications\"\r\n          overlap >\r\n          <v-icon >mdi-bell-outline</v-icon>\r\n        </v-badge>\r\n      </v-btn>\r\n    </template>\r\n    <v-card>\r\n      <template\r\n        v-for=\"(notification,index) in lastThreeNotifications\">\r\n        <v-container :key=\"notification.id\" class=\"pa-0\">\r\n          <v-list three-line class=\"pb-0\">\r\n            <v-list-item>\r\n              <v-list-item-content >\r\n                <v-list-item-title>{{notification.title}}</v-list-item-title>\r\n                <v-list-item-subtitle>{{notification.content}}</v-list-item-subtitle>\r\n              </v-list-item-content>\r\n            </v-list-item>\r\n          </v-list>\r\n          <v-list  class=\"pa-0\">\r\n            <v-list-item  >\r\n              <v-list-item-action>\r\n                <v-switch v-model=\"notification.active_practice\" color=\"teal\"></v-switch>\r\n              </v-list-item-action>\r\n              <v-list-item-title>Set as active practice</v-list-item-title>\r\n            </v-list-item>\r\n          </v-list>\r\n          <v-card-actions>\r\n            <v-btn color=\"primary\" text @click=\"acceptNotification(notification)\">Accept</v-btn>\r\n            <v-btn text @click=\"denyNotification(notification)\">Deny</v-btn>\r\n          </v-card-actions>\r\n          <v-divider v-if=\"index < (notifications.length-1)\" />\r\n        </v-container>\r\n      </template>\r\n    </v-card>\r\n  </v-menu>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\n\r\nexport default {\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      required: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      notifications: null,\r\n      active_practice: true,\r\n    }\r\n  },\r\n  computed: {\r\n    visibleNotifications() {\r\n      if (this.notifications) {\r\n        return this.notifications.filter(i => i.visible == true)\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    lastThreeNotifications() {\r\n      return this.visibleNotifications.slice(0,3)\r\n    },\r\n    unreadNotifications() {\r\n      return this.visibleNotifications.filter(i => i.read == false)\r\n    },\r\n    numNotifications() {\r\n      if (this.unreadNotifications.length > 0) {\r\n        return this.unreadNotifications.length\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getNotifications() {\r\n      let endpoint = \"/api/notifications/\";\r\n      apiService(endpoint).then(data => {\r\n        this.notifications = data.results;\r\n      });\r\n    },\r\n    denyNotification(notification){\r\n      this.setInvisible(notification)\r\n    },\r\n    setActivePractice(notification) {\r\n      if (notification.active_practice == true) {\r\n        return notification.practice;\r\n      } else {\r\n        return this.user.active_practice;\r\n      }\r\n    },\r\n    removeFromPending(notification) {\r\n      let result = this.user.pending_practices.filter(i => i != notification.practice)\r\n      if (result) {\r\n        return result\r\n      }\r\n    },\r\n    addToPractices(notification) {\r\n      this.user.practices.push(notification.practice);\r\n      return this.user.practices\r\n    },\r\n    acceptNotification(notification) {\r\n      this.setInvisible(notification);\r\n      if (notification.type == 'practice_invite'){\r\n        this.acceptPracticeInvite(notification);\r\n      }\r\n    },\r\n    acceptPracticeInvite(notification) {\r\n      let endpoint = `/api/user/${this.user.id}/`;\r\n      apiService(endpoint, \"PATCH\" , {\r\n        active_practice: this.setActivePractice(notification),\r\n        practices: this.addToPractices(notification),\r\n        pending_practices: this.removeFromPending(notification),\r\n      });\r\n    },\r\n    setAsRead() {\r\n      let ids = []\r\n      for (let item of this.unreadNotifications) {\r\n        ids.push(item.id);\r\n      }\r\n      for (let id of ids) {\r\n        let result = this.notifications.find(i => i.id === id)\r\n        result.read = true;\r\n        let endpoint = `/api/notifications/${id}/`;\r\n        apiService(endpoint, \"PATCH\", {\r\n          read: true,\r\n        });\r\n      }\r\n    },\r\n    setInvisible(notification) {\r\n      let endpoint = `/api/notifications/${notification.id}/`;\r\n      apiService(endpoint, \"PATCH\", {\r\n        visible: false,\r\n      }).then(data => {\r\n        this.$set(notification,'visible', data.visible);\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getNotifications();\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n</style>\r\n"],"sourceRoot":"src/components"}]}